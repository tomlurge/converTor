<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="main" name="convertor">
    <property name="projectName" value="convertor" />
    <property name="release.version" value="0.2-dev" />
    <property name="root.dir" location="" />
    <property name="src.dir" location="src" />
    <property name="src.schema.dir" location="schema" />
    <property name="src.docs.dir" location="docs" />
    <property name="build.dir" location="build" />
    <property name="dist.dir" location="dist" />
    <property name="dist.lib.dir" location="dist/lib" />
    <property name="dist.schema.dir" location="dist/schema" />
    <property name="dist.docs.dir" location="dist/docs" />
    <property name="lib.dir" value="lib" />
    <property name="schema.dir" location="schema" />
    <property name="main-class" value="convertor.Base" />
    <property name="source-and-target-java-version" value="1.7" />

    <!-- External libraries classpath.
         Exclude test frameworks, sources and javadoc -->
    <path id="classpath">
        <fileset dir="${basedir}/">
            <include name="${lib.dir}/*.jar" />
            <exclude name="${lib.dir}/hamcrest*.jar"/>
            <exclude name="${lib.dir}/junit*.jar"/>
            <exclude name="${lib.dir}/*sources.jar"/>
            <exclude name="${lib.dir}/*javadoc.jar"/>
        </fileset>
    </path>

    <!-- Construct the external libraries classpath name -->
    <pathconvert property="classpath.name" pathsep=" ">
        <path refid="classpath" />
        <mapper>
            <chainedmapper>
                <flattenmapper />
                <globmapper from="*.jar" to="lib/*.jar" />
            </chainedmapper>
        </mapper>
    </pathconvert>


    <!-- Targets -->

    <target name="init">
        <mkdir dir="${build.dir}" />
    </target>


    <!-- To work with external libraries, needs classpath to compile -->
    <target name="compile"
            depends="init"
            description="compile the source ">
        <javac source="${source-and-target-java-version}"
               target="${source-and-target-java-version}"
               includeantruntime="false"
               srcdir="${src.dir}"
               destdir="${build.dir}"
               classpathref="classpath" />
    </target>

    <target name="copy-schemata">
        <copy todir="${dist.schema.dir}">
            <fileset dir="${src.schema.dir}"
                     includes="**/*.avsc" />
        </copy>
    </target>

    <target name="copy-doc">
        <copy todir="${dist.dir}">
            <fileset dir="${root.dir}"
                     includes="build.xml, README.md"
                     excludes="**/.*.*, **/*.iml" />
        </copy>
        <copy todir="${dist.docs.dir}">
            <fileset dir="${src.docs.dir}"
                     includes="**/*.md, **/*.png"
                     excludes="**/*.pdf" />
        </copy>
    </target>

    <target name="copy-dependencies">
        <copy todir="${dist.lib.dir}">
            <fileset dir="${lib.dir}"
                     includes="**/*.jar"
                     excludes="**/*sources.jar, **/*javadoc.jar" />
        </copy>
    </target>


    <!-- jar it, and declare external libraries in manifest.mf file -->
    <target name="jar"
            depends="compile, copy-schemata, copy-doc, copy-dependencies"
            description="package, output to JAR">

        <exec executable="git" outputproperty="git.revision">
            <arg value="rev-parse" />
            <arg value="--short" />
            <arg value="HEAD" />
        </exec>

        <echo message="classpath.name : ${classpath.name} " />

        <mkdir dir="${dist.dir}" />
        <mkdir dir="${dist.schema.dir}" />
        <mkdir dir="${dist.lib.dir}" />
        <mkdir dir="${dist.docs.dir}" />

        <jar basedir="${build.dir}"
             jarfile="${dist.dir}/${projectName}-${release.version}.jar"><!-- -${git.revision} -->
            <manifest>
                <attribute name="Implementation-Title" value="converTor"/>
                <attribute name="Created-By"
                           value="Thomas Lörtsch" />
                <attribute name="Implementation-Version"
                           value="${release.version}-${git.revision}"/>
                <attribute name="Main-Class" value="${main-class}" />
                <attribute name="Class-Path" value="${classpath.name}" />
            </manifest>
        </jar>
    </target>


    <!-- jar it, bundle dependencies -->
    <target name="bundle"
            depends="compile"
            description="package, output to JAR. include dependencies and schemata">

        <exec executable="git" outputproperty="git.revision">
            <arg value="rev-parse" />
            <arg value="--short" />
            <arg value="HEAD" />
        </exec>

        <echo message="classpath.name : ${classpath.name} " />

        <mkdir dir="${dist.dir}" />

        <jar jarfile="${dist.dir}/${projectName}.jar"
             basedir="${build.dir}">

            <zipgroupfileset dir="lib" includes="*.jar"/>

            <zipfileset dir="schema" prefix="convertor/schema" includes="*.avsc"/>

            <manifest>
                <attribute name="Implementation-Title" value="converTor"/>
                <attribute name="Created-By"
                           value="Thomas Lörtsch" />
                <attribute name="Implementation-Version"
                           value="${release.version}-${git.revision}"/>
                <attribute name="Main-Class" value="${main-class}" />
                <attribute name="Class-Path" value="${classpath.name}" />
            </manifest>
        </jar>
    </target>


    <target name="clean" description="clean up">
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
    </target>


    <!-- Default, run this -->
    <target name="main" depends="clean, bundle" />


</project>