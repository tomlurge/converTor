Base is the class, that contains the main method.

Main initializes a new Base base, which in turn initializes Args and Writers
singletons.
Args contains default arguments like input directory, output format etc and
evaluates command line arguments.
Writers stores fileWriters per descriptor type and month. It initializes new
writers on demand, according to incoming descriptor types and configured format.

Main then starts the method run() on the base instance just created which
iterates through the incoming descriptors, converts them according to type,
gets the appropriate writer from Writers and appends the converted descriptors
to these writers.

Actual converters (ConvertRelay, ConvertBridge etc) are all subclasses of
Convert. Actual Writers (WriteAvro, WriteParquet, WriteJson) are all
implementations of Write. Actual descriptor types, their properties and methods
are all defined as enums in Types.

Encoding of the converted descriptors is managed in the Write classes and relies
on the encoder schemata and autogenerated Avro classes in the package encoders.

After all descriptors are converted a little housekeeping is done to make sure
that all writers write to disk before the program exits.