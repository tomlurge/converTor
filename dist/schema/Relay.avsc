{
  "type" : "record",
  "name" : "Relay",
  "namespace" : "convertor.encoders.relay",
  "doc" : "server-descriptor 1.0 - same as bridge but additional field 'router_signature'",
  "fields" : [ {
    "name" : "descriptor_type",
    "type" : "string",
    "default" : "server-descriptor 1.0"
  }, {
    "name" : "src_date",
    "type" : [ "null", "long" ],
    "doc" : "file creation date, in milliseconds, of the data source to this conversion"
  }, {
    "name" : "server_descriptor_digest",
    "type" : [ "null", "string" ],
    "doc" : "metrics-lib/ServerDescriptor: String getServerDescriptorDigest()"
  }, {
    "name" : "server_descriptor_sha256",
    "type" : [ "null", "string" ],
    "doc" : "metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256()"
  }, {
    "name" : "router",
    "type" : [ "null", {
      "type" : "record",
      "name" : "Router",
      "fields" : [ {
        "name" : "nickname",
        "type" : [ "null", "string" ],
        "doc" : "metrics-lib/ServerDescriptor: String getNickname()"
      }, {
        "name" : "address",
        "type" : [ "null", "string" ],
        "doc" : "metrics-lib/ServerDescriptor: String getAddress()"
      }, {
        "name" : "or_port",
        "type" : [ "null", "int" ],
        "doc" : "metrics-lib/ServerDescriptor: int getOrPort()"
      }, {
        "name" : "socks_port",
        "type" : [ "null", "int" ],
        "doc" : "metrics-lib/ServerDescriptor: int getSocksPort()"
      }, {
        "name" : "dir_port",
        "type" : [ "null", "int" ],
        "doc" : "metrics-lib/ServerDescriptor: int getDirPort()"
      } ]
    } ]
  }, {
    "name" : "identity_ed25519",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: String getIdentityEd25519()"
  }, {
    "name" : "master_key_ed25519",
    "type" : [ "null", "string" ],
    "doc" : "metrics-lib/ServerDescriptor: String getMasterKeyEd25519()"
  }, {
    "name" : "bandwidth",
    "type" : [ "null", {
      "type" : "record",
      "name" : "Bandwidth",
      "fields" : [ {
        "name" : "avg",
        "type" : [ "null", "int" ],
        "doc" : "metrics-lib/ServerDescriptor: int getBandwidthRate()"
      }, {
        "name" : "burst",
        "type" : [ "null", "int" ],
        "doc" : "metrics-lib/ServerDescriptor: int getBandwidthBurst()"
      }, {
        "name" : "observed",
        "type" : [ "null", "int" ],
        "doc" : "metrics-lib/ServerDescriptor: int getBandwidthObserved()"
      } ]
    } ]
  }, {
    "name" : "platform",
    "type" : [ "null", "string" ],
    "doc" : "metrics-lib/ServerDescriptor: String getPlatform()"
  }, {
    "name" : "published",
    "type" : [ "null", "long" ],
    "doc" : "metrics-lib/ServerDescriptor: long getPublishedMillis()"
  }, {
    "name" : "fingerprint",
    "type" : [ "null", "string" ],
    "doc" : "metrics-lib/ServerDescriptor: String getFingerprint()"
  }, {
    "name" : "hibernating",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: boolean isHibernating()"
  }, {
    "name" : "uptime",
    "type" : [ "null", "long" ],
    "doc" : "metrics-lib/ServerDescriptor: Long getUptime()"
  }, {
    "name" : "onion_key",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: String getOnionKey()"
  }, {
    "name" : "onion_key_crosscert",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: String getOnionKeyCrosscert()"
  }, {
    "name" : "ntor_onion_key",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: String getNtorOnionKey()"
  }, {
    "name" : "ntor_onion_key_crosscert",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert()"
  }, {
    "name" : "signing_key",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: String getSigningKey()"
  }, {
    "name" : "exit_policy",
    "type" : [ "null", {
      "type" : "array",
      "items" : "string"
    } ],
    "doc" : "metrics-lib/ServerDescriptor: List<String> getExitPolicyLines()"
  }, {
    "name" : "ipv6_policy",
    "type" : [ "null", "string" ],
    "doc" : "metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy()"
  }, {
    "name" : "ipv6_portlist",
    "type" : [ "null", "string" ],
    "doc" : "metrics-lib/ServerDescriptor: String getIpv6PortList()"
  }, {
    "name" : "router_sig_ed25519",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: String getRouterSignatureEd25519()"
  }, {
    "name" : "router_signature",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: String getRouterSignature()"
  }, {
    "name" : "contact",
    "type" : [ "null", "string" ],
    "doc" : "metrics-lib/ServerDescriptor: String getContact()"
  }, {
    "name" : "family",
    "type" : [ "null", {
      "type" : "array",
      "items" : "string"
    } ],
    "doc" : "metrics-lib/ServerDescriptor: List<String> getFamilyEntries()"
  }, {
    "name" : "read_history",
    "type" : [ "null", {
      "type" : "record",
      "name" : "ReadHistory",
      "fields" : [ {
        "name" : "date",
        "type" : [ "null", "long" ],
        "doc" : "metrics-lib/BandwidthHistory: long getHistoryEndMillis()"
      }, {
        "name" : "interval",
        "type" : [ "null", "long" ],
        "doc" : "metrics-lib/BandwidthHistory: long getIntervalLength()"
      }, {
        "name" : "bytes",
        "type" : [ "null", {
          "type" : "array",
          "items" : "long"
        } ],
        "doc" : "metrics-lib/BandwidthHistory: Collection<Long> getBandwidthValues().values()"
      } ]
    } ],
    "doc" : "metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()"
  }, {
    "name" : "write_history",
    "type" : [ "null", {
      "type" : "record",
      "name" : "WriteHistory",
      "fields" : [ {
        "name" : "date",
        "type" : [ "null", "long" ],
        "doc" : "metrics-lib/BandwidthHistory: long getHistoryEndMillis()"
      }, {
        "name" : "interval",
        "type" : [ "null", "long" ],
        "doc" : "metrics-lib/BandwidthHistory: long getIntervalLength()"
      }, {
        "name" : "bytes",
        "type" : [ "null", {
          "type" : "array",
          "items" : "long"
        } ],
        "doc" : "metrics-lib/BandwidthHistory: Collection<Long> getBandwidthValues().values()"
      } ]
    } ],
    "doc" : "metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()"
  }, {
    "name" : "eventdns",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic()"
  }, {
    "name" : "caches_extra_info",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: boolean getCachesExtraInfo()"
  }, {
    "name" : "extra_info_digest",
    "type" : [ "null", "string" ],
    "doc" : "metrics-lib/ServerDescriptor: String getExtraInfoDigest()"
  }, {
    "name" : "extra_info_digest_sha256",
    "type" : [ "null", "string" ],
    "doc" : "metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256()"
  }, {
    "name" : "hidden_service_dir",
    "type" : [ "null", {
      "type" : "array",
      "items" : "int"
    } ],
    "doc" : "metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions()"
  }, {
    "name" : "link_protocol_versions",
    "type" : [ "null", {
      "type" : "array",
      "items" : "int"
    } ],
    "doc" : "metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions()"
  }, {
    "name" : "circuit_protocol_versions",
    "type" : [ "null", {
      "type" : "array",
      "items" : "int"
    } ],
    "doc" : "metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions()"
  }, {
    "name" : "allow_single_hop_exits",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits()"
  }, {
    "name" : "or_address",
    "type" : [ "null", {
      "type" : "array",
      "items" : {
        "type" : "record",
        "name" : "OrAddress",
        "fields" : [ {
          "name" : "address",
          "type" : [ "null", "string" ],
          "doc" : "implementation specific"
        }, {
          "name" : "port",
          "type" : [ "null", "int" ],
          "doc" : "implementation specific"
        } ]
      }
    } ],
    "doc" : "metrics-lib/ServerDescriptor: List<String> getOrAddresses()"
  }, {
    "name" : "tunneled_dir_server",
    "type" : [ "null", "boolean" ],
    "doc" : "metrics-lib/ServerDescriptor: boolean getTunnelledDirServer()"
  } ],
  "aliases" : [ "relay_server" ]
}
