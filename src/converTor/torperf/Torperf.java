/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package converTor.torperf;
@SuppressWarnings("all")
/** torperf 1.0 */
@org.apache.avro.specific.AvroGenerated
public class Torperf extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Torperf\",\"namespace\":\"converTor.torperf\",\"doc\":\"torperf 1.0\",\"fields\":[{\"name\":\"descriptor_type\",\"type\":\"string\",\"default\":\"torperf 1.0\"},{\"name\":\"source\",\"type\":[\"null\",\"string\"]},{\"name\":\"filesize\",\"type\":[\"null\",\"int\"]},{\"name\":\"start\",\"type\":[\"null\",\"long\"]},{\"name\":\"socket\",\"type\":[\"null\",\"long\"]},{\"name\":\"connect\",\"type\":[\"null\",\"long\"]},{\"name\":\"negotiate\",\"type\":[\"null\",\"long\"]},{\"name\":\"request\",\"type\":[\"null\",\"long\"]},{\"name\":\"response\",\"type\":[\"null\",\"long\"]},{\"name\":\"datarequest\",\"type\":[\"null\",\"long\"]},{\"name\":\"dataresponse\",\"type\":[\"null\",\"long\"]},{\"name\":\"datacomplete\",\"type\":[\"null\",\"long\"]},{\"name\":\"writebytes\",\"type\":[\"null\",\"int\"]},{\"name\":\"readbytes\",\"type\":[\"null\",\"int\"]},{\"name\":\"didtimeout\",\"type\":[\"null\",\"boolean\"]},{\"name\":\"dataperc10\",\"type\":[\"null\",\"long\"]},{\"name\":\"dataperc20\",\"type\":[\"null\",\"long\"]},{\"name\":\"dataperc30\",\"type\":[\"null\",\"long\"]},{\"name\":\"dataperc40\",\"type\":[\"null\",\"long\"]},{\"name\":\"dataperc50\",\"type\":[\"null\",\"long\"]},{\"name\":\"dataperc60\",\"type\":[\"null\",\"long\"]},{\"name\":\"dataperc70\",\"type\":[\"null\",\"long\"]},{\"name\":\"dataperc80\",\"type\":[\"null\",\"long\"]},{\"name\":\"dataperc90\",\"type\":[\"null\",\"long\"]},{\"name\":\"launch\",\"type\":[\"null\",\"long\"]},{\"name\":\"used_at\",\"type\":[\"null\",\"long\"]},{\"name\":\"path\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"buildtimes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"long\"}]},{\"name\":\"timeout\",\"type\":[\"null\",\"long\"]},{\"name\":\"quantile\",\"type\":[\"null\",\"double\"]},{\"name\":\"circ_id\",\"type\":[\"null\",\"int\"]},{\"name\":\"used_by\",\"type\":[\"null\",\"int\"]}],\"aliases\":[\"torperfResult\",\"torperf_descriptor\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence descriptor_type;
  @Deprecated public java.lang.CharSequence source;
  @Deprecated public java.lang.Integer filesize;
  @Deprecated public java.lang.Long start;
  @Deprecated public java.lang.Long socket;
  @Deprecated public java.lang.Long connect;
  @Deprecated public java.lang.Long negotiate;
  @Deprecated public java.lang.Long request;
  @Deprecated public java.lang.Long response;
  @Deprecated public java.lang.Long datarequest;
  @Deprecated public java.lang.Long dataresponse;
  @Deprecated public java.lang.Long datacomplete;
  @Deprecated public java.lang.Integer writebytes;
  @Deprecated public java.lang.Integer readbytes;
  @Deprecated public java.lang.Boolean didtimeout;
  @Deprecated public java.lang.Long dataperc10;
  @Deprecated public java.lang.Long dataperc20;
  @Deprecated public java.lang.Long dataperc30;
  @Deprecated public java.lang.Long dataperc40;
  @Deprecated public java.lang.Long dataperc50;
  @Deprecated public java.lang.Long dataperc60;
  @Deprecated public java.lang.Long dataperc70;
  @Deprecated public java.lang.Long dataperc80;
  @Deprecated public java.lang.Long dataperc90;
  @Deprecated public java.lang.Long launch;
  @Deprecated public java.lang.Long used_at;
  @Deprecated public java.util.List<java.lang.CharSequence> path;
  @Deprecated public java.util.List<java.lang.Long> buildtimes;
  @Deprecated public java.lang.Long timeout;
  @Deprecated public java.lang.Double quantile;
  @Deprecated public java.lang.Integer circ_id;
  @Deprecated public java.lang.Integer used_by;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Torperf() {}

  /**
   * All-args constructor.
   */
  public Torperf(java.lang.CharSequence descriptor_type, java.lang.CharSequence source, java.lang.Integer filesize, java.lang.Long start, java.lang.Long socket, java.lang.Long connect, java.lang.Long negotiate, java.lang.Long request, java.lang.Long response, java.lang.Long datarequest, java.lang.Long dataresponse, java.lang.Long datacomplete, java.lang.Integer writebytes, java.lang.Integer readbytes, java.lang.Boolean didtimeout, java.lang.Long dataperc10, java.lang.Long dataperc20, java.lang.Long dataperc30, java.lang.Long dataperc40, java.lang.Long dataperc50, java.lang.Long dataperc60, java.lang.Long dataperc70, java.lang.Long dataperc80, java.lang.Long dataperc90, java.lang.Long launch, java.lang.Long used_at, java.util.List<java.lang.CharSequence> path, java.util.List<java.lang.Long> buildtimes, java.lang.Long timeout, java.lang.Double quantile, java.lang.Integer circ_id, java.lang.Integer used_by) {
    this.descriptor_type = descriptor_type;
    this.source = source;
    this.filesize = filesize;
    this.start = start;
    this.socket = socket;
    this.connect = connect;
    this.negotiate = negotiate;
    this.request = request;
    this.response = response;
    this.datarequest = datarequest;
    this.dataresponse = dataresponse;
    this.datacomplete = datacomplete;
    this.writebytes = writebytes;
    this.readbytes = readbytes;
    this.didtimeout = didtimeout;
    this.dataperc10 = dataperc10;
    this.dataperc20 = dataperc20;
    this.dataperc30 = dataperc30;
    this.dataperc40 = dataperc40;
    this.dataperc50 = dataperc50;
    this.dataperc60 = dataperc60;
    this.dataperc70 = dataperc70;
    this.dataperc80 = dataperc80;
    this.dataperc90 = dataperc90;
    this.launch = launch;
    this.used_at = used_at;
    this.path = path;
    this.buildtimes = buildtimes;
    this.timeout = timeout;
    this.quantile = quantile;
    this.circ_id = circ_id;
    this.used_by = used_by;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return descriptor_type;
    case 1: return source;
    case 2: return filesize;
    case 3: return start;
    case 4: return socket;
    case 5: return connect;
    case 6: return negotiate;
    case 7: return request;
    case 8: return response;
    case 9: return datarequest;
    case 10: return dataresponse;
    case 11: return datacomplete;
    case 12: return writebytes;
    case 13: return readbytes;
    case 14: return didtimeout;
    case 15: return dataperc10;
    case 16: return dataperc20;
    case 17: return dataperc30;
    case 18: return dataperc40;
    case 19: return dataperc50;
    case 20: return dataperc60;
    case 21: return dataperc70;
    case 22: return dataperc80;
    case 23: return dataperc90;
    case 24: return launch;
    case 25: return used_at;
    case 26: return path;
    case 27: return buildtimes;
    case 28: return timeout;
    case 29: return quantile;
    case 30: return circ_id;
    case 31: return used_by;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: descriptor_type = (java.lang.CharSequence)value$; break;
    case 1: source = (java.lang.CharSequence)value$; break;
    case 2: filesize = (java.lang.Integer)value$; break;
    case 3: start = (java.lang.Long)value$; break;
    case 4: socket = (java.lang.Long)value$; break;
    case 5: connect = (java.lang.Long)value$; break;
    case 6: negotiate = (java.lang.Long)value$; break;
    case 7: request = (java.lang.Long)value$; break;
    case 8: response = (java.lang.Long)value$; break;
    case 9: datarequest = (java.lang.Long)value$; break;
    case 10: dataresponse = (java.lang.Long)value$; break;
    case 11: datacomplete = (java.lang.Long)value$; break;
    case 12: writebytes = (java.lang.Integer)value$; break;
    case 13: readbytes = (java.lang.Integer)value$; break;
    case 14: didtimeout = (java.lang.Boolean)value$; break;
    case 15: dataperc10 = (java.lang.Long)value$; break;
    case 16: dataperc20 = (java.lang.Long)value$; break;
    case 17: dataperc30 = (java.lang.Long)value$; break;
    case 18: dataperc40 = (java.lang.Long)value$; break;
    case 19: dataperc50 = (java.lang.Long)value$; break;
    case 20: dataperc60 = (java.lang.Long)value$; break;
    case 21: dataperc70 = (java.lang.Long)value$; break;
    case 22: dataperc80 = (java.lang.Long)value$; break;
    case 23: dataperc90 = (java.lang.Long)value$; break;
    case 24: launch = (java.lang.Long)value$; break;
    case 25: used_at = (java.lang.Long)value$; break;
    case 26: path = (java.util.List<java.lang.CharSequence>)value$; break;
    case 27: buildtimes = (java.util.List<java.lang.Long>)value$; break;
    case 28: timeout = (java.lang.Long)value$; break;
    case 29: quantile = (java.lang.Double)value$; break;
    case 30: circ_id = (java.lang.Integer)value$; break;
    case 31: used_by = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'descriptor_type' field.
   */
  public java.lang.CharSequence getDescriptorType() {
    return descriptor_type;
  }

  /**
   * Sets the value of the 'descriptor_type' field.
   * @param value the value to set.
   */
  public void setDescriptorType(java.lang.CharSequence value) {
    this.descriptor_type = value;
  }

  /**
   * Gets the value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'filesize' field.
   */
  public java.lang.Integer getFilesize() {
    return filesize;
  }

  /**
   * Sets the value of the 'filesize' field.
   * @param value the value to set.
   */
  public void setFilesize(java.lang.Integer value) {
    this.filesize = value;
  }

  /**
   * Gets the value of the 'start' field.
   */
  public java.lang.Long getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * @param value the value to set.
   */
  public void setStart(java.lang.Long value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'socket' field.
   */
  public java.lang.Long getSocket() {
    return socket;
  }

  /**
   * Sets the value of the 'socket' field.
   * @param value the value to set.
   */
  public void setSocket(java.lang.Long value) {
    this.socket = value;
  }

  /**
   * Gets the value of the 'connect' field.
   */
  public java.lang.Long getConnect() {
    return connect;
  }

  /**
   * Sets the value of the 'connect' field.
   * @param value the value to set.
   */
  public void setConnect(java.lang.Long value) {
    this.connect = value;
  }

  /**
   * Gets the value of the 'negotiate' field.
   */
  public java.lang.Long getNegotiate() {
    return negotiate;
  }

  /**
   * Sets the value of the 'negotiate' field.
   * @param value the value to set.
   */
  public void setNegotiate(java.lang.Long value) {
    this.negotiate = value;
  }

  /**
   * Gets the value of the 'request' field.
   */
  public java.lang.Long getRequest() {
    return request;
  }

  /**
   * Sets the value of the 'request' field.
   * @param value the value to set.
   */
  public void setRequest(java.lang.Long value) {
    this.request = value;
  }

  /**
   * Gets the value of the 'response' field.
   */
  public java.lang.Long getResponse() {
    return response;
  }

  /**
   * Sets the value of the 'response' field.
   * @param value the value to set.
   */
  public void setResponse(java.lang.Long value) {
    this.response = value;
  }

  /**
   * Gets the value of the 'datarequest' field.
   */
  public java.lang.Long getDatarequest() {
    return datarequest;
  }

  /**
   * Sets the value of the 'datarequest' field.
   * @param value the value to set.
   */
  public void setDatarequest(java.lang.Long value) {
    this.datarequest = value;
  }

  /**
   * Gets the value of the 'dataresponse' field.
   */
  public java.lang.Long getDataresponse() {
    return dataresponse;
  }

  /**
   * Sets the value of the 'dataresponse' field.
   * @param value the value to set.
   */
  public void setDataresponse(java.lang.Long value) {
    this.dataresponse = value;
  }

  /**
   * Gets the value of the 'datacomplete' field.
   */
  public java.lang.Long getDatacomplete() {
    return datacomplete;
  }

  /**
   * Sets the value of the 'datacomplete' field.
   * @param value the value to set.
   */
  public void setDatacomplete(java.lang.Long value) {
    this.datacomplete = value;
  }

  /**
   * Gets the value of the 'writebytes' field.
   */
  public java.lang.Integer getWritebytes() {
    return writebytes;
  }

  /**
   * Sets the value of the 'writebytes' field.
   * @param value the value to set.
   */
  public void setWritebytes(java.lang.Integer value) {
    this.writebytes = value;
  }

  /**
   * Gets the value of the 'readbytes' field.
   */
  public java.lang.Integer getReadbytes() {
    return readbytes;
  }

  /**
   * Sets the value of the 'readbytes' field.
   * @param value the value to set.
   */
  public void setReadbytes(java.lang.Integer value) {
    this.readbytes = value;
  }

  /**
   * Gets the value of the 'didtimeout' field.
   */
  public java.lang.Boolean getDidtimeout() {
    return didtimeout;
  }

  /**
   * Sets the value of the 'didtimeout' field.
   * @param value the value to set.
   */
  public void setDidtimeout(java.lang.Boolean value) {
    this.didtimeout = value;
  }

  /**
   * Gets the value of the 'dataperc10' field.
   */
  public java.lang.Long getDataperc10() {
    return dataperc10;
  }

  /**
   * Sets the value of the 'dataperc10' field.
   * @param value the value to set.
   */
  public void setDataperc10(java.lang.Long value) {
    this.dataperc10 = value;
  }

  /**
   * Gets the value of the 'dataperc20' field.
   */
  public java.lang.Long getDataperc20() {
    return dataperc20;
  }

  /**
   * Sets the value of the 'dataperc20' field.
   * @param value the value to set.
   */
  public void setDataperc20(java.lang.Long value) {
    this.dataperc20 = value;
  }

  /**
   * Gets the value of the 'dataperc30' field.
   */
  public java.lang.Long getDataperc30() {
    return dataperc30;
  }

  /**
   * Sets the value of the 'dataperc30' field.
   * @param value the value to set.
   */
  public void setDataperc30(java.lang.Long value) {
    this.dataperc30 = value;
  }

  /**
   * Gets the value of the 'dataperc40' field.
   */
  public java.lang.Long getDataperc40() {
    return dataperc40;
  }

  /**
   * Sets the value of the 'dataperc40' field.
   * @param value the value to set.
   */
  public void setDataperc40(java.lang.Long value) {
    this.dataperc40 = value;
  }

  /**
   * Gets the value of the 'dataperc50' field.
   */
  public java.lang.Long getDataperc50() {
    return dataperc50;
  }

  /**
   * Sets the value of the 'dataperc50' field.
   * @param value the value to set.
   */
  public void setDataperc50(java.lang.Long value) {
    this.dataperc50 = value;
  }

  /**
   * Gets the value of the 'dataperc60' field.
   */
  public java.lang.Long getDataperc60() {
    return dataperc60;
  }

  /**
   * Sets the value of the 'dataperc60' field.
   * @param value the value to set.
   */
  public void setDataperc60(java.lang.Long value) {
    this.dataperc60 = value;
  }

  /**
   * Gets the value of the 'dataperc70' field.
   */
  public java.lang.Long getDataperc70() {
    return dataperc70;
  }

  /**
   * Sets the value of the 'dataperc70' field.
   * @param value the value to set.
   */
  public void setDataperc70(java.lang.Long value) {
    this.dataperc70 = value;
  }

  /**
   * Gets the value of the 'dataperc80' field.
   */
  public java.lang.Long getDataperc80() {
    return dataperc80;
  }

  /**
   * Sets the value of the 'dataperc80' field.
   * @param value the value to set.
   */
  public void setDataperc80(java.lang.Long value) {
    this.dataperc80 = value;
  }

  /**
   * Gets the value of the 'dataperc90' field.
   */
  public java.lang.Long getDataperc90() {
    return dataperc90;
  }

  /**
   * Sets the value of the 'dataperc90' field.
   * @param value the value to set.
   */
  public void setDataperc90(java.lang.Long value) {
    this.dataperc90 = value;
  }

  /**
   * Gets the value of the 'launch' field.
   */
  public java.lang.Long getLaunch() {
    return launch;
  }

  /**
   * Sets the value of the 'launch' field.
   * @param value the value to set.
   */
  public void setLaunch(java.lang.Long value) {
    this.launch = value;
  }

  /**
   * Gets the value of the 'used_at' field.
   */
  public java.lang.Long getUsedAt() {
    return used_at;
  }

  /**
   * Sets the value of the 'used_at' field.
   * @param value the value to set.
   */
  public void setUsedAt(java.lang.Long value) {
    this.used_at = value;
  }

  /**
   * Gets the value of the 'path' field.
   */
  public java.util.List<java.lang.CharSequence> getPath() {
    return path;
  }

  /**
   * Sets the value of the 'path' field.
   * @param value the value to set.
   */
  public void setPath(java.util.List<java.lang.CharSequence> value) {
    this.path = value;
  }

  /**
   * Gets the value of the 'buildtimes' field.
   */
  public java.util.List<java.lang.Long> getBuildtimes() {
    return buildtimes;
  }

  /**
   * Sets the value of the 'buildtimes' field.
   * @param value the value to set.
   */
  public void setBuildtimes(java.util.List<java.lang.Long> value) {
    this.buildtimes = value;
  }

  /**
   * Gets the value of the 'timeout' field.
   */
  public java.lang.Long getTimeout() {
    return timeout;
  }

  /**
   * Sets the value of the 'timeout' field.
   * @param value the value to set.
   */
  public void setTimeout(java.lang.Long value) {
    this.timeout = value;
  }

  /**
   * Gets the value of the 'quantile' field.
   */
  public java.lang.Double getQuantile() {
    return quantile;
  }

  /**
   * Sets the value of the 'quantile' field.
   * @param value the value to set.
   */
  public void setQuantile(java.lang.Double value) {
    this.quantile = value;
  }

  /**
   * Gets the value of the 'circ_id' field.
   */
  public java.lang.Integer getCircId() {
    return circ_id;
  }

  /**
   * Sets the value of the 'circ_id' field.
   * @param value the value to set.
   */
  public void setCircId(java.lang.Integer value) {
    this.circ_id = value;
  }

  /**
   * Gets the value of the 'used_by' field.
   */
  public java.lang.Integer getUsedBy() {
    return used_by;
  }

  /**
   * Sets the value of the 'used_by' field.
   * @param value the value to set.
   */
  public void setUsedBy(java.lang.Integer value) {
    this.used_by = value;
  }

  /** Creates a new Torperf RecordBuilder */
  public static converTor.torperf.Torperf.Builder newBuilder() {
    return new converTor.torperf.Torperf.Builder();
  }
  
  /** Creates a new Torperf RecordBuilder by copying an existing Builder */
  public static converTor.torperf.Torperf.Builder newBuilder(converTor.torperf.Torperf.Builder other) {
    return new converTor.torperf.Torperf.Builder(other);
  }
  
  /** Creates a new Torperf RecordBuilder by copying an existing Torperf instance */
  public static converTor.torperf.Torperf.Builder newBuilder(converTor.torperf.Torperf other) {
    return new converTor.torperf.Torperf.Builder(other);
  }
  
  /**
   * RecordBuilder for Torperf instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Torperf>
    implements org.apache.avro.data.RecordBuilder<Torperf> {

    private java.lang.CharSequence descriptor_type;
    private java.lang.CharSequence source;
    private java.lang.Integer filesize;
    private java.lang.Long start;
    private java.lang.Long socket;
    private java.lang.Long connect;
    private java.lang.Long negotiate;
    private java.lang.Long request;
    private java.lang.Long response;
    private java.lang.Long datarequest;
    private java.lang.Long dataresponse;
    private java.lang.Long datacomplete;
    private java.lang.Integer writebytes;
    private java.lang.Integer readbytes;
    private java.lang.Boolean didtimeout;
    private java.lang.Long dataperc10;
    private java.lang.Long dataperc20;
    private java.lang.Long dataperc30;
    private java.lang.Long dataperc40;
    private java.lang.Long dataperc50;
    private java.lang.Long dataperc60;
    private java.lang.Long dataperc70;
    private java.lang.Long dataperc80;
    private java.lang.Long dataperc90;
    private java.lang.Long launch;
    private java.lang.Long used_at;
    private java.util.List<java.lang.CharSequence> path;
    private java.util.List<java.lang.Long> buildtimes;
    private java.lang.Long timeout;
    private java.lang.Double quantile;
    private java.lang.Integer circ_id;
    private java.lang.Integer used_by;

    /** Creates a new Builder */
    private Builder() {
      super(converTor.torperf.Torperf.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(converTor.torperf.Torperf.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source)) {
        this.source = data().deepCopy(fields()[1].schema(), other.source);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.filesize)) {
        this.filesize = data().deepCopy(fields()[2].schema(), other.filesize);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.start)) {
        this.start = data().deepCopy(fields()[3].schema(), other.start);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.socket)) {
        this.socket = data().deepCopy(fields()[4].schema(), other.socket);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.connect)) {
        this.connect = data().deepCopy(fields()[5].schema(), other.connect);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.negotiate)) {
        this.negotiate = data().deepCopy(fields()[6].schema(), other.negotiate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.request)) {
        this.request = data().deepCopy(fields()[7].schema(), other.request);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.response)) {
        this.response = data().deepCopy(fields()[8].schema(), other.response);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.datarequest)) {
        this.datarequest = data().deepCopy(fields()[9].schema(), other.datarequest);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.dataresponse)) {
        this.dataresponse = data().deepCopy(fields()[10].schema(), other.dataresponse);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.datacomplete)) {
        this.datacomplete = data().deepCopy(fields()[11].schema(), other.datacomplete);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.writebytes)) {
        this.writebytes = data().deepCopy(fields()[12].schema(), other.writebytes);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.readbytes)) {
        this.readbytes = data().deepCopy(fields()[13].schema(), other.readbytes);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.didtimeout)) {
        this.didtimeout = data().deepCopy(fields()[14].schema(), other.didtimeout);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.dataperc10)) {
        this.dataperc10 = data().deepCopy(fields()[15].schema(), other.dataperc10);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.dataperc20)) {
        this.dataperc20 = data().deepCopy(fields()[16].schema(), other.dataperc20);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.dataperc30)) {
        this.dataperc30 = data().deepCopy(fields()[17].schema(), other.dataperc30);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.dataperc40)) {
        this.dataperc40 = data().deepCopy(fields()[18].schema(), other.dataperc40);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.dataperc50)) {
        this.dataperc50 = data().deepCopy(fields()[19].schema(), other.dataperc50);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.dataperc60)) {
        this.dataperc60 = data().deepCopy(fields()[20].schema(), other.dataperc60);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.dataperc70)) {
        this.dataperc70 = data().deepCopy(fields()[21].schema(), other.dataperc70);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.dataperc80)) {
        this.dataperc80 = data().deepCopy(fields()[22].schema(), other.dataperc80);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.dataperc90)) {
        this.dataperc90 = data().deepCopy(fields()[23].schema(), other.dataperc90);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.launch)) {
        this.launch = data().deepCopy(fields()[24].schema(), other.launch);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.used_at)) {
        this.used_at = data().deepCopy(fields()[25].schema(), other.used_at);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.path)) {
        this.path = data().deepCopy(fields()[26].schema(), other.path);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.buildtimes)) {
        this.buildtimes = data().deepCopy(fields()[27].schema(), other.buildtimes);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.timeout)) {
        this.timeout = data().deepCopy(fields()[28].schema(), other.timeout);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.quantile)) {
        this.quantile = data().deepCopy(fields()[29].schema(), other.quantile);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.circ_id)) {
        this.circ_id = data().deepCopy(fields()[30].schema(), other.circ_id);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.used_by)) {
        this.used_by = data().deepCopy(fields()[31].schema(), other.used_by);
        fieldSetFlags()[31] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Torperf instance */
    private Builder(converTor.torperf.Torperf other) {
            super(converTor.torperf.Torperf.SCHEMA$);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source)) {
        this.source = data().deepCopy(fields()[1].schema(), other.source);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.filesize)) {
        this.filesize = data().deepCopy(fields()[2].schema(), other.filesize);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.start)) {
        this.start = data().deepCopy(fields()[3].schema(), other.start);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.socket)) {
        this.socket = data().deepCopy(fields()[4].schema(), other.socket);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.connect)) {
        this.connect = data().deepCopy(fields()[5].schema(), other.connect);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.negotiate)) {
        this.negotiate = data().deepCopy(fields()[6].schema(), other.negotiate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.request)) {
        this.request = data().deepCopy(fields()[7].schema(), other.request);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.response)) {
        this.response = data().deepCopy(fields()[8].schema(), other.response);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.datarequest)) {
        this.datarequest = data().deepCopy(fields()[9].schema(), other.datarequest);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.dataresponse)) {
        this.dataresponse = data().deepCopy(fields()[10].schema(), other.dataresponse);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.datacomplete)) {
        this.datacomplete = data().deepCopy(fields()[11].schema(), other.datacomplete);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.writebytes)) {
        this.writebytes = data().deepCopy(fields()[12].schema(), other.writebytes);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.readbytes)) {
        this.readbytes = data().deepCopy(fields()[13].schema(), other.readbytes);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.didtimeout)) {
        this.didtimeout = data().deepCopy(fields()[14].schema(), other.didtimeout);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.dataperc10)) {
        this.dataperc10 = data().deepCopy(fields()[15].schema(), other.dataperc10);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.dataperc20)) {
        this.dataperc20 = data().deepCopy(fields()[16].schema(), other.dataperc20);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.dataperc30)) {
        this.dataperc30 = data().deepCopy(fields()[17].schema(), other.dataperc30);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.dataperc40)) {
        this.dataperc40 = data().deepCopy(fields()[18].schema(), other.dataperc40);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.dataperc50)) {
        this.dataperc50 = data().deepCopy(fields()[19].schema(), other.dataperc50);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.dataperc60)) {
        this.dataperc60 = data().deepCopy(fields()[20].schema(), other.dataperc60);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.dataperc70)) {
        this.dataperc70 = data().deepCopy(fields()[21].schema(), other.dataperc70);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.dataperc80)) {
        this.dataperc80 = data().deepCopy(fields()[22].schema(), other.dataperc80);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.dataperc90)) {
        this.dataperc90 = data().deepCopy(fields()[23].schema(), other.dataperc90);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.launch)) {
        this.launch = data().deepCopy(fields()[24].schema(), other.launch);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.used_at)) {
        this.used_at = data().deepCopy(fields()[25].schema(), other.used_at);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.path)) {
        this.path = data().deepCopy(fields()[26].schema(), other.path);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.buildtimes)) {
        this.buildtimes = data().deepCopy(fields()[27].schema(), other.buildtimes);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.timeout)) {
        this.timeout = data().deepCopy(fields()[28].schema(), other.timeout);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.quantile)) {
        this.quantile = data().deepCopy(fields()[29].schema(), other.quantile);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.circ_id)) {
        this.circ_id = data().deepCopy(fields()[30].schema(), other.circ_id);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.used_by)) {
        this.used_by = data().deepCopy(fields()[31].schema(), other.used_by);
        fieldSetFlags()[31] = true;
      }
    }

    /** Gets the value of the 'descriptor_type' field */
    public java.lang.CharSequence getDescriptorType() {
      return descriptor_type;
    }
    
    /** Sets the value of the 'descriptor_type' field */
    public converTor.torperf.Torperf.Builder setDescriptorType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.descriptor_type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'descriptor_type' field has been set */
    public boolean hasDescriptorType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'descriptor_type' field */
    public converTor.torperf.Torperf.Builder clearDescriptorType() {
      descriptor_type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'source' field */
    public java.lang.CharSequence getSource() {
      return source;
    }
    
    /** Sets the value of the 'source' field */
    public converTor.torperf.Torperf.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.source = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'source' field has been set */
    public boolean hasSource() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'source' field */
    public converTor.torperf.Torperf.Builder clearSource() {
      source = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'filesize' field */
    public java.lang.Integer getFilesize() {
      return filesize;
    }
    
    /** Sets the value of the 'filesize' field */
    public converTor.torperf.Torperf.Builder setFilesize(java.lang.Integer value) {
      validate(fields()[2], value);
      this.filesize = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'filesize' field has been set */
    public boolean hasFilesize() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'filesize' field */
    public converTor.torperf.Torperf.Builder clearFilesize() {
      filesize = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'start' field */
    public java.lang.Long getStart() {
      return start;
    }
    
    /** Sets the value of the 'start' field */
    public converTor.torperf.Torperf.Builder setStart(java.lang.Long value) {
      validate(fields()[3], value);
      this.start = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'start' field has been set */
    public boolean hasStart() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'start' field */
    public converTor.torperf.Torperf.Builder clearStart() {
      start = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'socket' field */
    public java.lang.Long getSocket() {
      return socket;
    }
    
    /** Sets the value of the 'socket' field */
    public converTor.torperf.Torperf.Builder setSocket(java.lang.Long value) {
      validate(fields()[4], value);
      this.socket = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'socket' field has been set */
    public boolean hasSocket() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'socket' field */
    public converTor.torperf.Torperf.Builder clearSocket() {
      socket = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'connect' field */
    public java.lang.Long getConnect() {
      return connect;
    }
    
    /** Sets the value of the 'connect' field */
    public converTor.torperf.Torperf.Builder setConnect(java.lang.Long value) {
      validate(fields()[5], value);
      this.connect = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'connect' field has been set */
    public boolean hasConnect() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'connect' field */
    public converTor.torperf.Torperf.Builder clearConnect() {
      connect = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'negotiate' field */
    public java.lang.Long getNegotiate() {
      return negotiate;
    }
    
    /** Sets the value of the 'negotiate' field */
    public converTor.torperf.Torperf.Builder setNegotiate(java.lang.Long value) {
      validate(fields()[6], value);
      this.negotiate = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'negotiate' field has been set */
    public boolean hasNegotiate() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'negotiate' field */
    public converTor.torperf.Torperf.Builder clearNegotiate() {
      negotiate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'request' field */
    public java.lang.Long getRequest() {
      return request;
    }
    
    /** Sets the value of the 'request' field */
    public converTor.torperf.Torperf.Builder setRequest(java.lang.Long value) {
      validate(fields()[7], value);
      this.request = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'request' field has been set */
    public boolean hasRequest() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'request' field */
    public converTor.torperf.Torperf.Builder clearRequest() {
      request = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'response' field */
    public java.lang.Long getResponse() {
      return response;
    }
    
    /** Sets the value of the 'response' field */
    public converTor.torperf.Torperf.Builder setResponse(java.lang.Long value) {
      validate(fields()[8], value);
      this.response = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'response' field has been set */
    public boolean hasResponse() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'response' field */
    public converTor.torperf.Torperf.Builder clearResponse() {
      response = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'datarequest' field */
    public java.lang.Long getDatarequest() {
      return datarequest;
    }
    
    /** Sets the value of the 'datarequest' field */
    public converTor.torperf.Torperf.Builder setDatarequest(java.lang.Long value) {
      validate(fields()[9], value);
      this.datarequest = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'datarequest' field has been set */
    public boolean hasDatarequest() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'datarequest' field */
    public converTor.torperf.Torperf.Builder clearDatarequest() {
      datarequest = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'dataresponse' field */
    public java.lang.Long getDataresponse() {
      return dataresponse;
    }
    
    /** Sets the value of the 'dataresponse' field */
    public converTor.torperf.Torperf.Builder setDataresponse(java.lang.Long value) {
      validate(fields()[10], value);
      this.dataresponse = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'dataresponse' field has been set */
    public boolean hasDataresponse() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'dataresponse' field */
    public converTor.torperf.Torperf.Builder clearDataresponse() {
      dataresponse = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'datacomplete' field */
    public java.lang.Long getDatacomplete() {
      return datacomplete;
    }
    
    /** Sets the value of the 'datacomplete' field */
    public converTor.torperf.Torperf.Builder setDatacomplete(java.lang.Long value) {
      validate(fields()[11], value);
      this.datacomplete = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'datacomplete' field has been set */
    public boolean hasDatacomplete() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'datacomplete' field */
    public converTor.torperf.Torperf.Builder clearDatacomplete() {
      datacomplete = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'writebytes' field */
    public java.lang.Integer getWritebytes() {
      return writebytes;
    }
    
    /** Sets the value of the 'writebytes' field */
    public converTor.torperf.Torperf.Builder setWritebytes(java.lang.Integer value) {
      validate(fields()[12], value);
      this.writebytes = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'writebytes' field has been set */
    public boolean hasWritebytes() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'writebytes' field */
    public converTor.torperf.Torperf.Builder clearWritebytes() {
      writebytes = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'readbytes' field */
    public java.lang.Integer getReadbytes() {
      return readbytes;
    }
    
    /** Sets the value of the 'readbytes' field */
    public converTor.torperf.Torperf.Builder setReadbytes(java.lang.Integer value) {
      validate(fields()[13], value);
      this.readbytes = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'readbytes' field has been set */
    public boolean hasReadbytes() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'readbytes' field */
    public converTor.torperf.Torperf.Builder clearReadbytes() {
      readbytes = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'didtimeout' field */
    public java.lang.Boolean getDidtimeout() {
      return didtimeout;
    }
    
    /** Sets the value of the 'didtimeout' field */
    public converTor.torperf.Torperf.Builder setDidtimeout(java.lang.Boolean value) {
      validate(fields()[14], value);
      this.didtimeout = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'didtimeout' field has been set */
    public boolean hasDidtimeout() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'didtimeout' field */
    public converTor.torperf.Torperf.Builder clearDidtimeout() {
      didtimeout = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'dataperc10' field */
    public java.lang.Long getDataperc10() {
      return dataperc10;
    }
    
    /** Sets the value of the 'dataperc10' field */
    public converTor.torperf.Torperf.Builder setDataperc10(java.lang.Long value) {
      validate(fields()[15], value);
      this.dataperc10 = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'dataperc10' field has been set */
    public boolean hasDataperc10() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'dataperc10' field */
    public converTor.torperf.Torperf.Builder clearDataperc10() {
      dataperc10 = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'dataperc20' field */
    public java.lang.Long getDataperc20() {
      return dataperc20;
    }
    
    /** Sets the value of the 'dataperc20' field */
    public converTor.torperf.Torperf.Builder setDataperc20(java.lang.Long value) {
      validate(fields()[16], value);
      this.dataperc20 = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'dataperc20' field has been set */
    public boolean hasDataperc20() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'dataperc20' field */
    public converTor.torperf.Torperf.Builder clearDataperc20() {
      dataperc20 = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'dataperc30' field */
    public java.lang.Long getDataperc30() {
      return dataperc30;
    }
    
    /** Sets the value of the 'dataperc30' field */
    public converTor.torperf.Torperf.Builder setDataperc30(java.lang.Long value) {
      validate(fields()[17], value);
      this.dataperc30 = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'dataperc30' field has been set */
    public boolean hasDataperc30() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'dataperc30' field */
    public converTor.torperf.Torperf.Builder clearDataperc30() {
      dataperc30 = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'dataperc40' field */
    public java.lang.Long getDataperc40() {
      return dataperc40;
    }
    
    /** Sets the value of the 'dataperc40' field */
    public converTor.torperf.Torperf.Builder setDataperc40(java.lang.Long value) {
      validate(fields()[18], value);
      this.dataperc40 = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'dataperc40' field has been set */
    public boolean hasDataperc40() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'dataperc40' field */
    public converTor.torperf.Torperf.Builder clearDataperc40() {
      dataperc40 = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'dataperc50' field */
    public java.lang.Long getDataperc50() {
      return dataperc50;
    }
    
    /** Sets the value of the 'dataperc50' field */
    public converTor.torperf.Torperf.Builder setDataperc50(java.lang.Long value) {
      validate(fields()[19], value);
      this.dataperc50 = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'dataperc50' field has been set */
    public boolean hasDataperc50() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'dataperc50' field */
    public converTor.torperf.Torperf.Builder clearDataperc50() {
      dataperc50 = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'dataperc60' field */
    public java.lang.Long getDataperc60() {
      return dataperc60;
    }
    
    /** Sets the value of the 'dataperc60' field */
    public converTor.torperf.Torperf.Builder setDataperc60(java.lang.Long value) {
      validate(fields()[20], value);
      this.dataperc60 = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'dataperc60' field has been set */
    public boolean hasDataperc60() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'dataperc60' field */
    public converTor.torperf.Torperf.Builder clearDataperc60() {
      dataperc60 = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'dataperc70' field */
    public java.lang.Long getDataperc70() {
      return dataperc70;
    }
    
    /** Sets the value of the 'dataperc70' field */
    public converTor.torperf.Torperf.Builder setDataperc70(java.lang.Long value) {
      validate(fields()[21], value);
      this.dataperc70 = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'dataperc70' field has been set */
    public boolean hasDataperc70() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'dataperc70' field */
    public converTor.torperf.Torperf.Builder clearDataperc70() {
      dataperc70 = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'dataperc80' field */
    public java.lang.Long getDataperc80() {
      return dataperc80;
    }
    
    /** Sets the value of the 'dataperc80' field */
    public converTor.torperf.Torperf.Builder setDataperc80(java.lang.Long value) {
      validate(fields()[22], value);
      this.dataperc80 = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'dataperc80' field has been set */
    public boolean hasDataperc80() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'dataperc80' field */
    public converTor.torperf.Torperf.Builder clearDataperc80() {
      dataperc80 = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'dataperc90' field */
    public java.lang.Long getDataperc90() {
      return dataperc90;
    }
    
    /** Sets the value of the 'dataperc90' field */
    public converTor.torperf.Torperf.Builder setDataperc90(java.lang.Long value) {
      validate(fields()[23], value);
      this.dataperc90 = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'dataperc90' field has been set */
    public boolean hasDataperc90() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'dataperc90' field */
    public converTor.torperf.Torperf.Builder clearDataperc90() {
      dataperc90 = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'launch' field */
    public java.lang.Long getLaunch() {
      return launch;
    }
    
    /** Sets the value of the 'launch' field */
    public converTor.torperf.Torperf.Builder setLaunch(java.lang.Long value) {
      validate(fields()[24], value);
      this.launch = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'launch' field has been set */
    public boolean hasLaunch() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'launch' field */
    public converTor.torperf.Torperf.Builder clearLaunch() {
      launch = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'used_at' field */
    public java.lang.Long getUsedAt() {
      return used_at;
    }
    
    /** Sets the value of the 'used_at' field */
    public converTor.torperf.Torperf.Builder setUsedAt(java.lang.Long value) {
      validate(fields()[25], value);
      this.used_at = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'used_at' field has been set */
    public boolean hasUsedAt() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'used_at' field */
    public converTor.torperf.Torperf.Builder clearUsedAt() {
      used_at = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'path' field */
    public java.util.List<java.lang.CharSequence> getPath() {
      return path;
    }
    
    /** Sets the value of the 'path' field */
    public converTor.torperf.Torperf.Builder setPath(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[26], value);
      this.path = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'path' field has been set */
    public boolean hasPath() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'path' field */
    public converTor.torperf.Torperf.Builder clearPath() {
      path = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'buildtimes' field */
    public java.util.List<java.lang.Long> getBuildtimes() {
      return buildtimes;
    }
    
    /** Sets the value of the 'buildtimes' field */
    public converTor.torperf.Torperf.Builder setBuildtimes(java.util.List<java.lang.Long> value) {
      validate(fields()[27], value);
      this.buildtimes = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'buildtimes' field has been set */
    public boolean hasBuildtimes() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'buildtimes' field */
    public converTor.torperf.Torperf.Builder clearBuildtimes() {
      buildtimes = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'timeout' field */
    public java.lang.Long getTimeout() {
      return timeout;
    }
    
    /** Sets the value of the 'timeout' field */
    public converTor.torperf.Torperf.Builder setTimeout(java.lang.Long value) {
      validate(fields()[28], value);
      this.timeout = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'timeout' field has been set */
    public boolean hasTimeout() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'timeout' field */
    public converTor.torperf.Torperf.Builder clearTimeout() {
      timeout = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'quantile' field */
    public java.lang.Double getQuantile() {
      return quantile;
    }
    
    /** Sets the value of the 'quantile' field */
    public converTor.torperf.Torperf.Builder setQuantile(java.lang.Double value) {
      validate(fields()[29], value);
      this.quantile = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'quantile' field has been set */
    public boolean hasQuantile() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'quantile' field */
    public converTor.torperf.Torperf.Builder clearQuantile() {
      quantile = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'circ_id' field */
    public java.lang.Integer getCircId() {
      return circ_id;
    }
    
    /** Sets the value of the 'circ_id' field */
    public converTor.torperf.Torperf.Builder setCircId(java.lang.Integer value) {
      validate(fields()[30], value);
      this.circ_id = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'circ_id' field has been set */
    public boolean hasCircId() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'circ_id' field */
    public converTor.torperf.Torperf.Builder clearCircId() {
      circ_id = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'used_by' field */
    public java.lang.Integer getUsedBy() {
      return used_by;
    }
    
    /** Sets the value of the 'used_by' field */
    public converTor.torperf.Torperf.Builder setUsedBy(java.lang.Integer value) {
      validate(fields()[31], value);
      this.used_by = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'used_by' field has been set */
    public boolean hasUsedBy() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'used_by' field */
    public converTor.torperf.Torperf.Builder clearUsedBy() {
      used_by = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    @Override
    public Torperf build() {
      try {
        Torperf record = new Torperf();
        record.descriptor_type = fieldSetFlags()[0] ? this.descriptor_type : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.source = fieldSetFlags()[1] ? this.source : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.filesize = fieldSetFlags()[2] ? this.filesize : (java.lang.Integer) defaultValue(fields()[2]);
        record.start = fieldSetFlags()[3] ? this.start : (java.lang.Long) defaultValue(fields()[3]);
        record.socket = fieldSetFlags()[4] ? this.socket : (java.lang.Long) defaultValue(fields()[4]);
        record.connect = fieldSetFlags()[5] ? this.connect : (java.lang.Long) defaultValue(fields()[5]);
        record.negotiate = fieldSetFlags()[6] ? this.negotiate : (java.lang.Long) defaultValue(fields()[6]);
        record.request = fieldSetFlags()[7] ? this.request : (java.lang.Long) defaultValue(fields()[7]);
        record.response = fieldSetFlags()[8] ? this.response : (java.lang.Long) defaultValue(fields()[8]);
        record.datarequest = fieldSetFlags()[9] ? this.datarequest : (java.lang.Long) defaultValue(fields()[9]);
        record.dataresponse = fieldSetFlags()[10] ? this.dataresponse : (java.lang.Long) defaultValue(fields()[10]);
        record.datacomplete = fieldSetFlags()[11] ? this.datacomplete : (java.lang.Long) defaultValue(fields()[11]);
        record.writebytes = fieldSetFlags()[12] ? this.writebytes : (java.lang.Integer) defaultValue(fields()[12]);
        record.readbytes = fieldSetFlags()[13] ? this.readbytes : (java.lang.Integer) defaultValue(fields()[13]);
        record.didtimeout = fieldSetFlags()[14] ? this.didtimeout : (java.lang.Boolean) defaultValue(fields()[14]);
        record.dataperc10 = fieldSetFlags()[15] ? this.dataperc10 : (java.lang.Long) defaultValue(fields()[15]);
        record.dataperc20 = fieldSetFlags()[16] ? this.dataperc20 : (java.lang.Long) defaultValue(fields()[16]);
        record.dataperc30 = fieldSetFlags()[17] ? this.dataperc30 : (java.lang.Long) defaultValue(fields()[17]);
        record.dataperc40 = fieldSetFlags()[18] ? this.dataperc40 : (java.lang.Long) defaultValue(fields()[18]);
        record.dataperc50 = fieldSetFlags()[19] ? this.dataperc50 : (java.lang.Long) defaultValue(fields()[19]);
        record.dataperc60 = fieldSetFlags()[20] ? this.dataperc60 : (java.lang.Long) defaultValue(fields()[20]);
        record.dataperc70 = fieldSetFlags()[21] ? this.dataperc70 : (java.lang.Long) defaultValue(fields()[21]);
        record.dataperc80 = fieldSetFlags()[22] ? this.dataperc80 : (java.lang.Long) defaultValue(fields()[22]);
        record.dataperc90 = fieldSetFlags()[23] ? this.dataperc90 : (java.lang.Long) defaultValue(fields()[23]);
        record.launch = fieldSetFlags()[24] ? this.launch : (java.lang.Long) defaultValue(fields()[24]);
        record.used_at = fieldSetFlags()[25] ? this.used_at : (java.lang.Long) defaultValue(fields()[25]);
        record.path = fieldSetFlags()[26] ? this.path : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[26]);
        record.buildtimes = fieldSetFlags()[27] ? this.buildtimes : (java.util.List<java.lang.Long>) defaultValue(fields()[27]);
        record.timeout = fieldSetFlags()[28] ? this.timeout : (java.lang.Long) defaultValue(fields()[28]);
        record.quantile = fieldSetFlags()[29] ? this.quantile : (java.lang.Double) defaultValue(fields()[29]);
        record.circ_id = fieldSetFlags()[30] ? this.circ_id : (java.lang.Integer) defaultValue(fields()[30]);
        record.used_by = fieldSetFlags()[31] ? this.used_by : (java.lang.Integer) defaultValue(fields()[31]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
