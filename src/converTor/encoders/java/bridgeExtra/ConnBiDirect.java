/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package converTor.encoders.java.bridgeExtra;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ConnBiDirect extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6759022439989346525L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ConnBiDirect\",\"namespace\":\"converTor.encoders.java.bridgeExtra\",\"fields\":[{\"name\":\"date\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsEndMillis()\"},{\"name\":\"interval\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsIntervalLength()\"},{\"name\":\"below\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBelow()\"},{\"name\":\"read\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/ExtraInfoDescriptor: int getConnBiDirectRead()\"},{\"name\":\"write\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/ExtraInfoDescriptor: int getConnBiDirectWrite()\"},{\"name\":\"both\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBoth()\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsEndMillis() */
  @Deprecated public java.lang.Long date;
  /** metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsIntervalLength() */
  @Deprecated public java.lang.Long interval;
  /** metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBelow() */
  @Deprecated public java.lang.Integer below;
  /** metrics-lib/ExtraInfoDescriptor: int getConnBiDirectRead() */
  @Deprecated public java.lang.Integer read;
  /** metrics-lib/ExtraInfoDescriptor: int getConnBiDirectWrite() */
  @Deprecated public java.lang.Integer write;
  /** metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBoth() */
  @Deprecated public java.lang.Integer both;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ConnBiDirect() {}

  /**
   * All-args constructor.
   * @param date metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsEndMillis()
   * @param interval metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsIntervalLength()
   * @param below metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBelow()
   * @param read metrics-lib/ExtraInfoDescriptor: int getConnBiDirectRead()
   * @param write metrics-lib/ExtraInfoDescriptor: int getConnBiDirectWrite()
   * @param both metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBoth()
   */
  public ConnBiDirect(java.lang.Long date, java.lang.Long interval, java.lang.Integer below, java.lang.Integer read, java.lang.Integer write, java.lang.Integer both) {
    this.date = date;
    this.interval = interval;
    this.below = below;
    this.read = read;
    this.write = write;
    this.both = both;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return date;
    case 1: return interval;
    case 2: return below;
    case 3: return read;
    case 4: return write;
    case 5: return both;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: date = (java.lang.Long)value$; break;
    case 1: interval = (java.lang.Long)value$; break;
    case 2: below = (java.lang.Integer)value$; break;
    case 3: read = (java.lang.Integer)value$; break;
    case 4: write = (java.lang.Integer)value$; break;
    case 5: both = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'date' field.
   * @return metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsEndMillis()
   */
  public java.lang.Long getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsEndMillis()
   * @param value the value to set.
   */
  public void setDate(java.lang.Long value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'interval' field.
   * @return metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsIntervalLength()
   */
  public java.lang.Long getInterval() {
    return interval;
  }

  /**
   * Sets the value of the 'interval' field.
   * metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsIntervalLength()
   * @param value the value to set.
   */
  public void setInterval(java.lang.Long value) {
    this.interval = value;
  }

  /**
   * Gets the value of the 'below' field.
   * @return metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBelow()
   */
  public java.lang.Integer getBelow() {
    return below;
  }

  /**
   * Sets the value of the 'below' field.
   * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBelow()
   * @param value the value to set.
   */
  public void setBelow(java.lang.Integer value) {
    this.below = value;
  }

  /**
   * Gets the value of the 'read' field.
   * @return metrics-lib/ExtraInfoDescriptor: int getConnBiDirectRead()
   */
  public java.lang.Integer getRead() {
    return read;
  }

  /**
   * Sets the value of the 'read' field.
   * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectRead()
   * @param value the value to set.
   */
  public void setRead(java.lang.Integer value) {
    this.read = value;
  }

  /**
   * Gets the value of the 'write' field.
   * @return metrics-lib/ExtraInfoDescriptor: int getConnBiDirectWrite()
   */
  public java.lang.Integer getWrite() {
    return write;
  }

  /**
   * Sets the value of the 'write' field.
   * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectWrite()
   * @param value the value to set.
   */
  public void setWrite(java.lang.Integer value) {
    this.write = value;
  }

  /**
   * Gets the value of the 'both' field.
   * @return metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBoth()
   */
  public java.lang.Integer getBoth() {
    return both;
  }

  /**
   * Sets the value of the 'both' field.
   * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBoth()
   * @param value the value to set.
   */
  public void setBoth(java.lang.Integer value) {
    this.both = value;
  }

  /**
   * Creates a new ConnBiDirect RecordBuilder.
   * @return A new ConnBiDirect RecordBuilder
   */
  public static converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder newBuilder() {
    return new converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder();
  }
  
  /**
   * Creates a new ConnBiDirect RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ConnBiDirect RecordBuilder
   */
  public static converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder newBuilder(converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder other) {
    return new converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder(other);
  }
  
  /**
   * Creates a new ConnBiDirect RecordBuilder by copying an existing ConnBiDirect instance.
   * @param other The existing instance to copy.
   * @return A new ConnBiDirect RecordBuilder
   */
  public static converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder newBuilder(converTor.encoders.java.bridgeExtra.ConnBiDirect other) {
    return new converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder(other);
  }
  
  /**
   * RecordBuilder for ConnBiDirect instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ConnBiDirect>
    implements org.apache.avro.data.RecordBuilder<ConnBiDirect> {

    /** metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsEndMillis() */
    private java.lang.Long date;
    /** metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsIntervalLength() */
    private java.lang.Long interval;
    /** metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBelow() */
    private java.lang.Integer below;
    /** metrics-lib/ExtraInfoDescriptor: int getConnBiDirectRead() */
    private java.lang.Integer read;
    /** metrics-lib/ExtraInfoDescriptor: int getConnBiDirectWrite() */
    private java.lang.Integer write;
    /** metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBoth() */
    private java.lang.Integer both;

    /** Creates a new Builder */
    private Builder() {
      super(converTor.encoders.java.bridgeExtra.ConnBiDirect.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.interval)) {
        this.interval = data().deepCopy(fields()[1].schema(), other.interval);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.below)) {
        this.below = data().deepCopy(fields()[2].schema(), other.below);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.read)) {
        this.read = data().deepCopy(fields()[3].schema(), other.read);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.write)) {
        this.write = data().deepCopy(fields()[4].schema(), other.write);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.both)) {
        this.both = data().deepCopy(fields()[5].schema(), other.both);
        fieldSetFlags()[5] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing ConnBiDirect instance
     * @param other The existing instance to copy.
     */
    private Builder(converTor.encoders.java.bridgeExtra.ConnBiDirect other) {
            super(converTor.encoders.java.bridgeExtra.ConnBiDirect.SCHEMA$);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.interval)) {
        this.interval = data().deepCopy(fields()[1].schema(), other.interval);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.below)) {
        this.below = data().deepCopy(fields()[2].schema(), other.below);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.read)) {
        this.read = data().deepCopy(fields()[3].schema(), other.read);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.write)) {
        this.write = data().deepCopy(fields()[4].schema(), other.write);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.both)) {
        this.both = data().deepCopy(fields()[5].schema(), other.both);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'date' field.
      * metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsEndMillis()
      * @return The value.
      */
    public java.lang.Long getDate() {
      return date;
    }

    /**
      * Sets the value of the 'date' field.
      * metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsEndMillis()
      * @param value The value of 'date'.
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder setDate(java.lang.Long value) {
      validate(fields()[0], value);
      this.date = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'date' field has been set.
      * metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsEndMillis()
      * @return True if the 'date' field has been set, false otherwise.
      */
    public boolean hasDate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'date' field.
      * metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsEndMillis()
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder clearDate() {
      date = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'interval' field.
      * metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsIntervalLength()
      * @return The value.
      */
    public java.lang.Long getInterval() {
      return interval;
    }

    /**
      * Sets the value of the 'interval' field.
      * metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsIntervalLength()
      * @param value The value of 'interval'.
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder setInterval(java.lang.Long value) {
      validate(fields()[1], value);
      this.interval = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'interval' field has been set.
      * metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsIntervalLength()
      * @return True if the 'interval' field has been set, false otherwise.
      */
    public boolean hasInterval() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'interval' field.
      * metrics-lib/ExtraInfoDescriptor: long getConnBiDirectStatsIntervalLength()
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder clearInterval() {
      interval = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'below' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBelow()
      * @return The value.
      */
    public java.lang.Integer getBelow() {
      return below;
    }

    /**
      * Sets the value of the 'below' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBelow()
      * @param value The value of 'below'.
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder setBelow(java.lang.Integer value) {
      validate(fields()[2], value);
      this.below = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'below' field has been set.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBelow()
      * @return True if the 'below' field has been set, false otherwise.
      */
    public boolean hasBelow() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'below' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBelow()
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder clearBelow() {
      below = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'read' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectRead()
      * @return The value.
      */
    public java.lang.Integer getRead() {
      return read;
    }

    /**
      * Sets the value of the 'read' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectRead()
      * @param value The value of 'read'.
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder setRead(java.lang.Integer value) {
      validate(fields()[3], value);
      this.read = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'read' field has been set.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectRead()
      * @return True if the 'read' field has been set, false otherwise.
      */
    public boolean hasRead() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'read' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectRead()
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder clearRead() {
      read = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'write' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectWrite()
      * @return The value.
      */
    public java.lang.Integer getWrite() {
      return write;
    }

    /**
      * Sets the value of the 'write' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectWrite()
      * @param value The value of 'write'.
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder setWrite(java.lang.Integer value) {
      validate(fields()[4], value);
      this.write = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'write' field has been set.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectWrite()
      * @return True if the 'write' field has been set, false otherwise.
      */
    public boolean hasWrite() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'write' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectWrite()
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder clearWrite() {
      write = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'both' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBoth()
      * @return The value.
      */
    public java.lang.Integer getBoth() {
      return both;
    }

    /**
      * Sets the value of the 'both' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBoth()
      * @param value The value of 'both'.
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder setBoth(java.lang.Integer value) {
      validate(fields()[5], value);
      this.both = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'both' field has been set.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBoth()
      * @return True if the 'both' field has been set, false otherwise.
      */
    public boolean hasBoth() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'both' field.
      * metrics-lib/ExtraInfoDescriptor: int getConnBiDirectBoth()
      * @return This builder.
      */
    public converTor.encoders.java.bridgeExtra.ConnBiDirect.Builder clearBoth() {
      both = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public ConnBiDirect build() {
      try {
        ConnBiDirect record = new ConnBiDirect();
        record.date = fieldSetFlags()[0] ? this.date : (java.lang.Long) defaultValue(fields()[0]);
        record.interval = fieldSetFlags()[1] ? this.interval : (java.lang.Long) defaultValue(fields()[1]);
        record.below = fieldSetFlags()[2] ? this.below : (java.lang.Integer) defaultValue(fields()[2]);
        record.read = fieldSetFlags()[3] ? this.read : (java.lang.Integer) defaultValue(fields()[3]);
        record.write = fieldSetFlags()[4] ? this.write : (java.lang.Integer) defaultValue(fields()[4]);
        record.both = fieldSetFlags()[5] ? this.both : (java.lang.Integer) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
