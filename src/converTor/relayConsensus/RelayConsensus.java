/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package converTor.relayConsensus;
@SuppressWarnings("all")
/** network-status-consensus-3 1.0 */
@org.apache.avro.specific.AvroGenerated
public class RelayConsensus extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RelayConsensus\",\"namespace\":\"converTor.relayConsensus\",\"doc\":\"network-status-consensus-3 1.0\",\"fields\":[{\"name\":\"descriptor_type\",\"type\":\"string\",\"default\":\"network-status-consensus-3 1.0\"},{\"name\":\"network_status_version\",\"type\":\"int\",\"default\":3},{\"name\":\"vote_status\",\"type\":[\"null\",\"int\"]},{\"name\":\"consensus_method\",\"type\":[\"null\",\"int\"]},{\"name\":\"consensus_flavor\",\"type\":[\"null\",\"string\"]},{\"name\":\"valid_after\",\"type\":[\"null\",\"string\"]},{\"name\":\"fresh_until\",\"type\":[\"null\",\"string\"]},{\"name\":\"valid_until\",\"type\":[\"null\",\"string\"]},{\"name\":\"voting_delay\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vote\",\"fields\":[{\"name\":\"vote_seconds\",\"type\":[\"null\",\"long\"]},{\"name\":\"dist_seconds\",\"type\":[\"null\",\"long\"]}]}]},{\"name\":\"client_versions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"server_versions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"known_flags\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"params\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"int\"}]},{\"name\":\"authorities\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Authority\",\"fields\":[{\"name\":\"dir_source\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DirSource\",\"fields\":[{\"name\":\"nickname\",\"type\":[\"null\",\"string\"]},{\"name\":\"identity\",\"type\":[\"null\",\"string\"]},{\"name\":\"address\",\"type\":[\"null\",\"string\"]},{\"name\":\"dir_port\",\"type\":[\"null\",\"int\"]},{\"name\":\"or_port\",\"type\":[\"null\",\"int\"]},{\"name\":\"is_legacy\",\"type\":[\"null\",\"boolean\"]}]}]},{\"name\":\"contact\",\"type\":[\"null\",\"string\"]},{\"name\":\"vote_digest\",\"type\":[\"null\",\"string\"]}]}}]},{\"name\":\"router_status\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Router\",\"fields\":[{\"name\":\"r\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"R\",\"fields\":[{\"name\":\"nickname\",\"type\":[\"null\",\"string\"]},{\"name\":\"identity\",\"type\":[\"null\",\"string\"]},{\"name\":\"digest\",\"type\":[\"null\",\"string\"]},{\"name\":\"publication\",\"type\":[\"null\",\"string\"]},{\"name\":\"ip\",\"type\":[\"null\",\"string\"]},{\"name\":\"or_port\",\"type\":[\"null\",\"int\"]},{\"name\":\"dir_port\",\"type\":[\"null\",\"int\"]}]}]},{\"name\":\"a\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"s\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"v\",\"type\":[\"null\",\"string\"]},{\"name\":\"w\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"W\",\"fields\":[{\"name\":\"bandwidth\",\"type\":[\"null\",\"long\"]},{\"name\":\"measured\",\"type\":[\"null\",\"long\"]},{\"name\":\"unmeasured\",\"type\":[\"null\",\"boolean\"]}]}]},{\"name\":\"p\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Policy\",\"fields\":[{\"name\":\"default_policy\",\"type\":[\"null\",\"string\"]},{\"name\":\"port_summary\",\"type\":[\"null\",\"string\"]}]}]}]}}]},{\"name\":\"directory_footer\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DirFooter\",\"fields\":[{\"name\":\"bandwidth_weights\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"int\"}]},{\"name\":\"consensus_digest\",\"type\":[\"null\",\"string\"]},{\"name\":\"directory_signature\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"DirSig\",\"fields\":[{\"name\":\"algorithm\",\"type\":[\"null\",\"string\"]},{\"name\":\"identity\",\"type\":[\"null\",\"string\"]},{\"name\":\"signing_key_digest\",\"type\":[\"null\",\"string\"]},{\"name\":\"signature\",\"type\":[\"null\",\"boolean\"]}]}}]}]}]}],\"aliases\":[\"relay_network_status_consensus_3\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence descriptor_type;
  @Deprecated public int network_status_version;
  @Deprecated public java.lang.Integer vote_status;
  @Deprecated public java.lang.Integer consensus_method;
  @Deprecated public java.lang.CharSequence consensus_flavor;
  @Deprecated public java.lang.CharSequence valid_after;
  @Deprecated public java.lang.CharSequence fresh_until;
  @Deprecated public java.lang.CharSequence valid_until;
  @Deprecated public converTor.relayConsensus.Vote voting_delay;
  @Deprecated public java.util.List<java.lang.CharSequence> client_versions;
  @Deprecated public java.util.List<java.lang.CharSequence> server_versions;
  @Deprecated public java.util.List<java.lang.CharSequence> known_flags;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Integer> params;
  @Deprecated public java.util.List<converTor.relayConsensus.Authority> authorities;
  @Deprecated public java.util.List<converTor.relayConsensus.Router> router_status;
  @Deprecated public converTor.relayConsensus.DirFooter directory_footer;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RelayConsensus() {}

  /**
   * All-args constructor.
   */
  public RelayConsensus(java.lang.CharSequence descriptor_type, java.lang.Integer network_status_version, java.lang.Integer vote_status, java.lang.Integer consensus_method, java.lang.CharSequence consensus_flavor, java.lang.CharSequence valid_after, java.lang.CharSequence fresh_until, java.lang.CharSequence valid_until, converTor.relayConsensus.Vote voting_delay, java.util.List<java.lang.CharSequence> client_versions, java.util.List<java.lang.CharSequence> server_versions, java.util.List<java.lang.CharSequence> known_flags, java.util.Map<java.lang.CharSequence,java.lang.Integer> params, java.util.List<converTor.relayConsensus.Authority> authorities, java.util.List<converTor.relayConsensus.Router> router_status, converTor.relayConsensus.DirFooter directory_footer) {
    this.descriptor_type = descriptor_type;
    this.network_status_version = network_status_version;
    this.vote_status = vote_status;
    this.consensus_method = consensus_method;
    this.consensus_flavor = consensus_flavor;
    this.valid_after = valid_after;
    this.fresh_until = fresh_until;
    this.valid_until = valid_until;
    this.voting_delay = voting_delay;
    this.client_versions = client_versions;
    this.server_versions = server_versions;
    this.known_flags = known_flags;
    this.params = params;
    this.authorities = authorities;
    this.router_status = router_status;
    this.directory_footer = directory_footer;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return descriptor_type;
    case 1: return network_status_version;
    case 2: return vote_status;
    case 3: return consensus_method;
    case 4: return consensus_flavor;
    case 5: return valid_after;
    case 6: return fresh_until;
    case 7: return valid_until;
    case 8: return voting_delay;
    case 9: return client_versions;
    case 10: return server_versions;
    case 11: return known_flags;
    case 12: return params;
    case 13: return authorities;
    case 14: return router_status;
    case 15: return directory_footer;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: descriptor_type = (java.lang.CharSequence)value$; break;
    case 1: network_status_version = (java.lang.Integer)value$; break;
    case 2: vote_status = (java.lang.Integer)value$; break;
    case 3: consensus_method = (java.lang.Integer)value$; break;
    case 4: consensus_flavor = (java.lang.CharSequence)value$; break;
    case 5: valid_after = (java.lang.CharSequence)value$; break;
    case 6: fresh_until = (java.lang.CharSequence)value$; break;
    case 7: valid_until = (java.lang.CharSequence)value$; break;
    case 8: voting_delay = (converTor.relayConsensus.Vote)value$; break;
    case 9: client_versions = (java.util.List<java.lang.CharSequence>)value$; break;
    case 10: server_versions = (java.util.List<java.lang.CharSequence>)value$; break;
    case 11: known_flags = (java.util.List<java.lang.CharSequence>)value$; break;
    case 12: params = (java.util.Map<java.lang.CharSequence,java.lang.Integer>)value$; break;
    case 13: authorities = (java.util.List<converTor.relayConsensus.Authority>)value$; break;
    case 14: router_status = (java.util.List<converTor.relayConsensus.Router>)value$; break;
    case 15: directory_footer = (converTor.relayConsensus.DirFooter)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'descriptor_type' field.
   */
  public java.lang.CharSequence getDescriptorType() {
    return descriptor_type;
  }

  /**
   * Sets the value of the 'descriptor_type' field.
   * @param value the value to set.
   */
  public void setDescriptorType(java.lang.CharSequence value) {
    this.descriptor_type = value;
  }

  /**
   * Gets the value of the 'network_status_version' field.
   */
  public java.lang.Integer getNetworkStatusVersion() {
    return network_status_version;
  }

  /**
   * Sets the value of the 'network_status_version' field.
   * @param value the value to set.
   */
  public void setNetworkStatusVersion(java.lang.Integer value) {
    this.network_status_version = value;
  }

  /**
   * Gets the value of the 'vote_status' field.
   */
  public java.lang.Integer getVoteStatus() {
    return vote_status;
  }

  /**
   * Sets the value of the 'vote_status' field.
   * @param value the value to set.
   */
  public void setVoteStatus(java.lang.Integer value) {
    this.vote_status = value;
  }

  /**
   * Gets the value of the 'consensus_method' field.
   */
  public java.lang.Integer getConsensusMethod() {
    return consensus_method;
  }

  /**
   * Sets the value of the 'consensus_method' field.
   * @param value the value to set.
   */
  public void setConsensusMethod(java.lang.Integer value) {
    this.consensus_method = value;
  }

  /**
   * Gets the value of the 'consensus_flavor' field.
   */
  public java.lang.CharSequence getConsensusFlavor() {
    return consensus_flavor;
  }

  /**
   * Sets the value of the 'consensus_flavor' field.
   * @param value the value to set.
   */
  public void setConsensusFlavor(java.lang.CharSequence value) {
    this.consensus_flavor = value;
  }

  /**
   * Gets the value of the 'valid_after' field.
   */
  public java.lang.CharSequence getValidAfter() {
    return valid_after;
  }

  /**
   * Sets the value of the 'valid_after' field.
   * @param value the value to set.
   */
  public void setValidAfter(java.lang.CharSequence value) {
    this.valid_after = value;
  }

  /**
   * Gets the value of the 'fresh_until' field.
   */
  public java.lang.CharSequence getFreshUntil() {
    return fresh_until;
  }

  /**
   * Sets the value of the 'fresh_until' field.
   * @param value the value to set.
   */
  public void setFreshUntil(java.lang.CharSequence value) {
    this.fresh_until = value;
  }

  /**
   * Gets the value of the 'valid_until' field.
   */
  public java.lang.CharSequence getValidUntil() {
    return valid_until;
  }

  /**
   * Sets the value of the 'valid_until' field.
   * @param value the value to set.
   */
  public void setValidUntil(java.lang.CharSequence value) {
    this.valid_until = value;
  }

  /**
   * Gets the value of the 'voting_delay' field.
   */
  public converTor.relayConsensus.Vote getVotingDelay() {
    return voting_delay;
  }

  /**
   * Sets the value of the 'voting_delay' field.
   * @param value the value to set.
   */
  public void setVotingDelay(converTor.relayConsensus.Vote value) {
    this.voting_delay = value;
  }

  /**
   * Gets the value of the 'client_versions' field.
   */
  public java.util.List<java.lang.CharSequence> getClientVersions() {
    return client_versions;
  }

  /**
   * Sets the value of the 'client_versions' field.
   * @param value the value to set.
   */
  public void setClientVersions(java.util.List<java.lang.CharSequence> value) {
    this.client_versions = value;
  }

  /**
   * Gets the value of the 'server_versions' field.
   */
  public java.util.List<java.lang.CharSequence> getServerVersions() {
    return server_versions;
  }

  /**
   * Sets the value of the 'server_versions' field.
   * @param value the value to set.
   */
  public void setServerVersions(java.util.List<java.lang.CharSequence> value) {
    this.server_versions = value;
  }

  /**
   * Gets the value of the 'known_flags' field.
   */
  public java.util.List<java.lang.CharSequence> getKnownFlags() {
    return known_flags;
  }

  /**
   * Sets the value of the 'known_flags' field.
   * @param value the value to set.
   */
  public void setKnownFlags(java.util.List<java.lang.CharSequence> value) {
    this.known_flags = value;
  }

  /**
   * Gets the value of the 'params' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Integer> getParams() {
    return params;
  }

  /**
   * Sets the value of the 'params' field.
   * @param value the value to set.
   */
  public void setParams(java.util.Map<java.lang.CharSequence,java.lang.Integer> value) {
    this.params = value;
  }

  /**
   * Gets the value of the 'authorities' field.
   */
  public java.util.List<converTor.relayConsensus.Authority> getAuthorities() {
    return authorities;
  }

  /**
   * Sets the value of the 'authorities' field.
   * @param value the value to set.
   */
  public void setAuthorities(java.util.List<converTor.relayConsensus.Authority> value) {
    this.authorities = value;
  }

  /**
   * Gets the value of the 'router_status' field.
   */
  public java.util.List<converTor.relayConsensus.Router> getRouterStatus() {
    return router_status;
  }

  /**
   * Sets the value of the 'router_status' field.
   * @param value the value to set.
   */
  public void setRouterStatus(java.util.List<converTor.relayConsensus.Router> value) {
    this.router_status = value;
  }

  /**
   * Gets the value of the 'directory_footer' field.
   */
  public converTor.relayConsensus.DirFooter getDirectoryFooter() {
    return directory_footer;
  }

  /**
   * Sets the value of the 'directory_footer' field.
   * @param value the value to set.
   */
  public void setDirectoryFooter(converTor.relayConsensus.DirFooter value) {
    this.directory_footer = value;
  }

  /** Creates a new RelayConsensus RecordBuilder */
  public static converTor.relayConsensus.RelayConsensus.Builder newBuilder() {
    return new converTor.relayConsensus.RelayConsensus.Builder();
  }
  
  /** Creates a new RelayConsensus RecordBuilder by copying an existing Builder */
  public static converTor.relayConsensus.RelayConsensus.Builder newBuilder(converTor.relayConsensus.RelayConsensus.Builder other) {
    return new converTor.relayConsensus.RelayConsensus.Builder(other);
  }
  
  /** Creates a new RelayConsensus RecordBuilder by copying an existing RelayConsensus instance */
  public static converTor.relayConsensus.RelayConsensus.Builder newBuilder(converTor.relayConsensus.RelayConsensus other) {
    return new converTor.relayConsensus.RelayConsensus.Builder(other);
  }
  
  /**
   * RecordBuilder for RelayConsensus instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RelayConsensus>
    implements org.apache.avro.data.RecordBuilder<RelayConsensus> {

    private java.lang.CharSequence descriptor_type;
    private int network_status_version;
    private java.lang.Integer vote_status;
    private java.lang.Integer consensus_method;
    private java.lang.CharSequence consensus_flavor;
    private java.lang.CharSequence valid_after;
    private java.lang.CharSequence fresh_until;
    private java.lang.CharSequence valid_until;
    private converTor.relayConsensus.Vote voting_delay;
    private java.util.List<java.lang.CharSequence> client_versions;
    private java.util.List<java.lang.CharSequence> server_versions;
    private java.util.List<java.lang.CharSequence> known_flags;
    private java.util.Map<java.lang.CharSequence,java.lang.Integer> params;
    private java.util.List<converTor.relayConsensus.Authority> authorities;
    private java.util.List<converTor.relayConsensus.Router> router_status;
    private converTor.relayConsensus.DirFooter directory_footer;

    /** Creates a new Builder */
    private Builder() {
      super(converTor.relayConsensus.RelayConsensus.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(converTor.relayConsensus.RelayConsensus.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.network_status_version)) {
        this.network_status_version = data().deepCopy(fields()[1].schema(), other.network_status_version);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.vote_status)) {
        this.vote_status = data().deepCopy(fields()[2].schema(), other.vote_status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.consensus_method)) {
        this.consensus_method = data().deepCopy(fields()[3].schema(), other.consensus_method);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.consensus_flavor)) {
        this.consensus_flavor = data().deepCopy(fields()[4].schema(), other.consensus_flavor);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.valid_after)) {
        this.valid_after = data().deepCopy(fields()[5].schema(), other.valid_after);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fresh_until)) {
        this.fresh_until = data().deepCopy(fields()[6].schema(), other.fresh_until);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.valid_until)) {
        this.valid_until = data().deepCopy(fields()[7].schema(), other.valid_until);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.voting_delay)) {
        this.voting_delay = data().deepCopy(fields()[8].schema(), other.voting_delay);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.client_versions)) {
        this.client_versions = data().deepCopy(fields()[9].schema(), other.client_versions);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.server_versions)) {
        this.server_versions = data().deepCopy(fields()[10].schema(), other.server_versions);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.known_flags)) {
        this.known_flags = data().deepCopy(fields()[11].schema(), other.known_flags);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.params)) {
        this.params = data().deepCopy(fields()[12].schema(), other.params);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.authorities)) {
        this.authorities = data().deepCopy(fields()[13].schema(), other.authorities);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.router_status)) {
        this.router_status = data().deepCopy(fields()[14].schema(), other.router_status);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.directory_footer)) {
        this.directory_footer = data().deepCopy(fields()[15].schema(), other.directory_footer);
        fieldSetFlags()[15] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RelayConsensus instance */
    private Builder(converTor.relayConsensus.RelayConsensus other) {
            super(converTor.relayConsensus.RelayConsensus.SCHEMA$);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.network_status_version)) {
        this.network_status_version = data().deepCopy(fields()[1].schema(), other.network_status_version);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.vote_status)) {
        this.vote_status = data().deepCopy(fields()[2].schema(), other.vote_status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.consensus_method)) {
        this.consensus_method = data().deepCopy(fields()[3].schema(), other.consensus_method);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.consensus_flavor)) {
        this.consensus_flavor = data().deepCopy(fields()[4].schema(), other.consensus_flavor);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.valid_after)) {
        this.valid_after = data().deepCopy(fields()[5].schema(), other.valid_after);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fresh_until)) {
        this.fresh_until = data().deepCopy(fields()[6].schema(), other.fresh_until);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.valid_until)) {
        this.valid_until = data().deepCopy(fields()[7].schema(), other.valid_until);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.voting_delay)) {
        this.voting_delay = data().deepCopy(fields()[8].schema(), other.voting_delay);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.client_versions)) {
        this.client_versions = data().deepCopy(fields()[9].schema(), other.client_versions);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.server_versions)) {
        this.server_versions = data().deepCopy(fields()[10].schema(), other.server_versions);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.known_flags)) {
        this.known_flags = data().deepCopy(fields()[11].schema(), other.known_flags);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.params)) {
        this.params = data().deepCopy(fields()[12].schema(), other.params);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.authorities)) {
        this.authorities = data().deepCopy(fields()[13].schema(), other.authorities);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.router_status)) {
        this.router_status = data().deepCopy(fields()[14].schema(), other.router_status);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.directory_footer)) {
        this.directory_footer = data().deepCopy(fields()[15].schema(), other.directory_footer);
        fieldSetFlags()[15] = true;
      }
    }

    /** Gets the value of the 'descriptor_type' field */
    public java.lang.CharSequence getDescriptorType() {
      return descriptor_type;
    }
    
    /** Sets the value of the 'descriptor_type' field */
    public converTor.relayConsensus.RelayConsensus.Builder setDescriptorType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.descriptor_type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'descriptor_type' field has been set */
    public boolean hasDescriptorType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'descriptor_type' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearDescriptorType() {
      descriptor_type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'network_status_version' field */
    public java.lang.Integer getNetworkStatusVersion() {
      return network_status_version;
    }
    
    /** Sets the value of the 'network_status_version' field */
    public converTor.relayConsensus.RelayConsensus.Builder setNetworkStatusVersion(int value) {
      validate(fields()[1], value);
      this.network_status_version = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'network_status_version' field has been set */
    public boolean hasNetworkStatusVersion() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'network_status_version' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearNetworkStatusVersion() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'vote_status' field */
    public java.lang.Integer getVoteStatus() {
      return vote_status;
    }
    
    /** Sets the value of the 'vote_status' field */
    public converTor.relayConsensus.RelayConsensus.Builder setVoteStatus(java.lang.Integer value) {
      validate(fields()[2], value);
      this.vote_status = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'vote_status' field has been set */
    public boolean hasVoteStatus() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'vote_status' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearVoteStatus() {
      vote_status = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'consensus_method' field */
    public java.lang.Integer getConsensusMethod() {
      return consensus_method;
    }
    
    /** Sets the value of the 'consensus_method' field */
    public converTor.relayConsensus.RelayConsensus.Builder setConsensusMethod(java.lang.Integer value) {
      validate(fields()[3], value);
      this.consensus_method = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'consensus_method' field has been set */
    public boolean hasConsensusMethod() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'consensus_method' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearConsensusMethod() {
      consensus_method = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'consensus_flavor' field */
    public java.lang.CharSequence getConsensusFlavor() {
      return consensus_flavor;
    }
    
    /** Sets the value of the 'consensus_flavor' field */
    public converTor.relayConsensus.RelayConsensus.Builder setConsensusFlavor(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.consensus_flavor = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'consensus_flavor' field has been set */
    public boolean hasConsensusFlavor() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'consensus_flavor' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearConsensusFlavor() {
      consensus_flavor = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'valid_after' field */
    public java.lang.CharSequence getValidAfter() {
      return valid_after;
    }
    
    /** Sets the value of the 'valid_after' field */
    public converTor.relayConsensus.RelayConsensus.Builder setValidAfter(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.valid_after = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'valid_after' field has been set */
    public boolean hasValidAfter() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'valid_after' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearValidAfter() {
      valid_after = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'fresh_until' field */
    public java.lang.CharSequence getFreshUntil() {
      return fresh_until;
    }
    
    /** Sets the value of the 'fresh_until' field */
    public converTor.relayConsensus.RelayConsensus.Builder setFreshUntil(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.fresh_until = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'fresh_until' field has been set */
    public boolean hasFreshUntil() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'fresh_until' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearFreshUntil() {
      fresh_until = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'valid_until' field */
    public java.lang.CharSequence getValidUntil() {
      return valid_until;
    }
    
    /** Sets the value of the 'valid_until' field */
    public converTor.relayConsensus.RelayConsensus.Builder setValidUntil(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.valid_until = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'valid_until' field has been set */
    public boolean hasValidUntil() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'valid_until' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearValidUntil() {
      valid_until = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'voting_delay' field */
    public converTor.relayConsensus.Vote getVotingDelay() {
      return voting_delay;
    }
    
    /** Sets the value of the 'voting_delay' field */
    public converTor.relayConsensus.RelayConsensus.Builder setVotingDelay(converTor.relayConsensus.Vote value) {
      validate(fields()[8], value);
      this.voting_delay = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'voting_delay' field has been set */
    public boolean hasVotingDelay() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'voting_delay' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearVotingDelay() {
      voting_delay = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'client_versions' field */
    public java.util.List<java.lang.CharSequence> getClientVersions() {
      return client_versions;
    }
    
    /** Sets the value of the 'client_versions' field */
    public converTor.relayConsensus.RelayConsensus.Builder setClientVersions(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[9], value);
      this.client_versions = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'client_versions' field has been set */
    public boolean hasClientVersions() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'client_versions' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearClientVersions() {
      client_versions = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'server_versions' field */
    public java.util.List<java.lang.CharSequence> getServerVersions() {
      return server_versions;
    }
    
    /** Sets the value of the 'server_versions' field */
    public converTor.relayConsensus.RelayConsensus.Builder setServerVersions(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[10], value);
      this.server_versions = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'server_versions' field has been set */
    public boolean hasServerVersions() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'server_versions' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearServerVersions() {
      server_versions = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'known_flags' field */
    public java.util.List<java.lang.CharSequence> getKnownFlags() {
      return known_flags;
    }
    
    /** Sets the value of the 'known_flags' field */
    public converTor.relayConsensus.RelayConsensus.Builder setKnownFlags(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[11], value);
      this.known_flags = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'known_flags' field has been set */
    public boolean hasKnownFlags() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'known_flags' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearKnownFlags() {
      known_flags = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'params' field */
    public java.util.Map<java.lang.CharSequence,java.lang.Integer> getParams() {
      return params;
    }
    
    /** Sets the value of the 'params' field */
    public converTor.relayConsensus.RelayConsensus.Builder setParams(java.util.Map<java.lang.CharSequence,java.lang.Integer> value) {
      validate(fields()[12], value);
      this.params = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'params' field has been set */
    public boolean hasParams() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'params' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearParams() {
      params = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'authorities' field */
    public java.util.List<converTor.relayConsensus.Authority> getAuthorities() {
      return authorities;
    }
    
    /** Sets the value of the 'authorities' field */
    public converTor.relayConsensus.RelayConsensus.Builder setAuthorities(java.util.List<converTor.relayConsensus.Authority> value) {
      validate(fields()[13], value);
      this.authorities = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'authorities' field has been set */
    public boolean hasAuthorities() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'authorities' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearAuthorities() {
      authorities = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'router_status' field */
    public java.util.List<converTor.relayConsensus.Router> getRouterStatus() {
      return router_status;
    }
    
    /** Sets the value of the 'router_status' field */
    public converTor.relayConsensus.RelayConsensus.Builder setRouterStatus(java.util.List<converTor.relayConsensus.Router> value) {
      validate(fields()[14], value);
      this.router_status = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'router_status' field has been set */
    public boolean hasRouterStatus() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'router_status' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearRouterStatus() {
      router_status = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'directory_footer' field */
    public converTor.relayConsensus.DirFooter getDirectoryFooter() {
      return directory_footer;
    }
    
    /** Sets the value of the 'directory_footer' field */
    public converTor.relayConsensus.RelayConsensus.Builder setDirectoryFooter(converTor.relayConsensus.DirFooter value) {
      validate(fields()[15], value);
      this.directory_footer = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'directory_footer' field has been set */
    public boolean hasDirectoryFooter() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'directory_footer' field */
    public converTor.relayConsensus.RelayConsensus.Builder clearDirectoryFooter() {
      directory_footer = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    public RelayConsensus build() {
      try {
        RelayConsensus record = new RelayConsensus();
        record.descriptor_type = fieldSetFlags()[0] ? this.descriptor_type : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.network_status_version = fieldSetFlags()[1] ? this.network_status_version : (java.lang.Integer) defaultValue(fields()[1]);
        record.vote_status = fieldSetFlags()[2] ? this.vote_status : (java.lang.Integer) defaultValue(fields()[2]);
        record.consensus_method = fieldSetFlags()[3] ? this.consensus_method : (java.lang.Integer) defaultValue(fields()[3]);
        record.consensus_flavor = fieldSetFlags()[4] ? this.consensus_flavor : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.valid_after = fieldSetFlags()[5] ? this.valid_after : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.fresh_until = fieldSetFlags()[6] ? this.fresh_until : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.valid_until = fieldSetFlags()[7] ? this.valid_until : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.voting_delay = fieldSetFlags()[8] ? this.voting_delay : (converTor.relayConsensus.Vote) defaultValue(fields()[8]);
        record.client_versions = fieldSetFlags()[9] ? this.client_versions : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[9]);
        record.server_versions = fieldSetFlags()[10] ? this.server_versions : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[10]);
        record.known_flags = fieldSetFlags()[11] ? this.known_flags : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[11]);
        record.params = fieldSetFlags()[12] ? this.params : (java.util.Map<java.lang.CharSequence,java.lang.Integer>) defaultValue(fields()[12]);
        record.authorities = fieldSetFlags()[13] ? this.authorities : (java.util.List<converTor.relayConsensus.Authority>) defaultValue(fields()[13]);
        record.router_status = fieldSetFlags()[14] ? this.router_status : (java.util.List<converTor.relayConsensus.Router>) defaultValue(fields()[14]);
        record.directory_footer = fieldSetFlags()[15] ? this.directory_footer : (converTor.relayConsensus.DirFooter) defaultValue(fields()[15]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
