/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package converTor.relayConsensus;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Authority extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Authority\",\"namespace\":\"converTor.relayConsensus\",\"fields\":[{\"name\":\"dir_source\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DirSource\",\"fields\":[{\"name\":\"nickname\",\"type\":[\"null\",\"string\"]},{\"name\":\"identity\",\"type\":[\"null\",\"string\"]},{\"name\":\"address\",\"type\":[\"null\",\"string\"]},{\"name\":\"dir_port\",\"type\":[\"null\",\"int\"]},{\"name\":\"or_port\",\"type\":[\"null\",\"int\"]},{\"name\":\"is_legacy\",\"type\":[\"null\",\"boolean\"]}]}]},{\"name\":\"contact\",\"type\":[\"null\",\"string\"]},{\"name\":\"vote_digest\",\"type\":[\"null\",\"string\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public converTor.relayConsensus.DirSource dir_source;
  @Deprecated public java.lang.CharSequence contact;
  @Deprecated public java.lang.CharSequence vote_digest;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Authority() {}

  /**
   * All-args constructor.
   */
  public Authority(converTor.relayConsensus.DirSource dir_source, java.lang.CharSequence contact, java.lang.CharSequence vote_digest) {
    this.dir_source = dir_source;
    this.contact = contact;
    this.vote_digest = vote_digest;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return dir_source;
    case 1: return contact;
    case 2: return vote_digest;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: dir_source = (converTor.relayConsensus.DirSource)value$; break;
    case 1: contact = (java.lang.CharSequence)value$; break;
    case 2: vote_digest = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'dir_source' field.
   */
  public converTor.relayConsensus.DirSource getDirSource() {
    return dir_source;
  }

  /**
   * Sets the value of the 'dir_source' field.
   * @param value the value to set.
   */
  public void setDirSource(converTor.relayConsensus.DirSource value) {
    this.dir_source = value;
  }

  /**
   * Gets the value of the 'contact' field.
   */
  public java.lang.CharSequence getContact() {
    return contact;
  }

  /**
   * Sets the value of the 'contact' field.
   * @param value the value to set.
   */
  public void setContact(java.lang.CharSequence value) {
    this.contact = value;
  }

  /**
   * Gets the value of the 'vote_digest' field.
   */
  public java.lang.CharSequence getVoteDigest() {
    return vote_digest;
  }

  /**
   * Sets the value of the 'vote_digest' field.
   * @param value the value to set.
   */
  public void setVoteDigest(java.lang.CharSequence value) {
    this.vote_digest = value;
  }

  /** Creates a new Authority RecordBuilder */
  public static converTor.relayConsensus.Authority.Builder newBuilder() {
    return new converTor.relayConsensus.Authority.Builder();
  }
  
  /** Creates a new Authority RecordBuilder by copying an existing Builder */
  public static converTor.relayConsensus.Authority.Builder newBuilder(converTor.relayConsensus.Authority.Builder other) {
    return new converTor.relayConsensus.Authority.Builder(other);
  }
  
  /** Creates a new Authority RecordBuilder by copying an existing Authority instance */
  public static converTor.relayConsensus.Authority.Builder newBuilder(converTor.relayConsensus.Authority other) {
    return new converTor.relayConsensus.Authority.Builder(other);
  }
  
  /**
   * RecordBuilder for Authority instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Authority>
    implements org.apache.avro.data.RecordBuilder<Authority> {

    private converTor.relayConsensus.DirSource dir_source;
    private java.lang.CharSequence contact;
    private java.lang.CharSequence vote_digest;

    /** Creates a new Builder */
    private Builder() {
      super(converTor.relayConsensus.Authority.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(converTor.relayConsensus.Authority.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.dir_source)) {
        this.dir_source = data().deepCopy(fields()[0].schema(), other.dir_source);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.contact)) {
        this.contact = data().deepCopy(fields()[1].schema(), other.contact);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.vote_digest)) {
        this.vote_digest = data().deepCopy(fields()[2].schema(), other.vote_digest);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Authority instance */
    private Builder(converTor.relayConsensus.Authority other) {
            super(converTor.relayConsensus.Authority.SCHEMA$);
      if (isValidValue(fields()[0], other.dir_source)) {
        this.dir_source = data().deepCopy(fields()[0].schema(), other.dir_source);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.contact)) {
        this.contact = data().deepCopy(fields()[1].schema(), other.contact);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.vote_digest)) {
        this.vote_digest = data().deepCopy(fields()[2].schema(), other.vote_digest);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'dir_source' field */
    public converTor.relayConsensus.DirSource getDirSource() {
      return dir_source;
    }
    
    /** Sets the value of the 'dir_source' field */
    public converTor.relayConsensus.Authority.Builder setDirSource(converTor.relayConsensus.DirSource value) {
      validate(fields()[0], value);
      this.dir_source = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'dir_source' field has been set */
    public boolean hasDirSource() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'dir_source' field */
    public converTor.relayConsensus.Authority.Builder clearDirSource() {
      dir_source = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'contact' field */
    public java.lang.CharSequence getContact() {
      return contact;
    }
    
    /** Sets the value of the 'contact' field */
    public converTor.relayConsensus.Authority.Builder setContact(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.contact = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'contact' field has been set */
    public boolean hasContact() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'contact' field */
    public converTor.relayConsensus.Authority.Builder clearContact() {
      contact = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'vote_digest' field */
    public java.lang.CharSequence getVoteDigest() {
      return vote_digest;
    }
    
    /** Sets the value of the 'vote_digest' field */
    public converTor.relayConsensus.Authority.Builder setVoteDigest(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.vote_digest = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'vote_digest' field has been set */
    public boolean hasVoteDigest() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'vote_digest' field */
    public converTor.relayConsensus.Authority.Builder clearVoteDigest() {
      vote_digest = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Authority build() {
      try {
        Authority record = new Authority();
        record.dir_source = fieldSetFlags()[0] ? this.dir_source : (converTor.relayConsensus.DirSource) defaultValue(fields()[0]);
        record.contact = fieldSetFlags()[1] ? this.contact : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.vote_digest = fieldSetFlags()[2] ? this.vote_digest : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
