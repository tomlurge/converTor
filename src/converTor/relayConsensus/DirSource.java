/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package converTor.relayConsensus;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DirSource extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DirSource\",\"namespace\":\"converTor.relayConsensus\",\"fields\":[{\"name\":\"nickname\",\"type\":[\"null\",\"string\"]},{\"name\":\"identity\",\"type\":[\"null\",\"string\"]},{\"name\":\"address\",\"type\":[\"null\",\"string\"]},{\"name\":\"dir_port\",\"type\":[\"null\",\"int\"]},{\"name\":\"or_port\",\"type\":[\"null\",\"int\"]},{\"name\":\"is_legacy\",\"type\":[\"null\",\"boolean\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence nickname;
  @Deprecated public java.lang.CharSequence identity;
  @Deprecated public java.lang.CharSequence address;
  @Deprecated public java.lang.Integer dir_port;
  @Deprecated public java.lang.Integer or_port;
  @Deprecated public java.lang.Boolean is_legacy;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DirSource() {}

  /**
   * All-args constructor.
   */
  public DirSource(java.lang.CharSequence nickname, java.lang.CharSequence identity, java.lang.CharSequence address, java.lang.Integer dir_port, java.lang.Integer or_port, java.lang.Boolean is_legacy) {
    this.nickname = nickname;
    this.identity = identity;
    this.address = address;
    this.dir_port = dir_port;
    this.or_port = or_port;
    this.is_legacy = is_legacy;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return nickname;
    case 1: return identity;
    case 2: return address;
    case 3: return dir_port;
    case 4: return or_port;
    case 5: return is_legacy;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: nickname = (java.lang.CharSequence)value$; break;
    case 1: identity = (java.lang.CharSequence)value$; break;
    case 2: address = (java.lang.CharSequence)value$; break;
    case 3: dir_port = (java.lang.Integer)value$; break;
    case 4: or_port = (java.lang.Integer)value$; break;
    case 5: is_legacy = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'nickname' field.
   */
  public java.lang.CharSequence getNickname() {
    return nickname;
  }

  /**
   * Sets the value of the 'nickname' field.
   * @param value the value to set.
   */
  public void setNickname(java.lang.CharSequence value) {
    this.nickname = value;
  }

  /**
   * Gets the value of the 'identity' field.
   */
  public java.lang.CharSequence getIdentity() {
    return identity;
  }

  /**
   * Sets the value of the 'identity' field.
   * @param value the value to set.
   */
  public void setIdentity(java.lang.CharSequence value) {
    this.identity = value;
  }

  /**
   * Gets the value of the 'address' field.
   */
  public java.lang.CharSequence getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.CharSequence value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'dir_port' field.
   */
  public java.lang.Integer getDirPort() {
    return dir_port;
  }

  /**
   * Sets the value of the 'dir_port' field.
   * @param value the value to set.
   */
  public void setDirPort(java.lang.Integer value) {
    this.dir_port = value;
  }

  /**
   * Gets the value of the 'or_port' field.
   */
  public java.lang.Integer getOrPort() {
    return or_port;
  }

  /**
   * Sets the value of the 'or_port' field.
   * @param value the value to set.
   */
  public void setOrPort(java.lang.Integer value) {
    this.or_port = value;
  }

  /**
   * Gets the value of the 'is_legacy' field.
   */
  public java.lang.Boolean getIsLegacy() {
    return is_legacy;
  }

  /**
   * Sets the value of the 'is_legacy' field.
   * @param value the value to set.
   */
  public void setIsLegacy(java.lang.Boolean value) {
    this.is_legacy = value;
  }

  /** Creates a new DirSource RecordBuilder */
  public static converTor.relayConsensus.DirSource.Builder newBuilder() {
    return new converTor.relayConsensus.DirSource.Builder();
  }
  
  /** Creates a new DirSource RecordBuilder by copying an existing Builder */
  public static converTor.relayConsensus.DirSource.Builder newBuilder(converTor.relayConsensus.DirSource.Builder other) {
    return new converTor.relayConsensus.DirSource.Builder(other);
  }
  
  /** Creates a new DirSource RecordBuilder by copying an existing DirSource instance */
  public static converTor.relayConsensus.DirSource.Builder newBuilder(converTor.relayConsensus.DirSource other) {
    return new converTor.relayConsensus.DirSource.Builder(other);
  }
  
  /**
   * RecordBuilder for DirSource instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DirSource>
    implements org.apache.avro.data.RecordBuilder<DirSource> {

    private java.lang.CharSequence nickname;
    private java.lang.CharSequence identity;
    private java.lang.CharSequence address;
    private java.lang.Integer dir_port;
    private java.lang.Integer or_port;
    private java.lang.Boolean is_legacy;

    /** Creates a new Builder */
    private Builder() {
      super(converTor.relayConsensus.DirSource.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(converTor.relayConsensus.DirSource.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.nickname)) {
        this.nickname = data().deepCopy(fields()[0].schema(), other.nickname);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.identity)) {
        this.identity = data().deepCopy(fields()[1].schema(), other.identity);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address)) {
        this.address = data().deepCopy(fields()[2].schema(), other.address);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dir_port)) {
        this.dir_port = data().deepCopy(fields()[3].schema(), other.dir_port);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.or_port)) {
        this.or_port = data().deepCopy(fields()[4].schema(), other.or_port);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.is_legacy)) {
        this.is_legacy = data().deepCopy(fields()[5].schema(), other.is_legacy);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DirSource instance */
    private Builder(converTor.relayConsensus.DirSource other) {
            super(converTor.relayConsensus.DirSource.SCHEMA$);
      if (isValidValue(fields()[0], other.nickname)) {
        this.nickname = data().deepCopy(fields()[0].schema(), other.nickname);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.identity)) {
        this.identity = data().deepCopy(fields()[1].schema(), other.identity);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address)) {
        this.address = data().deepCopy(fields()[2].schema(), other.address);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dir_port)) {
        this.dir_port = data().deepCopy(fields()[3].schema(), other.dir_port);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.or_port)) {
        this.or_port = data().deepCopy(fields()[4].schema(), other.or_port);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.is_legacy)) {
        this.is_legacy = data().deepCopy(fields()[5].schema(), other.is_legacy);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'nickname' field */
    public java.lang.CharSequence getNickname() {
      return nickname;
    }
    
    /** Sets the value of the 'nickname' field */
    public converTor.relayConsensus.DirSource.Builder setNickname(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.nickname = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'nickname' field has been set */
    public boolean hasNickname() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'nickname' field */
    public converTor.relayConsensus.DirSource.Builder clearNickname() {
      nickname = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'identity' field */
    public java.lang.CharSequence getIdentity() {
      return identity;
    }
    
    /** Sets the value of the 'identity' field */
    public converTor.relayConsensus.DirSource.Builder setIdentity(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.identity = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'identity' field has been set */
    public boolean hasIdentity() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'identity' field */
    public converTor.relayConsensus.DirSource.Builder clearIdentity() {
      identity = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'address' field */
    public java.lang.CharSequence getAddress() {
      return address;
    }
    
    /** Sets the value of the 'address' field */
    public converTor.relayConsensus.DirSource.Builder setAddress(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.address = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'address' field has been set */
    public boolean hasAddress() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'address' field */
    public converTor.relayConsensus.DirSource.Builder clearAddress() {
      address = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'dir_port' field */
    public java.lang.Integer getDirPort() {
      return dir_port;
    }
    
    /** Sets the value of the 'dir_port' field */
    public converTor.relayConsensus.DirSource.Builder setDirPort(java.lang.Integer value) {
      validate(fields()[3], value);
      this.dir_port = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'dir_port' field has been set */
    public boolean hasDirPort() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'dir_port' field */
    public converTor.relayConsensus.DirSource.Builder clearDirPort() {
      dir_port = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'or_port' field */
    public java.lang.Integer getOrPort() {
      return or_port;
    }
    
    /** Sets the value of the 'or_port' field */
    public converTor.relayConsensus.DirSource.Builder setOrPort(java.lang.Integer value) {
      validate(fields()[4], value);
      this.or_port = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'or_port' field has been set */
    public boolean hasOrPort() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'or_port' field */
    public converTor.relayConsensus.DirSource.Builder clearOrPort() {
      or_port = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'is_legacy' field */
    public java.lang.Boolean getIsLegacy() {
      return is_legacy;
    }
    
    /** Sets the value of the 'is_legacy' field */
    public converTor.relayConsensus.DirSource.Builder setIsLegacy(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.is_legacy = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'is_legacy' field has been set */
    public boolean hasIsLegacy() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'is_legacy' field */
    public converTor.relayConsensus.DirSource.Builder clearIsLegacy() {
      is_legacy = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public DirSource build() {
      try {
        DirSource record = new DirSource();
        record.nickname = fieldSetFlags()[0] ? this.nickname : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.identity = fieldSetFlags()[1] ? this.identity : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.address = fieldSetFlags()[2] ? this.address : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.dir_port = fieldSetFlags()[3] ? this.dir_port : (java.lang.Integer) defaultValue(fields()[3]);
        record.or_port = fieldSetFlags()[4] ? this.or_port : (java.lang.Integer) defaultValue(fields()[4]);
        record.is_legacy = fieldSetFlags()[5] ? this.is_legacy : (java.lang.Boolean) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
