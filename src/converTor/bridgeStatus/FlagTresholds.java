/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package converTor.bridgeStatus;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FlagTresholds extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FlagTresholds\",\"namespace\":\"converTor.bridgeStatus\",\"fields\":[{\"name\":\"stable_uptime\",\"type\":[\"null\",\"long\"]},{\"name\":\"stable_mtbf\",\"type\":[\"null\",\"long\"]},{\"name\":\"enough_mtbf\",\"type\":[\"null\",\"int\"]},{\"name\":\"fast_speed\",\"type\":[\"null\",\"long\"]},{\"name\":\"guard_wfu\",\"type\":[\"null\",\"double\"]},{\"name\":\"guard_tk\",\"type\":[\"null\",\"long\"]},{\"name\":\"guard_bw_inc_exits\",\"type\":[\"null\",\"long\"]},{\"name\":\"guard_bw_exc_exits\",\"type\":[\"null\",\"long\"]},{\"name\":\"ignoring_advertised\",\"type\":[\"null\",\"int\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Long stable_uptime;
  @Deprecated public java.lang.Long stable_mtbf;
  @Deprecated public java.lang.Integer enough_mtbf;
  @Deprecated public java.lang.Long fast_speed;
  @Deprecated public java.lang.Double guard_wfu;
  @Deprecated public java.lang.Long guard_tk;
  @Deprecated public java.lang.Long guard_bw_inc_exits;
  @Deprecated public java.lang.Long guard_bw_exc_exits;
  @Deprecated public java.lang.Integer ignoring_advertised;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public FlagTresholds() {}

  /**
   * All-args constructor.
   */
  public FlagTresholds(java.lang.Long stable_uptime, java.lang.Long stable_mtbf, java.lang.Integer enough_mtbf, java.lang.Long fast_speed, java.lang.Double guard_wfu, java.lang.Long guard_tk, java.lang.Long guard_bw_inc_exits, java.lang.Long guard_bw_exc_exits, java.lang.Integer ignoring_advertised) {
    this.stable_uptime = stable_uptime;
    this.stable_mtbf = stable_mtbf;
    this.enough_mtbf = enough_mtbf;
    this.fast_speed = fast_speed;
    this.guard_wfu = guard_wfu;
    this.guard_tk = guard_tk;
    this.guard_bw_inc_exits = guard_bw_inc_exits;
    this.guard_bw_exc_exits = guard_bw_exc_exits;
    this.ignoring_advertised = ignoring_advertised;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return stable_uptime;
    case 1: return stable_mtbf;
    case 2: return enough_mtbf;
    case 3: return fast_speed;
    case 4: return guard_wfu;
    case 5: return guard_tk;
    case 6: return guard_bw_inc_exits;
    case 7: return guard_bw_exc_exits;
    case 8: return ignoring_advertised;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: stable_uptime = (java.lang.Long)value$; break;
    case 1: stable_mtbf = (java.lang.Long)value$; break;
    case 2: enough_mtbf = (java.lang.Integer)value$; break;
    case 3: fast_speed = (java.lang.Long)value$; break;
    case 4: guard_wfu = (java.lang.Double)value$; break;
    case 5: guard_tk = (java.lang.Long)value$; break;
    case 6: guard_bw_inc_exits = (java.lang.Long)value$; break;
    case 7: guard_bw_exc_exits = (java.lang.Long)value$; break;
    case 8: ignoring_advertised = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'stable_uptime' field.
   */
  public java.lang.Long getStableUptime() {
    return stable_uptime;
  }

  /**
   * Sets the value of the 'stable_uptime' field.
   * @param value the value to set.
   */
  public void setStableUptime(java.lang.Long value) {
    this.stable_uptime = value;
  }

  /**
   * Gets the value of the 'stable_mtbf' field.
   */
  public java.lang.Long getStableMtbf() {
    return stable_mtbf;
  }

  /**
   * Sets the value of the 'stable_mtbf' field.
   * @param value the value to set.
   */
  public void setStableMtbf(java.lang.Long value) {
    this.stable_mtbf = value;
  }

  /**
   * Gets the value of the 'enough_mtbf' field.
   */
  public java.lang.Integer getEnoughMtbf() {
    return enough_mtbf;
  }

  /**
   * Sets the value of the 'enough_mtbf' field.
   * @param value the value to set.
   */
  public void setEnoughMtbf(java.lang.Integer value) {
    this.enough_mtbf = value;
  }

  /**
   * Gets the value of the 'fast_speed' field.
   */
  public java.lang.Long getFastSpeed() {
    return fast_speed;
  }

  /**
   * Sets the value of the 'fast_speed' field.
   * @param value the value to set.
   */
  public void setFastSpeed(java.lang.Long value) {
    this.fast_speed = value;
  }

  /**
   * Gets the value of the 'guard_wfu' field.
   */
  public java.lang.Double getGuardWfu() {
    return guard_wfu;
  }

  /**
   * Sets the value of the 'guard_wfu' field.
   * @param value the value to set.
   */
  public void setGuardWfu(java.lang.Double value) {
    this.guard_wfu = value;
  }

  /**
   * Gets the value of the 'guard_tk' field.
   */
  public java.lang.Long getGuardTk() {
    return guard_tk;
  }

  /**
   * Sets the value of the 'guard_tk' field.
   * @param value the value to set.
   */
  public void setGuardTk(java.lang.Long value) {
    this.guard_tk = value;
  }

  /**
   * Gets the value of the 'guard_bw_inc_exits' field.
   */
  public java.lang.Long getGuardBwIncExits() {
    return guard_bw_inc_exits;
  }

  /**
   * Sets the value of the 'guard_bw_inc_exits' field.
   * @param value the value to set.
   */
  public void setGuardBwIncExits(java.lang.Long value) {
    this.guard_bw_inc_exits = value;
  }

  /**
   * Gets the value of the 'guard_bw_exc_exits' field.
   */
  public java.lang.Long getGuardBwExcExits() {
    return guard_bw_exc_exits;
  }

  /**
   * Sets the value of the 'guard_bw_exc_exits' field.
   * @param value the value to set.
   */
  public void setGuardBwExcExits(java.lang.Long value) {
    this.guard_bw_exc_exits = value;
  }

  /**
   * Gets the value of the 'ignoring_advertised' field.
   */
  public java.lang.Integer getIgnoringAdvertised() {
    return ignoring_advertised;
  }

  /**
   * Sets the value of the 'ignoring_advertised' field.
   * @param value the value to set.
   */
  public void setIgnoringAdvertised(java.lang.Integer value) {
    this.ignoring_advertised = value;
  }

  /** Creates a new FlagTresholds RecordBuilder */
  public static converTor.bridgeStatus.FlagTresholds.Builder newBuilder() {
    return new converTor.bridgeStatus.FlagTresholds.Builder();
  }
  
  /** Creates a new FlagTresholds RecordBuilder by copying an existing Builder */
  public static converTor.bridgeStatus.FlagTresholds.Builder newBuilder(converTor.bridgeStatus.FlagTresholds.Builder other) {
    return new converTor.bridgeStatus.FlagTresholds.Builder(other);
  }
  
  /** Creates a new FlagTresholds RecordBuilder by copying an existing FlagTresholds instance */
  public static converTor.bridgeStatus.FlagTresholds.Builder newBuilder(converTor.bridgeStatus.FlagTresholds other) {
    return new converTor.bridgeStatus.FlagTresholds.Builder(other);
  }
  
  /**
   * RecordBuilder for FlagTresholds instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FlagTresholds>
    implements org.apache.avro.data.RecordBuilder<FlagTresholds> {

    private java.lang.Long stable_uptime;
    private java.lang.Long stable_mtbf;
    private java.lang.Integer enough_mtbf;
    private java.lang.Long fast_speed;
    private java.lang.Double guard_wfu;
    private java.lang.Long guard_tk;
    private java.lang.Long guard_bw_inc_exits;
    private java.lang.Long guard_bw_exc_exits;
    private java.lang.Integer ignoring_advertised;

    /** Creates a new Builder */
    private Builder() {
      super(converTor.bridgeStatus.FlagTresholds.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(converTor.bridgeStatus.FlagTresholds.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.stable_uptime)) {
        this.stable_uptime = data().deepCopy(fields()[0].schema(), other.stable_uptime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.stable_mtbf)) {
        this.stable_mtbf = data().deepCopy(fields()[1].schema(), other.stable_mtbf);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.enough_mtbf)) {
        this.enough_mtbf = data().deepCopy(fields()[2].schema(), other.enough_mtbf);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fast_speed)) {
        this.fast_speed = data().deepCopy(fields()[3].schema(), other.fast_speed);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.guard_wfu)) {
        this.guard_wfu = data().deepCopy(fields()[4].schema(), other.guard_wfu);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.guard_tk)) {
        this.guard_tk = data().deepCopy(fields()[5].schema(), other.guard_tk);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.guard_bw_inc_exits)) {
        this.guard_bw_inc_exits = data().deepCopy(fields()[6].schema(), other.guard_bw_inc_exits);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.guard_bw_exc_exits)) {
        this.guard_bw_exc_exits = data().deepCopy(fields()[7].schema(), other.guard_bw_exc_exits);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ignoring_advertised)) {
        this.ignoring_advertised = data().deepCopy(fields()[8].schema(), other.ignoring_advertised);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing FlagTresholds instance */
    private Builder(converTor.bridgeStatus.FlagTresholds other) {
            super(converTor.bridgeStatus.FlagTresholds.SCHEMA$);
      if (isValidValue(fields()[0], other.stable_uptime)) {
        this.stable_uptime = data().deepCopy(fields()[0].schema(), other.stable_uptime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.stable_mtbf)) {
        this.stable_mtbf = data().deepCopy(fields()[1].schema(), other.stable_mtbf);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.enough_mtbf)) {
        this.enough_mtbf = data().deepCopy(fields()[2].schema(), other.enough_mtbf);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fast_speed)) {
        this.fast_speed = data().deepCopy(fields()[3].schema(), other.fast_speed);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.guard_wfu)) {
        this.guard_wfu = data().deepCopy(fields()[4].schema(), other.guard_wfu);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.guard_tk)) {
        this.guard_tk = data().deepCopy(fields()[5].schema(), other.guard_tk);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.guard_bw_inc_exits)) {
        this.guard_bw_inc_exits = data().deepCopy(fields()[6].schema(), other.guard_bw_inc_exits);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.guard_bw_exc_exits)) {
        this.guard_bw_exc_exits = data().deepCopy(fields()[7].schema(), other.guard_bw_exc_exits);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ignoring_advertised)) {
        this.ignoring_advertised = data().deepCopy(fields()[8].schema(), other.ignoring_advertised);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'stable_uptime' field */
    public java.lang.Long getStableUptime() {
      return stable_uptime;
    }
    
    /** Sets the value of the 'stable_uptime' field */
    public converTor.bridgeStatus.FlagTresholds.Builder setStableUptime(java.lang.Long value) {
      validate(fields()[0], value);
      this.stable_uptime = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'stable_uptime' field has been set */
    public boolean hasStableUptime() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'stable_uptime' field */
    public converTor.bridgeStatus.FlagTresholds.Builder clearStableUptime() {
      stable_uptime = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'stable_mtbf' field */
    public java.lang.Long getStableMtbf() {
      return stable_mtbf;
    }
    
    /** Sets the value of the 'stable_mtbf' field */
    public converTor.bridgeStatus.FlagTresholds.Builder setStableMtbf(java.lang.Long value) {
      validate(fields()[1], value);
      this.stable_mtbf = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'stable_mtbf' field has been set */
    public boolean hasStableMtbf() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'stable_mtbf' field */
    public converTor.bridgeStatus.FlagTresholds.Builder clearStableMtbf() {
      stable_mtbf = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'enough_mtbf' field */
    public java.lang.Integer getEnoughMtbf() {
      return enough_mtbf;
    }
    
    /** Sets the value of the 'enough_mtbf' field */
    public converTor.bridgeStatus.FlagTresholds.Builder setEnoughMtbf(java.lang.Integer value) {
      validate(fields()[2], value);
      this.enough_mtbf = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'enough_mtbf' field has been set */
    public boolean hasEnoughMtbf() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'enough_mtbf' field */
    public converTor.bridgeStatus.FlagTresholds.Builder clearEnoughMtbf() {
      enough_mtbf = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'fast_speed' field */
    public java.lang.Long getFastSpeed() {
      return fast_speed;
    }
    
    /** Sets the value of the 'fast_speed' field */
    public converTor.bridgeStatus.FlagTresholds.Builder setFastSpeed(java.lang.Long value) {
      validate(fields()[3], value);
      this.fast_speed = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'fast_speed' field has been set */
    public boolean hasFastSpeed() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'fast_speed' field */
    public converTor.bridgeStatus.FlagTresholds.Builder clearFastSpeed() {
      fast_speed = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'guard_wfu' field */
    public java.lang.Double getGuardWfu() {
      return guard_wfu;
    }
    
    /** Sets the value of the 'guard_wfu' field */
    public converTor.bridgeStatus.FlagTresholds.Builder setGuardWfu(java.lang.Double value) {
      validate(fields()[4], value);
      this.guard_wfu = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'guard_wfu' field has been set */
    public boolean hasGuardWfu() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'guard_wfu' field */
    public converTor.bridgeStatus.FlagTresholds.Builder clearGuardWfu() {
      guard_wfu = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'guard_tk' field */
    public java.lang.Long getGuardTk() {
      return guard_tk;
    }
    
    /** Sets the value of the 'guard_tk' field */
    public converTor.bridgeStatus.FlagTresholds.Builder setGuardTk(java.lang.Long value) {
      validate(fields()[5], value);
      this.guard_tk = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'guard_tk' field has been set */
    public boolean hasGuardTk() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'guard_tk' field */
    public converTor.bridgeStatus.FlagTresholds.Builder clearGuardTk() {
      guard_tk = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'guard_bw_inc_exits' field */
    public java.lang.Long getGuardBwIncExits() {
      return guard_bw_inc_exits;
    }
    
    /** Sets the value of the 'guard_bw_inc_exits' field */
    public converTor.bridgeStatus.FlagTresholds.Builder setGuardBwIncExits(java.lang.Long value) {
      validate(fields()[6], value);
      this.guard_bw_inc_exits = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'guard_bw_inc_exits' field has been set */
    public boolean hasGuardBwIncExits() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'guard_bw_inc_exits' field */
    public converTor.bridgeStatus.FlagTresholds.Builder clearGuardBwIncExits() {
      guard_bw_inc_exits = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'guard_bw_exc_exits' field */
    public java.lang.Long getGuardBwExcExits() {
      return guard_bw_exc_exits;
    }
    
    /** Sets the value of the 'guard_bw_exc_exits' field */
    public converTor.bridgeStatus.FlagTresholds.Builder setGuardBwExcExits(java.lang.Long value) {
      validate(fields()[7], value);
      this.guard_bw_exc_exits = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'guard_bw_exc_exits' field has been set */
    public boolean hasGuardBwExcExits() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'guard_bw_exc_exits' field */
    public converTor.bridgeStatus.FlagTresholds.Builder clearGuardBwExcExits() {
      guard_bw_exc_exits = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'ignoring_advertised' field */
    public java.lang.Integer getIgnoringAdvertised() {
      return ignoring_advertised;
    }
    
    /** Sets the value of the 'ignoring_advertised' field */
    public converTor.bridgeStatus.FlagTresholds.Builder setIgnoringAdvertised(java.lang.Integer value) {
      validate(fields()[8], value);
      this.ignoring_advertised = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'ignoring_advertised' field has been set */
    public boolean hasIgnoringAdvertised() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'ignoring_advertised' field */
    public converTor.bridgeStatus.FlagTresholds.Builder clearIgnoringAdvertised() {
      ignoring_advertised = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public FlagTresholds build() {
      try {
        FlagTresholds record = new FlagTresholds();
        record.stable_uptime = fieldSetFlags()[0] ? this.stable_uptime : (java.lang.Long) defaultValue(fields()[0]);
        record.stable_mtbf = fieldSetFlags()[1] ? this.stable_mtbf : (java.lang.Long) defaultValue(fields()[1]);
        record.enough_mtbf = fieldSetFlags()[2] ? this.enough_mtbf : (java.lang.Integer) defaultValue(fields()[2]);
        record.fast_speed = fieldSetFlags()[3] ? this.fast_speed : (java.lang.Long) defaultValue(fields()[3]);
        record.guard_wfu = fieldSetFlags()[4] ? this.guard_wfu : (java.lang.Double) defaultValue(fields()[4]);
        record.guard_tk = fieldSetFlags()[5] ? this.guard_tk : (java.lang.Long) defaultValue(fields()[5]);
        record.guard_bw_inc_exits = fieldSetFlags()[6] ? this.guard_bw_inc_exits : (java.lang.Long) defaultValue(fields()[6]);
        record.guard_bw_exc_exits = fieldSetFlags()[7] ? this.guard_bw_exc_exits : (java.lang.Long) defaultValue(fields()[7]);
        record.ignoring_advertised = fieldSetFlags()[8] ? this.ignoring_advertised : (java.lang.Integer) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
