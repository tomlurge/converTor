/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package converTor.relayVote;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RelayVote extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6155161159619727185L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RelayVote\",\"namespace\":\"converTor.relayVote\",\"fields\":[{\"name\":\"descriptor_type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"metrics-lib/RelayNetworkStatusVote:\",\"default\":\"network-status-vote-3 1.0\"},{\"name\":\"network_status_version\",\"type\":\"int\",\"doc\":\"metrics-lib/RelayNetworkStatusVote: int getNetworkStatusVersion()\",\"default\":3},{\"name\":\"vote_status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"\\\"vote\\\" per definition, no getter\",\"default\":\"vote\"},{\"name\":\"consensus_methods\",\"type\":{\"type\":\"array\",\"items\":\"int\"},\"doc\":\"metrics-lib/RelayNetworkStatusVote: List<Integer> getConsensusMethods()\"},{\"name\":\"published\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getPublishedMillis()\"},{\"name\":\"valid_after\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getValidAfterMillis()\"},{\"name\":\"flag_tresholds\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FlagTresholds\",\"fields\":[{\"name\":\"stable_uptime\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getStableUptime()\"},{\"name\":\"stable_mtbf\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getStableMtbf()\"},{\"name\":\"enough_mtbf\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: int getEnoughMtbfInfo()\"},{\"name\":\"fast_speed\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getFastBandwidth()\"},{\"name\":\"guard_wfu\",\"type\":[\"null\",\"double\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: double getGuardWfu()\"},{\"name\":\"guard_tk\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getGuardTk()\"},{\"name\":\"guard_bw_inc_exits\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getGuardBandwidthIncludingExits()\"},{\"name\":\"guard_bw_exc_exits\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getGuardBandwidthExcludingExits()\"},{\"name\":\"ignoring_advertised_bws\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: int getIgnoringAdvertisedBws()\"}]}],\"doc\":\"see above\"},{\"name\":\"fresh_until\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getFreshUntilMillis()\"},{\"name\":\"valid_until\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getValidUntilMillis()\"},{\"name\":\"voting_delay\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vote\",\"fields\":[{\"name\":\"vote_seconds\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getVoteSeconds()\"},{\"name\":\"dist_seconds\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getDistSeconds()\"}]}],\"doc\":\"see above\"},{\"name\":\"client_versions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedClientVersions()\"},{\"name\":\"server_versions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedServerVersions()\"},{\"name\":\"known_flags\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: SortedSet<String> getKnownFlags()\"},{\"name\":\"params\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"int\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: SortedMap<String, Integer> getConsensusParams()\"},{\"name\":\"dir_source\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DirSource\",\"fields\":[{\"name\":\"nickname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: String getNickname()\"},{\"name\":\"identity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: String getIdentity(\"},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: String getAddress()\"},{\"name\":\"dir_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: int getDirport()\"},{\"name\":\"or_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: int getOrport()\"}]}],\"doc\":\"see above\"},{\"name\":\"contact\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: String getContactLine()\"},{\"name\":\"legacy_dir_key\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: String getLegacyDirKey()\"},{\"name\":\"directory_key\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DirKey\",\"fields\":[{\"name\":\"version\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/RelayNetworkStatusVote: int getDirKeyCertificateVersion()\"},{\"name\":\"dir_key_published\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getDirKeyPublishedMillis()\"},{\"name\":\"dir_key_expires\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: long getDirKeyExpiresMillis()\"}]}],\"doc\":\"see above\"},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Status\",\"fields\":[{\"name\":\"r\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"R\",\"fields\":[{\"name\":\"nickname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getNickname()\"},{\"name\":\"identity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getDescriptor()\"},{\"name\":\"digest\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/NetworkStatusEntry: Set<String> getMicrodescriptorDigests()\"},{\"name\":\"publication\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: long getPublishedMillis()\"},{\"name\":\"ip\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getAddress()\"},{\"name\":\"or_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/NetworkStatusEntry: int getOrPort()\"},{\"name\":\"dir_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/NetworkStatusEntry: int getDirPort()\"},{\"name\":\"fingerprint\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getFingerprint() - not in spec, but in metrics-lib\"}]}]},{\"name\":\"a\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/NetworkStatusEntry: getOrAddresses()\"},{\"name\":\"s\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/NetworkStatusEntry: SortedSet<String> getFlags()\"},{\"name\":\"v\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getVersion()\"},{\"name\":\"w\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"W\",\"fields\":[{\"name\":\"bandwidth\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/NetworkStatusEntry: long getBandwidth()\"},{\"name\":\"measured\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/NetworkStatusEntry: long getMeasured()\"},{\"name\":\"unmeasured\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/NetworkStatusEntry: boolean getUnmeasured()\"}]}],\"doc\":\"see above\"},{\"name\":\"p\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Policy\",\"fields\":[{\"name\":\"default_policy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getDefaultPolicy()\"},{\"name\":\"port_summary\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getPortList()\"}]}],\"doc\":\"see above\"},{\"name\":\"id\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ID\",\"fields\":[{\"name\":\"ed25519\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/NetworkStatusEntry: String getMasterKeyEd25519()\"}]}],\"doc\":\"see above\"}]}}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: SortedMap<String, NetworkStatusEntry> getStatusEntries()\"},{\"name\":\"directory_footer\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DirFooter\",\"fields\":[{\"name\":\"directory_signature\",\"type\":[\"null\",{\"ty","pe\":\"record\",\"name\":\"DirSig\",\"fields\":[{\"name\":\"algorithm\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirectorySignature: String getAlgorithm()\"},{\"name\":\"identity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirectorySignature: String getIdentity()\"},{\"name\":\"signing_key_digest\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirectorySignature: String getSigningKeyDigest()\"},{\"name\":\"signature\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/DirectorySignature: String getSignature()\"}]}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: SortedMap<String, DirectorySignature> getDirectorySignatures()\"}]}],\"doc\":\"see above\"},{\"name\":\"signing_key_digest\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusVote: String getSigningKeyDigest()\"}],\"aliases\":[\"relay_network_status_vote_3\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** metrics-lib/RelayNetworkStatusVote: */
  @Deprecated public java.lang.String descriptor_type;
  /** metrics-lib/RelayNetworkStatusVote: int getNetworkStatusVersion() */
  @Deprecated public int network_status_version;
  /** "vote" per definition, no getter */
  @Deprecated public java.lang.String vote_status;
  /** metrics-lib/RelayNetworkStatusVote: List<Integer> getConsensusMethods() */
  @Deprecated public java.util.List<java.lang.Integer> consensus_methods;
  /** metrics-lib/RelayNetworkStatusVote: long getPublishedMillis() */
  @Deprecated public java.lang.String published;
  /** metrics-lib/RelayNetworkStatusVote: long getValidAfterMillis() */
  @Deprecated public java.lang.String valid_after;
  /** see above */
  @Deprecated public converTor.relayVote.FlagTresholds flag_tresholds;
  /** metrics-lib/RelayNetworkStatusVote: long getFreshUntilMillis() */
  @Deprecated public java.lang.String fresh_until;
  /** metrics-lib/RelayNetworkStatusVote: long getValidUntilMillis() */
  @Deprecated public java.lang.String valid_until;
  /** see above */
  @Deprecated public converTor.relayVote.Vote voting_delay;
  /** metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedClientVersions() */
  @Deprecated public java.util.List<java.lang.String> client_versions;
  /** metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedServerVersions() */
  @Deprecated public java.util.List<java.lang.String> server_versions;
  /** metrics-lib/RelayNetworkStatusVote: SortedSet<String> getKnownFlags() */
  @Deprecated public java.util.List<java.lang.String> known_flags;
  /** metrics-lib/RelayNetworkStatusVote: SortedMap<String, Integer> getConsensusParams() */
  @Deprecated public java.util.Map<java.lang.String,java.lang.Integer> params;
  /** see above */
  @Deprecated public converTor.relayVote.DirSource dir_source;
  /** metrics-lib/RelayNetworkStatusVote: String getContactLine() */
  @Deprecated public java.lang.String contact;
  /** metrics-lib/RelayNetworkStatusVote: String getLegacyDirKey() */
  @Deprecated public java.lang.String legacy_dir_key;
  /** see above */
  @Deprecated public converTor.relayVote.DirKey directory_key;
  /** metrics-lib/RelayNetworkStatusVote: SortedMap<String, NetworkStatusEntry> getStatusEntries() */
  @Deprecated public java.util.List<converTor.relayVote.Status> status;
  /** see above */
  @Deprecated public converTor.relayVote.DirFooter directory_footer;
  /** metrics-lib/RelayNetworkStatusVote: String getSigningKeyDigest() */
  @Deprecated public java.lang.String signing_key_digest;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RelayVote() {}

  /**
   * All-args constructor.
   * @param descriptor_type metrics-lib/RelayNetworkStatusVote:
   * @param network_status_version metrics-lib/RelayNetworkStatusVote: int getNetworkStatusVersion()
   * @param vote_status "vote" per definition, no getter
   * @param consensus_methods metrics-lib/RelayNetworkStatusVote: List<Integer> getConsensusMethods()
   * @param published metrics-lib/RelayNetworkStatusVote: long getPublishedMillis()
   * @param valid_after metrics-lib/RelayNetworkStatusVote: long getValidAfterMillis()
   * @param flag_tresholds see above
   * @param fresh_until metrics-lib/RelayNetworkStatusVote: long getFreshUntilMillis()
   * @param valid_until metrics-lib/RelayNetworkStatusVote: long getValidUntilMillis()
   * @param voting_delay see above
   * @param client_versions metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedClientVersions()
   * @param server_versions metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedServerVersions()
   * @param known_flags metrics-lib/RelayNetworkStatusVote: SortedSet<String> getKnownFlags()
   * @param params metrics-lib/RelayNetworkStatusVote: SortedMap<String, Integer> getConsensusParams()
   * @param dir_source see above
   * @param contact metrics-lib/RelayNetworkStatusVote: String getContactLine()
   * @param legacy_dir_key metrics-lib/RelayNetworkStatusVote: String getLegacyDirKey()
   * @param directory_key see above
   * @param status metrics-lib/RelayNetworkStatusVote: SortedMap<String, NetworkStatusEntry> getStatusEntries()
   * @param directory_footer see above
   * @param signing_key_digest metrics-lib/RelayNetworkStatusVote: String getSigningKeyDigest()
   */
  public RelayVote(java.lang.String descriptor_type, java.lang.Integer network_status_version, java.lang.String vote_status, java.util.List<java.lang.Integer> consensus_methods, java.lang.String published, java.lang.String valid_after, converTor.relayVote.FlagTresholds flag_tresholds, java.lang.String fresh_until, java.lang.String valid_until, converTor.relayVote.Vote voting_delay, java.util.List<java.lang.String> client_versions, java.util.List<java.lang.String> server_versions, java.util.List<java.lang.String> known_flags, java.util.Map<java.lang.String,java.lang.Integer> params, converTor.relayVote.DirSource dir_source, java.lang.String contact, java.lang.String legacy_dir_key, converTor.relayVote.DirKey directory_key, java.util.List<converTor.relayVote.Status> status, converTor.relayVote.DirFooter directory_footer, java.lang.String signing_key_digest) {
    this.descriptor_type = descriptor_type;
    this.network_status_version = network_status_version;
    this.vote_status = vote_status;
    this.consensus_methods = consensus_methods;
    this.published = published;
    this.valid_after = valid_after;
    this.flag_tresholds = flag_tresholds;
    this.fresh_until = fresh_until;
    this.valid_until = valid_until;
    this.voting_delay = voting_delay;
    this.client_versions = client_versions;
    this.server_versions = server_versions;
    this.known_flags = known_flags;
    this.params = params;
    this.dir_source = dir_source;
    this.contact = contact;
    this.legacy_dir_key = legacy_dir_key;
    this.directory_key = directory_key;
    this.status = status;
    this.directory_footer = directory_footer;
    this.signing_key_digest = signing_key_digest;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return descriptor_type;
    case 1: return network_status_version;
    case 2: return vote_status;
    case 3: return consensus_methods;
    case 4: return published;
    case 5: return valid_after;
    case 6: return flag_tresholds;
    case 7: return fresh_until;
    case 8: return valid_until;
    case 9: return voting_delay;
    case 10: return client_versions;
    case 11: return server_versions;
    case 12: return known_flags;
    case 13: return params;
    case 14: return dir_source;
    case 15: return contact;
    case 16: return legacy_dir_key;
    case 17: return directory_key;
    case 18: return status;
    case 19: return directory_footer;
    case 20: return signing_key_digest;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: descriptor_type = (java.lang.String)value$; break;
    case 1: network_status_version = (java.lang.Integer)value$; break;
    case 2: vote_status = (java.lang.String)value$; break;
    case 3: consensus_methods = (java.util.List<java.lang.Integer>)value$; break;
    case 4: published = (java.lang.String)value$; break;
    case 5: valid_after = (java.lang.String)value$; break;
    case 6: flag_tresholds = (converTor.relayVote.FlagTresholds)value$; break;
    case 7: fresh_until = (java.lang.String)value$; break;
    case 8: valid_until = (java.lang.String)value$; break;
    case 9: voting_delay = (converTor.relayVote.Vote)value$; break;
    case 10: client_versions = (java.util.List<java.lang.String>)value$; break;
    case 11: server_versions = (java.util.List<java.lang.String>)value$; break;
    case 12: known_flags = (java.util.List<java.lang.String>)value$; break;
    case 13: params = (java.util.Map<java.lang.String,java.lang.Integer>)value$; break;
    case 14: dir_source = (converTor.relayVote.DirSource)value$; break;
    case 15: contact = (java.lang.String)value$; break;
    case 16: legacy_dir_key = (java.lang.String)value$; break;
    case 17: directory_key = (converTor.relayVote.DirKey)value$; break;
    case 18: status = (java.util.List<converTor.relayVote.Status>)value$; break;
    case 19: directory_footer = (converTor.relayVote.DirFooter)value$; break;
    case 20: signing_key_digest = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'descriptor_type' field.
   * @return metrics-lib/RelayNetworkStatusVote:
   */
  public java.lang.String getDescriptorType() {
    return descriptor_type;
  }

  /**
   * Sets the value of the 'descriptor_type' field.
   * metrics-lib/RelayNetworkStatusVote:
   * @param value the value to set.
   */
  public void setDescriptorType(java.lang.String value) {
    this.descriptor_type = value;
  }

  /**
   * Gets the value of the 'network_status_version' field.
   * @return metrics-lib/RelayNetworkStatusVote: int getNetworkStatusVersion()
   */
  public java.lang.Integer getNetworkStatusVersion() {
    return network_status_version;
  }

  /**
   * Sets the value of the 'network_status_version' field.
   * metrics-lib/RelayNetworkStatusVote: int getNetworkStatusVersion()
   * @param value the value to set.
   */
  public void setNetworkStatusVersion(java.lang.Integer value) {
    this.network_status_version = value;
  }

  /**
   * Gets the value of the 'vote_status' field.
   * @return "vote" per definition, no getter
   */
  public java.lang.String getVoteStatus() {
    return vote_status;
  }

  /**
   * Sets the value of the 'vote_status' field.
   * "vote" per definition, no getter
   * @param value the value to set.
   */
  public void setVoteStatus(java.lang.String value) {
    this.vote_status = value;
  }

  /**
   * Gets the value of the 'consensus_methods' field.
   * @return metrics-lib/RelayNetworkStatusVote: List<Integer> getConsensusMethods()
   */
  public java.util.List<java.lang.Integer> getConsensusMethods() {
    return consensus_methods;
  }

  /**
   * Sets the value of the 'consensus_methods' field.
   * metrics-lib/RelayNetworkStatusVote: List<Integer> getConsensusMethods()
   * @param value the value to set.
   */
  public void setConsensusMethods(java.util.List<java.lang.Integer> value) {
    this.consensus_methods = value;
  }

  /**
   * Gets the value of the 'published' field.
   * @return metrics-lib/RelayNetworkStatusVote: long getPublishedMillis()
   */
  public java.lang.String getPublished() {
    return published;
  }

  /**
   * Sets the value of the 'published' field.
   * metrics-lib/RelayNetworkStatusVote: long getPublishedMillis()
   * @param value the value to set.
   */
  public void setPublished(java.lang.String value) {
    this.published = value;
  }

  /**
   * Gets the value of the 'valid_after' field.
   * @return metrics-lib/RelayNetworkStatusVote: long getValidAfterMillis()
   */
  public java.lang.String getValidAfter() {
    return valid_after;
  }

  /**
   * Sets the value of the 'valid_after' field.
   * metrics-lib/RelayNetworkStatusVote: long getValidAfterMillis()
   * @param value the value to set.
   */
  public void setValidAfter(java.lang.String value) {
    this.valid_after = value;
  }

  /**
   * Gets the value of the 'flag_tresholds' field.
   * @return see above
   */
  public converTor.relayVote.FlagTresholds getFlagTresholds() {
    return flag_tresholds;
  }

  /**
   * Sets the value of the 'flag_tresholds' field.
   * see above
   * @param value the value to set.
   */
  public void setFlagTresholds(converTor.relayVote.FlagTresholds value) {
    this.flag_tresholds = value;
  }

  /**
   * Gets the value of the 'fresh_until' field.
   * @return metrics-lib/RelayNetworkStatusVote: long getFreshUntilMillis()
   */
  public java.lang.String getFreshUntil() {
    return fresh_until;
  }

  /**
   * Sets the value of the 'fresh_until' field.
   * metrics-lib/RelayNetworkStatusVote: long getFreshUntilMillis()
   * @param value the value to set.
   */
  public void setFreshUntil(java.lang.String value) {
    this.fresh_until = value;
  }

  /**
   * Gets the value of the 'valid_until' field.
   * @return metrics-lib/RelayNetworkStatusVote: long getValidUntilMillis()
   */
  public java.lang.String getValidUntil() {
    return valid_until;
  }

  /**
   * Sets the value of the 'valid_until' field.
   * metrics-lib/RelayNetworkStatusVote: long getValidUntilMillis()
   * @param value the value to set.
   */
  public void setValidUntil(java.lang.String value) {
    this.valid_until = value;
  }

  /**
   * Gets the value of the 'voting_delay' field.
   * @return see above
   */
  public converTor.relayVote.Vote getVotingDelay() {
    return voting_delay;
  }

  /**
   * Sets the value of the 'voting_delay' field.
   * see above
   * @param value the value to set.
   */
  public void setVotingDelay(converTor.relayVote.Vote value) {
    this.voting_delay = value;
  }

  /**
   * Gets the value of the 'client_versions' field.
   * @return metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedClientVersions()
   */
  public java.util.List<java.lang.String> getClientVersions() {
    return client_versions;
  }

  /**
   * Sets the value of the 'client_versions' field.
   * metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedClientVersions()
   * @param value the value to set.
   */
  public void setClientVersions(java.util.List<java.lang.String> value) {
    this.client_versions = value;
  }

  /**
   * Gets the value of the 'server_versions' field.
   * @return metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedServerVersions()
   */
  public java.util.List<java.lang.String> getServerVersions() {
    return server_versions;
  }

  /**
   * Sets the value of the 'server_versions' field.
   * metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedServerVersions()
   * @param value the value to set.
   */
  public void setServerVersions(java.util.List<java.lang.String> value) {
    this.server_versions = value;
  }

  /**
   * Gets the value of the 'known_flags' field.
   * @return metrics-lib/RelayNetworkStatusVote: SortedSet<String> getKnownFlags()
   */
  public java.util.List<java.lang.String> getKnownFlags() {
    return known_flags;
  }

  /**
   * Sets the value of the 'known_flags' field.
   * metrics-lib/RelayNetworkStatusVote: SortedSet<String> getKnownFlags()
   * @param value the value to set.
   */
  public void setKnownFlags(java.util.List<java.lang.String> value) {
    this.known_flags = value;
  }

  /**
   * Gets the value of the 'params' field.
   * @return metrics-lib/RelayNetworkStatusVote: SortedMap<String, Integer> getConsensusParams()
   */
  public java.util.Map<java.lang.String,java.lang.Integer> getParams() {
    return params;
  }

  /**
   * Sets the value of the 'params' field.
   * metrics-lib/RelayNetworkStatusVote: SortedMap<String, Integer> getConsensusParams()
   * @param value the value to set.
   */
  public void setParams(java.util.Map<java.lang.String,java.lang.Integer> value) {
    this.params = value;
  }

  /**
   * Gets the value of the 'dir_source' field.
   * @return see above
   */
  public converTor.relayVote.DirSource getDirSource() {
    return dir_source;
  }

  /**
   * Sets the value of the 'dir_source' field.
   * see above
   * @param value the value to set.
   */
  public void setDirSource(converTor.relayVote.DirSource value) {
    this.dir_source = value;
  }

  /**
   * Gets the value of the 'contact' field.
   * @return metrics-lib/RelayNetworkStatusVote: String getContactLine()
   */
  public java.lang.String getContact() {
    return contact;
  }

  /**
   * Sets the value of the 'contact' field.
   * metrics-lib/RelayNetworkStatusVote: String getContactLine()
   * @param value the value to set.
   */
  public void setContact(java.lang.String value) {
    this.contact = value;
  }

  /**
   * Gets the value of the 'legacy_dir_key' field.
   * @return metrics-lib/RelayNetworkStatusVote: String getLegacyDirKey()
   */
  public java.lang.String getLegacyDirKey() {
    return legacy_dir_key;
  }

  /**
   * Sets the value of the 'legacy_dir_key' field.
   * metrics-lib/RelayNetworkStatusVote: String getLegacyDirKey()
   * @param value the value to set.
   */
  public void setLegacyDirKey(java.lang.String value) {
    this.legacy_dir_key = value;
  }

  /**
   * Gets the value of the 'directory_key' field.
   * @return see above
   */
  public converTor.relayVote.DirKey getDirectoryKey() {
    return directory_key;
  }

  /**
   * Sets the value of the 'directory_key' field.
   * see above
   * @param value the value to set.
   */
  public void setDirectoryKey(converTor.relayVote.DirKey value) {
    this.directory_key = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return metrics-lib/RelayNetworkStatusVote: SortedMap<String, NetworkStatusEntry> getStatusEntries()
   */
  public java.util.List<converTor.relayVote.Status> getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * metrics-lib/RelayNetworkStatusVote: SortedMap<String, NetworkStatusEntry> getStatusEntries()
   * @param value the value to set.
   */
  public void setStatus(java.util.List<converTor.relayVote.Status> value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'directory_footer' field.
   * @return see above
   */
  public converTor.relayVote.DirFooter getDirectoryFooter() {
    return directory_footer;
  }

  /**
   * Sets the value of the 'directory_footer' field.
   * see above
   * @param value the value to set.
   */
  public void setDirectoryFooter(converTor.relayVote.DirFooter value) {
    this.directory_footer = value;
  }

  /**
   * Gets the value of the 'signing_key_digest' field.
   * @return metrics-lib/RelayNetworkStatusVote: String getSigningKeyDigest()
   */
  public java.lang.String getSigningKeyDigest() {
    return signing_key_digest;
  }

  /**
   * Sets the value of the 'signing_key_digest' field.
   * metrics-lib/RelayNetworkStatusVote: String getSigningKeyDigest()
   * @param value the value to set.
   */
  public void setSigningKeyDigest(java.lang.String value) {
    this.signing_key_digest = value;
  }

  /**
   * Creates a new RelayVote RecordBuilder.
   * @return A new RelayVote RecordBuilder
   */
  public static converTor.relayVote.RelayVote.Builder newBuilder() {
    return new converTor.relayVote.RelayVote.Builder();
  }
  
  /**
   * Creates a new RelayVote RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RelayVote RecordBuilder
   */
  public static converTor.relayVote.RelayVote.Builder newBuilder(converTor.relayVote.RelayVote.Builder other) {
    return new converTor.relayVote.RelayVote.Builder(other);
  }
  
  /**
   * Creates a new RelayVote RecordBuilder by copying an existing RelayVote instance.
   * @param other The existing instance to copy.
   * @return A new RelayVote RecordBuilder
   */
  public static converTor.relayVote.RelayVote.Builder newBuilder(converTor.relayVote.RelayVote other) {
    return new converTor.relayVote.RelayVote.Builder(other);
  }
  
  /**
   * RecordBuilder for RelayVote instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RelayVote>
    implements org.apache.avro.data.RecordBuilder<RelayVote> {

    /** metrics-lib/RelayNetworkStatusVote: */
    private java.lang.String descriptor_type;
    /** metrics-lib/RelayNetworkStatusVote: int getNetworkStatusVersion() */
    private int network_status_version;
    /** "vote" per definition, no getter */
    private java.lang.String vote_status;
    /** metrics-lib/RelayNetworkStatusVote: List<Integer> getConsensusMethods() */
    private java.util.List<java.lang.Integer> consensus_methods;
    /** metrics-lib/RelayNetworkStatusVote: long getPublishedMillis() */
    private java.lang.String published;
    /** metrics-lib/RelayNetworkStatusVote: long getValidAfterMillis() */
    private java.lang.String valid_after;
    /** see above */
    private converTor.relayVote.FlagTresholds flag_tresholds;
    private converTor.relayVote.FlagTresholds.Builder flag_tresholdsBuilder;
    /** metrics-lib/RelayNetworkStatusVote: long getFreshUntilMillis() */
    private java.lang.String fresh_until;
    /** metrics-lib/RelayNetworkStatusVote: long getValidUntilMillis() */
    private java.lang.String valid_until;
    /** see above */
    private converTor.relayVote.Vote voting_delay;
    private converTor.relayVote.Vote.Builder voting_delayBuilder;
    /** metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedClientVersions() */
    private java.util.List<java.lang.String> client_versions;
    /** metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedServerVersions() */
    private java.util.List<java.lang.String> server_versions;
    /** metrics-lib/RelayNetworkStatusVote: SortedSet<String> getKnownFlags() */
    private java.util.List<java.lang.String> known_flags;
    /** metrics-lib/RelayNetworkStatusVote: SortedMap<String, Integer> getConsensusParams() */
    private java.util.Map<java.lang.String,java.lang.Integer> params;
    /** see above */
    private converTor.relayVote.DirSource dir_source;
    private converTor.relayVote.DirSource.Builder dir_sourceBuilder;
    /** metrics-lib/RelayNetworkStatusVote: String getContactLine() */
    private java.lang.String contact;
    /** metrics-lib/RelayNetworkStatusVote: String getLegacyDirKey() */
    private java.lang.String legacy_dir_key;
    /** see above */
    private converTor.relayVote.DirKey directory_key;
    private converTor.relayVote.DirKey.Builder directory_keyBuilder;
    /** metrics-lib/RelayNetworkStatusVote: SortedMap<String, NetworkStatusEntry> getStatusEntries() */
    private java.util.List<converTor.relayVote.Status> status;
    /** see above */
    private converTor.relayVote.DirFooter directory_footer;
    private converTor.relayVote.DirFooter.Builder directory_footerBuilder;
    /** metrics-lib/RelayNetworkStatusVote: String getSigningKeyDigest() */
    private java.lang.String signing_key_digest;

    /** Creates a new Builder */
    private Builder() {
      super(converTor.relayVote.RelayVote.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(converTor.relayVote.RelayVote.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.network_status_version)) {
        this.network_status_version = data().deepCopy(fields()[1].schema(), other.network_status_version);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.vote_status)) {
        this.vote_status = data().deepCopy(fields()[2].schema(), other.vote_status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.consensus_methods)) {
        this.consensus_methods = data().deepCopy(fields()[3].schema(), other.consensus_methods);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.published)) {
        this.published = data().deepCopy(fields()[4].schema(), other.published);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.valid_after)) {
        this.valid_after = data().deepCopy(fields()[5].schema(), other.valid_after);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.flag_tresholds)) {
        this.flag_tresholds = data().deepCopy(fields()[6].schema(), other.flag_tresholds);
        fieldSetFlags()[6] = true;
      }
      if (other.hasFlagTresholdsBuilder()) {
        this.flag_tresholdsBuilder = converTor.relayVote.FlagTresholds.newBuilder(other.getFlagTresholdsBuilder());
      }
      if (isValidValue(fields()[7], other.fresh_until)) {
        this.fresh_until = data().deepCopy(fields()[7].schema(), other.fresh_until);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.valid_until)) {
        this.valid_until = data().deepCopy(fields()[8].schema(), other.valid_until);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.voting_delay)) {
        this.voting_delay = data().deepCopy(fields()[9].schema(), other.voting_delay);
        fieldSetFlags()[9] = true;
      }
      if (other.hasVotingDelayBuilder()) {
        this.voting_delayBuilder = converTor.relayVote.Vote.newBuilder(other.getVotingDelayBuilder());
      }
      if (isValidValue(fields()[10], other.client_versions)) {
        this.client_versions = data().deepCopy(fields()[10].schema(), other.client_versions);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.server_versions)) {
        this.server_versions = data().deepCopy(fields()[11].schema(), other.server_versions);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.known_flags)) {
        this.known_flags = data().deepCopy(fields()[12].schema(), other.known_flags);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.params)) {
        this.params = data().deepCopy(fields()[13].schema(), other.params);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.dir_source)) {
        this.dir_source = data().deepCopy(fields()[14].schema(), other.dir_source);
        fieldSetFlags()[14] = true;
      }
      if (other.hasDirSourceBuilder()) {
        this.dir_sourceBuilder = converTor.relayVote.DirSource.newBuilder(other.getDirSourceBuilder());
      }
      if (isValidValue(fields()[15], other.contact)) {
        this.contact = data().deepCopy(fields()[15].schema(), other.contact);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.legacy_dir_key)) {
        this.legacy_dir_key = data().deepCopy(fields()[16].schema(), other.legacy_dir_key);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.directory_key)) {
        this.directory_key = data().deepCopy(fields()[17].schema(), other.directory_key);
        fieldSetFlags()[17] = true;
      }
      if (other.hasDirectoryKeyBuilder()) {
        this.directory_keyBuilder = converTor.relayVote.DirKey.newBuilder(other.getDirectoryKeyBuilder());
      }
      if (isValidValue(fields()[18], other.status)) {
        this.status = data().deepCopy(fields()[18].schema(), other.status);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.directory_footer)) {
        this.directory_footer = data().deepCopy(fields()[19].schema(), other.directory_footer);
        fieldSetFlags()[19] = true;
      }
      if (other.hasDirectoryFooterBuilder()) {
        this.directory_footerBuilder = converTor.relayVote.DirFooter.newBuilder(other.getDirectoryFooterBuilder());
      }
      if (isValidValue(fields()[20], other.signing_key_digest)) {
        this.signing_key_digest = data().deepCopy(fields()[20].schema(), other.signing_key_digest);
        fieldSetFlags()[20] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing RelayVote instance
     * @param other The existing instance to copy.
     */
    private Builder(converTor.relayVote.RelayVote other) {
            super(converTor.relayVote.RelayVote.SCHEMA$);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.network_status_version)) {
        this.network_status_version = data().deepCopy(fields()[1].schema(), other.network_status_version);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.vote_status)) {
        this.vote_status = data().deepCopy(fields()[2].schema(), other.vote_status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.consensus_methods)) {
        this.consensus_methods = data().deepCopy(fields()[3].schema(), other.consensus_methods);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.published)) {
        this.published = data().deepCopy(fields()[4].schema(), other.published);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.valid_after)) {
        this.valid_after = data().deepCopy(fields()[5].schema(), other.valid_after);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.flag_tresholds)) {
        this.flag_tresholds = data().deepCopy(fields()[6].schema(), other.flag_tresholds);
        fieldSetFlags()[6] = true;
      }
      this.flag_tresholdsBuilder = null;
      if (isValidValue(fields()[7], other.fresh_until)) {
        this.fresh_until = data().deepCopy(fields()[7].schema(), other.fresh_until);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.valid_until)) {
        this.valid_until = data().deepCopy(fields()[8].schema(), other.valid_until);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.voting_delay)) {
        this.voting_delay = data().deepCopy(fields()[9].schema(), other.voting_delay);
        fieldSetFlags()[9] = true;
      }
      this.voting_delayBuilder = null;
      if (isValidValue(fields()[10], other.client_versions)) {
        this.client_versions = data().deepCopy(fields()[10].schema(), other.client_versions);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.server_versions)) {
        this.server_versions = data().deepCopy(fields()[11].schema(), other.server_versions);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.known_flags)) {
        this.known_flags = data().deepCopy(fields()[12].schema(), other.known_flags);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.params)) {
        this.params = data().deepCopy(fields()[13].schema(), other.params);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.dir_source)) {
        this.dir_source = data().deepCopy(fields()[14].schema(), other.dir_source);
        fieldSetFlags()[14] = true;
      }
      this.dir_sourceBuilder = null;
      if (isValidValue(fields()[15], other.contact)) {
        this.contact = data().deepCopy(fields()[15].schema(), other.contact);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.legacy_dir_key)) {
        this.legacy_dir_key = data().deepCopy(fields()[16].schema(), other.legacy_dir_key);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.directory_key)) {
        this.directory_key = data().deepCopy(fields()[17].schema(), other.directory_key);
        fieldSetFlags()[17] = true;
      }
      this.directory_keyBuilder = null;
      if (isValidValue(fields()[18], other.status)) {
        this.status = data().deepCopy(fields()[18].schema(), other.status);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.directory_footer)) {
        this.directory_footer = data().deepCopy(fields()[19].schema(), other.directory_footer);
        fieldSetFlags()[19] = true;
      }
      this.directory_footerBuilder = null;
      if (isValidValue(fields()[20], other.signing_key_digest)) {
        this.signing_key_digest = data().deepCopy(fields()[20].schema(), other.signing_key_digest);
        fieldSetFlags()[20] = true;
      }
    }

    /**
      * Gets the value of the 'descriptor_type' field.
      * metrics-lib/RelayNetworkStatusVote:
      * @return The value.
      */
    public java.lang.String getDescriptorType() {
      return descriptor_type;
    }

    /**
      * Sets the value of the 'descriptor_type' field.
      * metrics-lib/RelayNetworkStatusVote:
      * @param value The value of 'descriptor_type'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setDescriptorType(java.lang.String value) {
      validate(fields()[0], value);
      this.descriptor_type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'descriptor_type' field has been set.
      * metrics-lib/RelayNetworkStatusVote:
      * @return True if the 'descriptor_type' field has been set, false otherwise.
      */
    public boolean hasDescriptorType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'descriptor_type' field.
      * metrics-lib/RelayNetworkStatusVote:
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearDescriptorType() {
      descriptor_type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'network_status_version' field.
      * metrics-lib/RelayNetworkStatusVote: int getNetworkStatusVersion()
      * @return The value.
      */
    public java.lang.Integer getNetworkStatusVersion() {
      return network_status_version;
    }

    /**
      * Sets the value of the 'network_status_version' field.
      * metrics-lib/RelayNetworkStatusVote: int getNetworkStatusVersion()
      * @param value The value of 'network_status_version'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setNetworkStatusVersion(int value) {
      validate(fields()[1], value);
      this.network_status_version = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'network_status_version' field has been set.
      * metrics-lib/RelayNetworkStatusVote: int getNetworkStatusVersion()
      * @return True if the 'network_status_version' field has been set, false otherwise.
      */
    public boolean hasNetworkStatusVersion() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'network_status_version' field.
      * metrics-lib/RelayNetworkStatusVote: int getNetworkStatusVersion()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearNetworkStatusVersion() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'vote_status' field.
      * "vote" per definition, no getter
      * @return The value.
      */
    public java.lang.String getVoteStatus() {
      return vote_status;
    }

    /**
      * Sets the value of the 'vote_status' field.
      * "vote" per definition, no getter
      * @param value The value of 'vote_status'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setVoteStatus(java.lang.String value) {
      validate(fields()[2], value);
      this.vote_status = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'vote_status' field has been set.
      * "vote" per definition, no getter
      * @return True if the 'vote_status' field has been set, false otherwise.
      */
    public boolean hasVoteStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'vote_status' field.
      * "vote" per definition, no getter
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearVoteStatus() {
      vote_status = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'consensus_methods' field.
      * metrics-lib/RelayNetworkStatusVote: List<Integer> getConsensusMethods()
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getConsensusMethods() {
      return consensus_methods;
    }

    /**
      * Sets the value of the 'consensus_methods' field.
      * metrics-lib/RelayNetworkStatusVote: List<Integer> getConsensusMethods()
      * @param value The value of 'consensus_methods'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setConsensusMethods(java.util.List<java.lang.Integer> value) {
      validate(fields()[3], value);
      this.consensus_methods = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'consensus_methods' field has been set.
      * metrics-lib/RelayNetworkStatusVote: List<Integer> getConsensusMethods()
      * @return True if the 'consensus_methods' field has been set, false otherwise.
      */
    public boolean hasConsensusMethods() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'consensus_methods' field.
      * metrics-lib/RelayNetworkStatusVote: List<Integer> getConsensusMethods()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearConsensusMethods() {
      consensus_methods = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'published' field.
      * metrics-lib/RelayNetworkStatusVote: long getPublishedMillis()
      * @return The value.
      */
    public java.lang.String getPublished() {
      return published;
    }

    /**
      * Sets the value of the 'published' field.
      * metrics-lib/RelayNetworkStatusVote: long getPublishedMillis()
      * @param value The value of 'published'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setPublished(java.lang.String value) {
      validate(fields()[4], value);
      this.published = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'published' field has been set.
      * metrics-lib/RelayNetworkStatusVote: long getPublishedMillis()
      * @return True if the 'published' field has been set, false otherwise.
      */
    public boolean hasPublished() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'published' field.
      * metrics-lib/RelayNetworkStatusVote: long getPublishedMillis()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearPublished() {
      published = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'valid_after' field.
      * metrics-lib/RelayNetworkStatusVote: long getValidAfterMillis()
      * @return The value.
      */
    public java.lang.String getValidAfter() {
      return valid_after;
    }

    /**
      * Sets the value of the 'valid_after' field.
      * metrics-lib/RelayNetworkStatusVote: long getValidAfterMillis()
      * @param value The value of 'valid_after'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setValidAfter(java.lang.String value) {
      validate(fields()[5], value);
      this.valid_after = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'valid_after' field has been set.
      * metrics-lib/RelayNetworkStatusVote: long getValidAfterMillis()
      * @return True if the 'valid_after' field has been set, false otherwise.
      */
    public boolean hasValidAfter() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'valid_after' field.
      * metrics-lib/RelayNetworkStatusVote: long getValidAfterMillis()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearValidAfter() {
      valid_after = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'flag_tresholds' field.
      * see above
      * @return The value.
      */
    public converTor.relayVote.FlagTresholds getFlagTresholds() {
      return flag_tresholds;
    }

    /**
      * Sets the value of the 'flag_tresholds' field.
      * see above
      * @param value The value of 'flag_tresholds'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setFlagTresholds(converTor.relayVote.FlagTresholds value) {
      validate(fields()[6], value);
      this.flag_tresholdsBuilder = null;
      this.flag_tresholds = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'flag_tresholds' field has been set.
      * see above
      * @return True if the 'flag_tresholds' field has been set, false otherwise.
      */
    public boolean hasFlagTresholds() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'flag_tresholds' field and creates one if it doesn't exist yet.
     * see above
     * @return This builder.
     */
    public converTor.relayVote.FlagTresholds.Builder getFlagTresholdsBuilder() {
      if (flag_tresholdsBuilder == null) {
        if (hasFlagTresholds()) {
          setFlagTresholdsBuilder(converTor.relayVote.FlagTresholds.newBuilder(flag_tresholds));
        } else {
          setFlagTresholdsBuilder(converTor.relayVote.FlagTresholds.newBuilder());
        }
      }
      return flag_tresholdsBuilder;
    }

    /**
     * Sets the Builder instance for the 'flag_tresholds' field
     * see above
     * @return This builder.
     */
    public converTor.relayVote.RelayVote.Builder setFlagTresholdsBuilder(converTor.relayVote.FlagTresholds.Builder value) {
      clearFlagTresholds();
      flag_tresholdsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'flag_tresholds' field has an active Builder instance
     * see above
     * @return True if the 'flag_tresholds' field has an active Builder instance
     */
    public boolean hasFlagTresholdsBuilder() {
      return flag_tresholdsBuilder != null;
    }

    /**
      * Clears the value of the 'flag_tresholds' field.
      * see above
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearFlagTresholds() {
      flag_tresholds = null;
      flag_tresholdsBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'fresh_until' field.
      * metrics-lib/RelayNetworkStatusVote: long getFreshUntilMillis()
      * @return The value.
      */
    public java.lang.String getFreshUntil() {
      return fresh_until;
    }

    /**
      * Sets the value of the 'fresh_until' field.
      * metrics-lib/RelayNetworkStatusVote: long getFreshUntilMillis()
      * @param value The value of 'fresh_until'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setFreshUntil(java.lang.String value) {
      validate(fields()[7], value);
      this.fresh_until = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'fresh_until' field has been set.
      * metrics-lib/RelayNetworkStatusVote: long getFreshUntilMillis()
      * @return True if the 'fresh_until' field has been set, false otherwise.
      */
    public boolean hasFreshUntil() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'fresh_until' field.
      * metrics-lib/RelayNetworkStatusVote: long getFreshUntilMillis()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearFreshUntil() {
      fresh_until = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'valid_until' field.
      * metrics-lib/RelayNetworkStatusVote: long getValidUntilMillis()
      * @return The value.
      */
    public java.lang.String getValidUntil() {
      return valid_until;
    }

    /**
      * Sets the value of the 'valid_until' field.
      * metrics-lib/RelayNetworkStatusVote: long getValidUntilMillis()
      * @param value The value of 'valid_until'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setValidUntil(java.lang.String value) {
      validate(fields()[8], value);
      this.valid_until = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'valid_until' field has been set.
      * metrics-lib/RelayNetworkStatusVote: long getValidUntilMillis()
      * @return True if the 'valid_until' field has been set, false otherwise.
      */
    public boolean hasValidUntil() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'valid_until' field.
      * metrics-lib/RelayNetworkStatusVote: long getValidUntilMillis()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearValidUntil() {
      valid_until = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'voting_delay' field.
      * see above
      * @return The value.
      */
    public converTor.relayVote.Vote getVotingDelay() {
      return voting_delay;
    }

    /**
      * Sets the value of the 'voting_delay' field.
      * see above
      * @param value The value of 'voting_delay'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setVotingDelay(converTor.relayVote.Vote value) {
      validate(fields()[9], value);
      this.voting_delayBuilder = null;
      this.voting_delay = value;
      fieldSetFlags()[9] = true;
      return this; 
    }

    /**
      * Checks whether the 'voting_delay' field has been set.
      * see above
      * @return True if the 'voting_delay' field has been set, false otherwise.
      */
    public boolean hasVotingDelay() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'voting_delay' field and creates one if it doesn't exist yet.
     * see above
     * @return This builder.
     */
    public converTor.relayVote.Vote.Builder getVotingDelayBuilder() {
      if (voting_delayBuilder == null) {
        if (hasVotingDelay()) {
          setVotingDelayBuilder(converTor.relayVote.Vote.newBuilder(voting_delay));
        } else {
          setVotingDelayBuilder(converTor.relayVote.Vote.newBuilder());
        }
      }
      return voting_delayBuilder;
    }

    /**
     * Sets the Builder instance for the 'voting_delay' field
     * see above
     * @return This builder.
     */
    public converTor.relayVote.RelayVote.Builder setVotingDelayBuilder(converTor.relayVote.Vote.Builder value) {
      clearVotingDelay();
      voting_delayBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'voting_delay' field has an active Builder instance
     * see above
     * @return True if the 'voting_delay' field has an active Builder instance
     */
    public boolean hasVotingDelayBuilder() {
      return voting_delayBuilder != null;
    }

    /**
      * Clears the value of the 'voting_delay' field.
      * see above
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearVotingDelay() {
      voting_delay = null;
      voting_delayBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'client_versions' field.
      * metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedClientVersions()
      * @return The value.
      */
    public java.util.List<java.lang.String> getClientVersions() {
      return client_versions;
    }

    /**
      * Sets the value of the 'client_versions' field.
      * metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedClientVersions()
      * @param value The value of 'client_versions'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setClientVersions(java.util.List<java.lang.String> value) {
      validate(fields()[10], value);
      this.client_versions = value;
      fieldSetFlags()[10] = true;
      return this; 
    }

    /**
      * Checks whether the 'client_versions' field has been set.
      * metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedClientVersions()
      * @return True if the 'client_versions' field has been set, false otherwise.
      */
    public boolean hasClientVersions() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'client_versions' field.
      * metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedClientVersions()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearClientVersions() {
      client_versions = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'server_versions' field.
      * metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedServerVersions()
      * @return The value.
      */
    public java.util.List<java.lang.String> getServerVersions() {
      return server_versions;
    }

    /**
      * Sets the value of the 'server_versions' field.
      * metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedServerVersions()
      * @param value The value of 'server_versions'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setServerVersions(java.util.List<java.lang.String> value) {
      validate(fields()[11], value);
      this.server_versions = value;
      fieldSetFlags()[11] = true;
      return this; 
    }

    /**
      * Checks whether the 'server_versions' field has been set.
      * metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedServerVersions()
      * @return True if the 'server_versions' field has been set, false otherwise.
      */
    public boolean hasServerVersions() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'server_versions' field.
      * metrics-lib/RelayNetworkStatusVote: List<String> getRecommendedServerVersions()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearServerVersions() {
      server_versions = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'known_flags' field.
      * metrics-lib/RelayNetworkStatusVote: SortedSet<String> getKnownFlags()
      * @return The value.
      */
    public java.util.List<java.lang.String> getKnownFlags() {
      return known_flags;
    }

    /**
      * Sets the value of the 'known_flags' field.
      * metrics-lib/RelayNetworkStatusVote: SortedSet<String> getKnownFlags()
      * @param value The value of 'known_flags'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setKnownFlags(java.util.List<java.lang.String> value) {
      validate(fields()[12], value);
      this.known_flags = value;
      fieldSetFlags()[12] = true;
      return this; 
    }

    /**
      * Checks whether the 'known_flags' field has been set.
      * metrics-lib/RelayNetworkStatusVote: SortedSet<String> getKnownFlags()
      * @return True if the 'known_flags' field has been set, false otherwise.
      */
    public boolean hasKnownFlags() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'known_flags' field.
      * metrics-lib/RelayNetworkStatusVote: SortedSet<String> getKnownFlags()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearKnownFlags() {
      known_flags = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'params' field.
      * metrics-lib/RelayNetworkStatusVote: SortedMap<String, Integer> getConsensusParams()
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.Integer> getParams() {
      return params;
    }

    /**
      * Sets the value of the 'params' field.
      * metrics-lib/RelayNetworkStatusVote: SortedMap<String, Integer> getConsensusParams()
      * @param value The value of 'params'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setParams(java.util.Map<java.lang.String,java.lang.Integer> value) {
      validate(fields()[13], value);
      this.params = value;
      fieldSetFlags()[13] = true;
      return this; 
    }

    /**
      * Checks whether the 'params' field has been set.
      * metrics-lib/RelayNetworkStatusVote: SortedMap<String, Integer> getConsensusParams()
      * @return True if the 'params' field has been set, false otherwise.
      */
    public boolean hasParams() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'params' field.
      * metrics-lib/RelayNetworkStatusVote: SortedMap<String, Integer> getConsensusParams()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearParams() {
      params = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'dir_source' field.
      * see above
      * @return The value.
      */
    public converTor.relayVote.DirSource getDirSource() {
      return dir_source;
    }

    /**
      * Sets the value of the 'dir_source' field.
      * see above
      * @param value The value of 'dir_source'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setDirSource(converTor.relayVote.DirSource value) {
      validate(fields()[14], value);
      this.dir_sourceBuilder = null;
      this.dir_source = value;
      fieldSetFlags()[14] = true;
      return this; 
    }

    /**
      * Checks whether the 'dir_source' field has been set.
      * see above
      * @return True if the 'dir_source' field has been set, false otherwise.
      */
    public boolean hasDirSource() {
      return fieldSetFlags()[14];
    }

    /**
     * Gets the Builder instance for the 'dir_source' field and creates one if it doesn't exist yet.
     * see above
     * @return This builder.
     */
    public converTor.relayVote.DirSource.Builder getDirSourceBuilder() {
      if (dir_sourceBuilder == null) {
        if (hasDirSource()) {
          setDirSourceBuilder(converTor.relayVote.DirSource.newBuilder(dir_source));
        } else {
          setDirSourceBuilder(converTor.relayVote.DirSource.newBuilder());
        }
      }
      return dir_sourceBuilder;
    }

    /**
     * Sets the Builder instance for the 'dir_source' field
     * see above
     * @return This builder.
     */
    public converTor.relayVote.RelayVote.Builder setDirSourceBuilder(converTor.relayVote.DirSource.Builder value) {
      clearDirSource();
      dir_sourceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'dir_source' field has an active Builder instance
     * see above
     * @return True if the 'dir_source' field has an active Builder instance
     */
    public boolean hasDirSourceBuilder() {
      return dir_sourceBuilder != null;
    }

    /**
      * Clears the value of the 'dir_source' field.
      * see above
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearDirSource() {
      dir_source = null;
      dir_sourceBuilder = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'contact' field.
      * metrics-lib/RelayNetworkStatusVote: String getContactLine()
      * @return The value.
      */
    public java.lang.String getContact() {
      return contact;
    }

    /**
      * Sets the value of the 'contact' field.
      * metrics-lib/RelayNetworkStatusVote: String getContactLine()
      * @param value The value of 'contact'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setContact(java.lang.String value) {
      validate(fields()[15], value);
      this.contact = value;
      fieldSetFlags()[15] = true;
      return this; 
    }

    /**
      * Checks whether the 'contact' field has been set.
      * metrics-lib/RelayNetworkStatusVote: String getContactLine()
      * @return True if the 'contact' field has been set, false otherwise.
      */
    public boolean hasContact() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'contact' field.
      * metrics-lib/RelayNetworkStatusVote: String getContactLine()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearContact() {
      contact = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'legacy_dir_key' field.
      * metrics-lib/RelayNetworkStatusVote: String getLegacyDirKey()
      * @return The value.
      */
    public java.lang.String getLegacyDirKey() {
      return legacy_dir_key;
    }

    /**
      * Sets the value of the 'legacy_dir_key' field.
      * metrics-lib/RelayNetworkStatusVote: String getLegacyDirKey()
      * @param value The value of 'legacy_dir_key'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setLegacyDirKey(java.lang.String value) {
      validate(fields()[16], value);
      this.legacy_dir_key = value;
      fieldSetFlags()[16] = true;
      return this; 
    }

    /**
      * Checks whether the 'legacy_dir_key' field has been set.
      * metrics-lib/RelayNetworkStatusVote: String getLegacyDirKey()
      * @return True if the 'legacy_dir_key' field has been set, false otherwise.
      */
    public boolean hasLegacyDirKey() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'legacy_dir_key' field.
      * metrics-lib/RelayNetworkStatusVote: String getLegacyDirKey()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearLegacyDirKey() {
      legacy_dir_key = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'directory_key' field.
      * see above
      * @return The value.
      */
    public converTor.relayVote.DirKey getDirectoryKey() {
      return directory_key;
    }

    /**
      * Sets the value of the 'directory_key' field.
      * see above
      * @param value The value of 'directory_key'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setDirectoryKey(converTor.relayVote.DirKey value) {
      validate(fields()[17], value);
      this.directory_keyBuilder = null;
      this.directory_key = value;
      fieldSetFlags()[17] = true;
      return this; 
    }

    /**
      * Checks whether the 'directory_key' field has been set.
      * see above
      * @return True if the 'directory_key' field has been set, false otherwise.
      */
    public boolean hasDirectoryKey() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'directory_key' field and creates one if it doesn't exist yet.
     * see above
     * @return This builder.
     */
    public converTor.relayVote.DirKey.Builder getDirectoryKeyBuilder() {
      if (directory_keyBuilder == null) {
        if (hasDirectoryKey()) {
          setDirectoryKeyBuilder(converTor.relayVote.DirKey.newBuilder(directory_key));
        } else {
          setDirectoryKeyBuilder(converTor.relayVote.DirKey.newBuilder());
        }
      }
      return directory_keyBuilder;
    }

    /**
     * Sets the Builder instance for the 'directory_key' field
     * see above
     * @return This builder.
     */
    public converTor.relayVote.RelayVote.Builder setDirectoryKeyBuilder(converTor.relayVote.DirKey.Builder value) {
      clearDirectoryKey();
      directory_keyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'directory_key' field has an active Builder instance
     * see above
     * @return True if the 'directory_key' field has an active Builder instance
     */
    public boolean hasDirectoryKeyBuilder() {
      return directory_keyBuilder != null;
    }

    /**
      * Clears the value of the 'directory_key' field.
      * see above
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearDirectoryKey() {
      directory_key = null;
      directory_keyBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * metrics-lib/RelayNetworkStatusVote: SortedMap<String, NetworkStatusEntry> getStatusEntries()
      * @return The value.
      */
    public java.util.List<converTor.relayVote.Status> getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * metrics-lib/RelayNetworkStatusVote: SortedMap<String, NetworkStatusEntry> getStatusEntries()
      * @param value The value of 'status'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setStatus(java.util.List<converTor.relayVote.Status> value) {
      validate(fields()[18], value);
      this.status = value;
      fieldSetFlags()[18] = true;
      return this; 
    }

    /**
      * Checks whether the 'status' field has been set.
      * metrics-lib/RelayNetworkStatusVote: SortedMap<String, NetworkStatusEntry> getStatusEntries()
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'status' field.
      * metrics-lib/RelayNetworkStatusVote: SortedMap<String, NetworkStatusEntry> getStatusEntries()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearStatus() {
      status = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'directory_footer' field.
      * see above
      * @return The value.
      */
    public converTor.relayVote.DirFooter getDirectoryFooter() {
      return directory_footer;
    }

    /**
      * Sets the value of the 'directory_footer' field.
      * see above
      * @param value The value of 'directory_footer'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setDirectoryFooter(converTor.relayVote.DirFooter value) {
      validate(fields()[19], value);
      this.directory_footerBuilder = null;
      this.directory_footer = value;
      fieldSetFlags()[19] = true;
      return this; 
    }

    /**
      * Checks whether the 'directory_footer' field has been set.
      * see above
      * @return True if the 'directory_footer' field has been set, false otherwise.
      */
    public boolean hasDirectoryFooter() {
      return fieldSetFlags()[19];
    }

    /**
     * Gets the Builder instance for the 'directory_footer' field and creates one if it doesn't exist yet.
     * see above
     * @return This builder.
     */
    public converTor.relayVote.DirFooter.Builder getDirectoryFooterBuilder() {
      if (directory_footerBuilder == null) {
        if (hasDirectoryFooter()) {
          setDirectoryFooterBuilder(converTor.relayVote.DirFooter.newBuilder(directory_footer));
        } else {
          setDirectoryFooterBuilder(converTor.relayVote.DirFooter.newBuilder());
        }
      }
      return directory_footerBuilder;
    }

    /**
     * Sets the Builder instance for the 'directory_footer' field
     * see above
     * @return This builder.
     */
    public converTor.relayVote.RelayVote.Builder setDirectoryFooterBuilder(converTor.relayVote.DirFooter.Builder value) {
      clearDirectoryFooter();
      directory_footerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'directory_footer' field has an active Builder instance
     * see above
     * @return True if the 'directory_footer' field has an active Builder instance
     */
    public boolean hasDirectoryFooterBuilder() {
      return directory_footerBuilder != null;
    }

    /**
      * Clears the value of the 'directory_footer' field.
      * see above
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearDirectoryFooter() {
      directory_footer = null;
      directory_footerBuilder = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'signing_key_digest' field.
      * metrics-lib/RelayNetworkStatusVote: String getSigningKeyDigest()
      * @return The value.
      */
    public java.lang.String getSigningKeyDigest() {
      return signing_key_digest;
    }

    /**
      * Sets the value of the 'signing_key_digest' field.
      * metrics-lib/RelayNetworkStatusVote: String getSigningKeyDigest()
      * @param value The value of 'signing_key_digest'.
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder setSigningKeyDigest(java.lang.String value) {
      validate(fields()[20], value);
      this.signing_key_digest = value;
      fieldSetFlags()[20] = true;
      return this; 
    }

    /**
      * Checks whether the 'signing_key_digest' field has been set.
      * metrics-lib/RelayNetworkStatusVote: String getSigningKeyDigest()
      * @return True if the 'signing_key_digest' field has been set, false otherwise.
      */
    public boolean hasSigningKeyDigest() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'signing_key_digest' field.
      * metrics-lib/RelayNetworkStatusVote: String getSigningKeyDigest()
      * @return This builder.
      */
    public converTor.relayVote.RelayVote.Builder clearSigningKeyDigest() {
      signing_key_digest = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    public RelayVote build() {
      try {
        RelayVote record = new RelayVote();
        record.descriptor_type = fieldSetFlags()[0] ? this.descriptor_type : (java.lang.String) defaultValue(fields()[0]);
        record.network_status_version = fieldSetFlags()[1] ? this.network_status_version : (java.lang.Integer) defaultValue(fields()[1]);
        record.vote_status = fieldSetFlags()[2] ? this.vote_status : (java.lang.String) defaultValue(fields()[2]);
        record.consensus_methods = fieldSetFlags()[3] ? this.consensus_methods : (java.util.List<java.lang.Integer>) defaultValue(fields()[3]);
        record.published = fieldSetFlags()[4] ? this.published : (java.lang.String) defaultValue(fields()[4]);
        record.valid_after = fieldSetFlags()[5] ? this.valid_after : (java.lang.String) defaultValue(fields()[5]);
        if (flag_tresholdsBuilder != null) {
          record.flag_tresholds = this.flag_tresholdsBuilder.build();
        } else {
          record.flag_tresholds = fieldSetFlags()[6] ? this.flag_tresholds : (converTor.relayVote.FlagTresholds) defaultValue(fields()[6]);
        }
        record.fresh_until = fieldSetFlags()[7] ? this.fresh_until : (java.lang.String) defaultValue(fields()[7]);
        record.valid_until = fieldSetFlags()[8] ? this.valid_until : (java.lang.String) defaultValue(fields()[8]);
        if (voting_delayBuilder != null) {
          record.voting_delay = this.voting_delayBuilder.build();
        } else {
          record.voting_delay = fieldSetFlags()[9] ? this.voting_delay : (converTor.relayVote.Vote) defaultValue(fields()[9]);
        }
        record.client_versions = fieldSetFlags()[10] ? this.client_versions : (java.util.List<java.lang.String>) defaultValue(fields()[10]);
        record.server_versions = fieldSetFlags()[11] ? this.server_versions : (java.util.List<java.lang.String>) defaultValue(fields()[11]);
        record.known_flags = fieldSetFlags()[12] ? this.known_flags : (java.util.List<java.lang.String>) defaultValue(fields()[12]);
        record.params = fieldSetFlags()[13] ? this.params : (java.util.Map<java.lang.String,java.lang.Integer>) defaultValue(fields()[13]);
        if (dir_sourceBuilder != null) {
          record.dir_source = this.dir_sourceBuilder.build();
        } else {
          record.dir_source = fieldSetFlags()[14] ? this.dir_source : (converTor.relayVote.DirSource) defaultValue(fields()[14]);
        }
        record.contact = fieldSetFlags()[15] ? this.contact : (java.lang.String) defaultValue(fields()[15]);
        record.legacy_dir_key = fieldSetFlags()[16] ? this.legacy_dir_key : (java.lang.String) defaultValue(fields()[16]);
        if (directory_keyBuilder != null) {
          record.directory_key = this.directory_keyBuilder.build();
        } else {
          record.directory_key = fieldSetFlags()[17] ? this.directory_key : (converTor.relayVote.DirKey) defaultValue(fields()[17]);
        }
        record.status = fieldSetFlags()[18] ? this.status : (java.util.List<converTor.relayVote.Status>) defaultValue(fields()[18]);
        if (directory_footerBuilder != null) {
          record.directory_footer = this.directory_footerBuilder.build();
        } else {
          record.directory_footer = fieldSetFlags()[19] ? this.directory_footer : (converTor.relayVote.DirFooter) defaultValue(fields()[19]);
        }
        record.signing_key_digest = fieldSetFlags()[20] ? this.signing_key_digest : (java.lang.String) defaultValue(fields()[20]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
