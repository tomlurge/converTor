/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.torproject.metrics.converTor.relayVote;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DirFooter extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DirFooter\",\"namespace\":\"org.torproject.metrics.converTor.relayVote\",\"fields\":[{\"name\":\"directory_signature\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DirSig\",\"fields\":[{\"name\":\"algorithm\",\"type\":[\"null\",\"string\"]},{\"name\":\"identity\",\"type\":[\"null\",\"string\"]},{\"name\":\"signing_key_digest\",\"type\":[\"null\",\"string\"]},{\"name\":\"signature\",\"type\":[\"null\",\"boolean\"]}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public org.torproject.metrics.converTor.relayVote.DirSig directory_signature;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DirFooter() {}

  /**
   * All-args constructor.
   */
  public DirFooter(org.torproject.metrics.converTor.relayVote.DirSig directory_signature) {
    this.directory_signature = directory_signature;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return directory_signature;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: directory_signature = (org.torproject.metrics.converTor.relayVote.DirSig)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'directory_signature' field.
   */
  public org.torproject.metrics.converTor.relayVote.DirSig getDirectorySignature() {
    return directory_signature;
  }

  /**
   * Sets the value of the 'directory_signature' field.
   * @param value the value to set.
   */
  public void setDirectorySignature(org.torproject.metrics.converTor.relayVote.DirSig value) {
    this.directory_signature = value;
  }

  /** Creates a new DirFooter RecordBuilder */
  public static org.torproject.metrics.converTor.relayVote.DirFooter.Builder newBuilder() {
    return new org.torproject.metrics.converTor.relayVote.DirFooter.Builder();
  }
  
  /** Creates a new DirFooter RecordBuilder by copying an existing Builder */
  public static org.torproject.metrics.converTor.relayVote.DirFooter.Builder newBuilder(org.torproject.metrics.converTor.relayVote.DirFooter.Builder other) {
    return new org.torproject.metrics.converTor.relayVote.DirFooter.Builder(other);
  }
  
  /** Creates a new DirFooter RecordBuilder by copying an existing DirFooter instance */
  public static org.torproject.metrics.converTor.relayVote.DirFooter.Builder newBuilder(org.torproject.metrics.converTor.relayVote.DirFooter other) {
    return new org.torproject.metrics.converTor.relayVote.DirFooter.Builder(other);
  }
  
  /**
   * RecordBuilder for DirFooter instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DirFooter>
    implements org.apache.avro.data.RecordBuilder<DirFooter> {

    private org.torproject.metrics.converTor.relayVote.DirSig directory_signature;

    /** Creates a new Builder */
    private Builder() {
      super(org.torproject.metrics.converTor.relayVote.DirFooter.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.torproject.metrics.converTor.relayVote.DirFooter.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.directory_signature)) {
        this.directory_signature = data().deepCopy(fields()[0].schema(), other.directory_signature);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DirFooter instance */
    private Builder(org.torproject.metrics.converTor.relayVote.DirFooter other) {
            super(org.torproject.metrics.converTor.relayVote.DirFooter.SCHEMA$);
      if (isValidValue(fields()[0], other.directory_signature)) {
        this.directory_signature = data().deepCopy(fields()[0].schema(), other.directory_signature);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'directory_signature' field */
    public org.torproject.metrics.converTor.relayVote.DirSig getDirectorySignature() {
      return directory_signature;
    }
    
    /** Sets the value of the 'directory_signature' field */
    public org.torproject.metrics.converTor.relayVote.DirFooter.Builder setDirectorySignature(org.torproject.metrics.converTor.relayVote.DirSig value) {
      validate(fields()[0], value);
      this.directory_signature = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'directory_signature' field has been set */
    public boolean hasDirectorySignature() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'directory_signature' field */
    public org.torproject.metrics.converTor.relayVote.DirFooter.Builder clearDirectorySignature() {
      directory_signature = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public DirFooter build() {
      try {
        DirFooter record = new DirFooter();
        record.directory_signature = fieldSetFlags()[0] ? this.directory_signature : (org.torproject.metrics.converTor.relayVote.DirSig) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
