/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package trans.encoders.relayConsensus;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RelayConsensus extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1961381790862325501L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RelayConsensus\",\"namespace\":\"trans.encoders.relayConsensus\",\"fields\":[{\"name\":\"descriptor_type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"network-status-consensus-3 1.0\"},{\"name\":\"src_date\",\"type\":[\"null\",\"long\"],\"doc\":\"file creation date, in milliseconds, of the data source to this conversion\"},{\"name\":\"network_status_version\",\"type\":\"int\",\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: int getNetworkStatusVersion()\",\"default\":3},{\"name\":\"vote_status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"\\\"consensus\\\" per definition, no getter\",\"default\":\"consensus\"},{\"name\":\"consensus_method\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: int getConsensusMethod()\"},{\"name\":\"consensus_flavor\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: String getConsensusFlavor()\"},{\"name\":\"valid_after\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: long getValidAfterMillis()\"},{\"name\":\"fresh_until\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: long getFreshUntilMillis()\"},{\"name\":\"valid_until\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: long getValidUntilMillis()\"},{\"name\":\"voting_delay\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Vote\",\"fields\":[{\"name\":\"vote_seconds\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: long getVoteSeconds()\"},{\"name\":\"dist_seconds\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: long getDistSeconds()\"}]}]},{\"name\":\"client_versions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedClientVersions()\"},{\"name\":\"server_versions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedServerVersions()\"},{\"name\":\"package\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: List<String> getPackageLines()\"},{\"name\":\"known_flags\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: SortedSet<String> getKnownFlags()\"},{\"name\":\"params\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"int\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getConsensusParams()\"},{\"name\":\"authorities\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"Authority\",\"fields\":[{\"name\":\"dir_source\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DirSource\",\"fields\":[{\"name\":\"nickname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirSourceEntry: String getNickname()\"},{\"name\":\"identity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirSourceEntry: String getIdentity()\"},{\"name\":\"hostname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirSourceEntry: String getHostname()\"},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirSourceEntry: String getIp()\"},{\"name\":\"dir_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/DirSourceEntry: int getDirPort()\"},{\"name\":\"or_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/DirSourceEntry: int getOrPort()\"},{\"name\":\"is_legacy\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/DirSourceEntry: boolean isLegacy()\"}]}]},{\"name\":\"contact\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirSourceEntry: String getContactLine()\"},{\"name\":\"vote_digest\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirSourceEntry: String getVoteDigest()\"}]},\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, DirSourceEntry> getDirSourceEntries()\"},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"Status\",\"fields\":[{\"name\":\"r\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"R\",\"fields\":[{\"name\":\"nickname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getNickname()\"},{\"name\":\"identity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getFingerprint()\"},{\"name\":\"digest\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getDescriptor();\"},{\"name\":\"publication\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/NetworkStatusEntry: long getPublishedMillis()\"},{\"name\":\"ip\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getAddress()\"},{\"name\":\"or_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/NetworkStatusEntry: int getOrPort()\"},{\"name\":\"dir_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/NetworkStatusEntry: int getDirPort()\"}]}]},{\"name\":\"a\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrAddress\",\"fields\":[{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"implementation specific, see actual converter\"},{\"name\":\"port\",\"type\":[\"null\",\"int\"],\"doc\":\"implementation specific, see actual converter\"}]}}]},{\"name\":\"s\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/NetworkStatusEntry: SortedSet<String> getFlags()\"},{\"name\":\"v\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getVersion()\"},{\"name\":\"w\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"W\",\"fields\":[{\"name\":\"bandwidth\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/NetworkStatusEntry: long getBandwidth()\"},{\"name\":\"measured\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/NetworkStatusEntry: long getMeasured()\"},{\"name\":\"unmeasured\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/NetworkStatusEntry: boolean getUnmeasured()\"}]}]},{\"name\":\"p\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Policy\",\"fields\":[{\"name\":\"default_policy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getDefaultPolicy()\"},{\"name\":\"port_summary\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/NetworkStatusEntry: String getPortList()\"}]}]}]},\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, NetworkStatusEntry> getStatusEntries()\"},{\"name\":\"directory_footer\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DirFooter\",\"fields\":[{\"name\":\"bandwidth_weights\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"int\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getBandwidthWeights()\"},{\"name\":\"consensus_digest\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: String getConsensusDigest()\"},{\"name\":\"directory_signature\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"DirSig\",\"fields\":[{\"name\":\"algorithm\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirectorySignature: String getAlgorithm()\",\"default\":\"sha1\"},{\"name\":\"identity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirectorySignature: String getIdentity()\"},{\"name\":\"signing_key_digest\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/DirectorySignature: String getSigningKeyDigest()\"},{\"name\":\"signature\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/DirectorySignature: String getSignature()\"}]}}],\"doc\":\"metrics-lib/RelayNetworkStatusConsensus: List<DirectorySignature> getSignatures()\"}]}]}],\"aliases\":[\"relay_network_status_consensus_3\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String descriptor_type;
  /** file creation date, in milliseconds, of the data source to this conversion */
  @Deprecated public java.lang.Long src_date;
  /** metrics-lib/RelayNetworkStatusConsensus: int getNetworkStatusVersion() */
  @Deprecated public int network_status_version;
  /** "consensus" per definition, no getter */
  @Deprecated public java.lang.String vote_status;
  /** metrics-lib/RelayNetworkStatusConsensus: int getConsensusMethod() */
  @Deprecated public java.lang.Integer consensus_method;
  /** metrics-lib/RelayNetworkStatusConsensus: String getConsensusFlavor() */
  @Deprecated public java.lang.String consensus_flavor;
  /** metrics-lib/RelayNetworkStatusConsensus: long getValidAfterMillis() */
  @Deprecated public java.lang.Long valid_after;
  /** metrics-lib/RelayNetworkStatusConsensus: long getFreshUntilMillis() */
  @Deprecated public java.lang.Long fresh_until;
  /** metrics-lib/RelayNetworkStatusConsensus: long getValidUntilMillis() */
  @Deprecated public java.lang.Long valid_until;
  @Deprecated public trans.encoders.relayConsensus.Vote voting_delay;
  /** metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedClientVersions() */
  @Deprecated public java.util.List<java.lang.String> client_versions;
  /** metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedServerVersions() */
  @Deprecated public java.util.List<java.lang.String> server_versions;
  /** metrics-lib/RelayNetworkStatusConsensus: List<String> getPackageLines() */
  @Deprecated public java.util.List<java.lang.String> package$;
  /** metrics-lib/RelayNetworkStatusConsensus: SortedSet<String> getKnownFlags() */
  @Deprecated public java.util.List<java.lang.String> known_flags;
  /** metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getConsensusParams() */
  @Deprecated public java.util.Map<java.lang.String,java.lang.Integer> params;
  /** metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, DirSourceEntry> getDirSourceEntries() */
  @Deprecated public java.util.Map<java.lang.String,trans.encoders.relayConsensus.Authority> authorities;
  /** metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, NetworkStatusEntry> getStatusEntries() */
  @Deprecated public java.util.Map<java.lang.String,trans.encoders.relayConsensus.Status> status;
  @Deprecated public trans.encoders.relayConsensus.DirFooter directory_footer;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RelayConsensus() {}

  /**
   * All-args constructor.
   * @param src_date file creation date, in milliseconds, of the data source to this conversion
   * @param network_status_version metrics-lib/RelayNetworkStatusConsensus: int getNetworkStatusVersion()
   * @param vote_status "consensus" per definition, no getter
   * @param consensus_method metrics-lib/RelayNetworkStatusConsensus: int getConsensusMethod()
   * @param consensus_flavor metrics-lib/RelayNetworkStatusConsensus: String getConsensusFlavor()
   * @param valid_after metrics-lib/RelayNetworkStatusConsensus: long getValidAfterMillis()
   * @param fresh_until metrics-lib/RelayNetworkStatusConsensus: long getFreshUntilMillis()
   * @param valid_until metrics-lib/RelayNetworkStatusConsensus: long getValidUntilMillis()
   * @param client_versions metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedClientVersions()
   * @param server_versions metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedServerVersions()
   * @param package$ metrics-lib/RelayNetworkStatusConsensus: List<String> getPackageLines()
   * @param known_flags metrics-lib/RelayNetworkStatusConsensus: SortedSet<String> getKnownFlags()
   * @param params metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getConsensusParams()
   * @param authorities metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, DirSourceEntry> getDirSourceEntries()
   * @param status metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, NetworkStatusEntry> getStatusEntries()
   */
  public RelayConsensus(java.lang.String descriptor_type, java.lang.Long src_date, java.lang.Integer network_status_version, java.lang.String vote_status, java.lang.Integer consensus_method, java.lang.String consensus_flavor, java.lang.Long valid_after, java.lang.Long fresh_until, java.lang.Long valid_until, trans.encoders.relayConsensus.Vote voting_delay, java.util.List<java.lang.String> client_versions, java.util.List<java.lang.String> server_versions, java.util.List<java.lang.String> package$, java.util.List<java.lang.String> known_flags, java.util.Map<java.lang.String,java.lang.Integer> params, java.util.Map<java.lang.String,trans.encoders.relayConsensus.Authority> authorities, java.util.Map<java.lang.String,trans.encoders.relayConsensus.Status> status, trans.encoders.relayConsensus.DirFooter directory_footer) {
    this.descriptor_type = descriptor_type;
    this.src_date = src_date;
    this.network_status_version = network_status_version;
    this.vote_status = vote_status;
    this.consensus_method = consensus_method;
    this.consensus_flavor = consensus_flavor;
    this.valid_after = valid_after;
    this.fresh_until = fresh_until;
    this.valid_until = valid_until;
    this.voting_delay = voting_delay;
    this.client_versions = client_versions;
    this.server_versions = server_versions;
    this.package$ = package$;
    this.known_flags = known_flags;
    this.params = params;
    this.authorities = authorities;
    this.status = status;
    this.directory_footer = directory_footer;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return descriptor_type;
    case 1: return src_date;
    case 2: return network_status_version;
    case 3: return vote_status;
    case 4: return consensus_method;
    case 5: return consensus_flavor;
    case 6: return valid_after;
    case 7: return fresh_until;
    case 8: return valid_until;
    case 9: return voting_delay;
    case 10: return client_versions;
    case 11: return server_versions;
    case 12: return package$;
    case 13: return known_flags;
    case 14: return params;
    case 15: return authorities;
    case 16: return status;
    case 17: return directory_footer;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: descriptor_type = (java.lang.String)value$; break;
    case 1: src_date = (java.lang.Long)value$; break;
    case 2: network_status_version = (java.lang.Integer)value$; break;
    case 3: vote_status = (java.lang.String)value$; break;
    case 4: consensus_method = (java.lang.Integer)value$; break;
    case 5: consensus_flavor = (java.lang.String)value$; break;
    case 6: valid_after = (java.lang.Long)value$; break;
    case 7: fresh_until = (java.lang.Long)value$; break;
    case 8: valid_until = (java.lang.Long)value$; break;
    case 9: voting_delay = (trans.encoders.relayConsensus.Vote)value$; break;
    case 10: client_versions = (java.util.List<java.lang.String>)value$; break;
    case 11: server_versions = (java.util.List<java.lang.String>)value$; break;
    case 12: package$ = (java.util.List<java.lang.String>)value$; break;
    case 13: known_flags = (java.util.List<java.lang.String>)value$; break;
    case 14: params = (java.util.Map<java.lang.String,java.lang.Integer>)value$; break;
    case 15: authorities = (java.util.Map<java.lang.String,trans.encoders.relayConsensus.Authority>)value$; break;
    case 16: status = (java.util.Map<java.lang.String,trans.encoders.relayConsensus.Status>)value$; break;
    case 17: directory_footer = (trans.encoders.relayConsensus.DirFooter)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'descriptor_type' field.
   */
  public java.lang.String getDescriptorType() {
    return descriptor_type;
  }

  /**
   * Sets the value of the 'descriptor_type' field.
   * @param value the value to set.
   */
  public void setDescriptorType(java.lang.String value) {
    this.descriptor_type = value;
  }

  /**
   * Gets the value of the 'src_date' field.
   * @return file creation date, in milliseconds, of the data source to this conversion
   */
  public java.lang.Long getSrcDate() {
    return src_date;
  }

  /**
   * Sets the value of the 'src_date' field.
   * file creation date, in milliseconds, of the data source to this conversion
   * @param value the value to set.
   */
  public void setSrcDate(java.lang.Long value) {
    this.src_date = value;
  }

  /**
   * Gets the value of the 'network_status_version' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: int getNetworkStatusVersion()
   */
  public java.lang.Integer getNetworkStatusVersion() {
    return network_status_version;
  }

  /**
   * Sets the value of the 'network_status_version' field.
   * metrics-lib/RelayNetworkStatusConsensus: int getNetworkStatusVersion()
   * @param value the value to set.
   */
  public void setNetworkStatusVersion(java.lang.Integer value) {
    this.network_status_version = value;
  }

  /**
   * Gets the value of the 'vote_status' field.
   * @return "consensus" per definition, no getter
   */
  public java.lang.String getVoteStatus() {
    return vote_status;
  }

  /**
   * Sets the value of the 'vote_status' field.
   * "consensus" per definition, no getter
   * @param value the value to set.
   */
  public void setVoteStatus(java.lang.String value) {
    this.vote_status = value;
  }

  /**
   * Gets the value of the 'consensus_method' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: int getConsensusMethod()
   */
  public java.lang.Integer getConsensusMethod() {
    return consensus_method;
  }

  /**
   * Sets the value of the 'consensus_method' field.
   * metrics-lib/RelayNetworkStatusConsensus: int getConsensusMethod()
   * @param value the value to set.
   */
  public void setConsensusMethod(java.lang.Integer value) {
    this.consensus_method = value;
  }

  /**
   * Gets the value of the 'consensus_flavor' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: String getConsensusFlavor()
   */
  public java.lang.String getConsensusFlavor() {
    return consensus_flavor;
  }

  /**
   * Sets the value of the 'consensus_flavor' field.
   * metrics-lib/RelayNetworkStatusConsensus: String getConsensusFlavor()
   * @param value the value to set.
   */
  public void setConsensusFlavor(java.lang.String value) {
    this.consensus_flavor = value;
  }

  /**
   * Gets the value of the 'valid_after' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: long getValidAfterMillis()
   */
  public java.lang.Long getValidAfter() {
    return valid_after;
  }

  /**
   * Sets the value of the 'valid_after' field.
   * metrics-lib/RelayNetworkStatusConsensus: long getValidAfterMillis()
   * @param value the value to set.
   */
  public void setValidAfter(java.lang.Long value) {
    this.valid_after = value;
  }

  /**
   * Gets the value of the 'fresh_until' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: long getFreshUntilMillis()
   */
  public java.lang.Long getFreshUntil() {
    return fresh_until;
  }

  /**
   * Sets the value of the 'fresh_until' field.
   * metrics-lib/RelayNetworkStatusConsensus: long getFreshUntilMillis()
   * @param value the value to set.
   */
  public void setFreshUntil(java.lang.Long value) {
    this.fresh_until = value;
  }

  /**
   * Gets the value of the 'valid_until' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: long getValidUntilMillis()
   */
  public java.lang.Long getValidUntil() {
    return valid_until;
  }

  /**
   * Sets the value of the 'valid_until' field.
   * metrics-lib/RelayNetworkStatusConsensus: long getValidUntilMillis()
   * @param value the value to set.
   */
  public void setValidUntil(java.lang.Long value) {
    this.valid_until = value;
  }

  /**
   * Gets the value of the 'voting_delay' field.
   */
  public trans.encoders.relayConsensus.Vote getVotingDelay() {
    return voting_delay;
  }

  /**
   * Sets the value of the 'voting_delay' field.
   * @param value the value to set.
   */
  public void setVotingDelay(trans.encoders.relayConsensus.Vote value) {
    this.voting_delay = value;
  }

  /**
   * Gets the value of the 'client_versions' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedClientVersions()
   */
  public java.util.List<java.lang.String> getClientVersions() {
    return client_versions;
  }

  /**
   * Sets the value of the 'client_versions' field.
   * metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedClientVersions()
   * @param value the value to set.
   */
  public void setClientVersions(java.util.List<java.lang.String> value) {
    this.client_versions = value;
  }

  /**
   * Gets the value of the 'server_versions' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedServerVersions()
   */
  public java.util.List<java.lang.String> getServerVersions() {
    return server_versions;
  }

  /**
   * Sets the value of the 'server_versions' field.
   * metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedServerVersions()
   * @param value the value to set.
   */
  public void setServerVersions(java.util.List<java.lang.String> value) {
    this.server_versions = value;
  }

  /**
   * Gets the value of the 'package$' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: List<String> getPackageLines()
   */
  public java.util.List<java.lang.String> getPackage$() {
    return package$;
  }

  /**
   * Sets the value of the 'package$' field.
   * metrics-lib/RelayNetworkStatusConsensus: List<String> getPackageLines()
   * @param value the value to set.
   */
  public void setPackage$(java.util.List<java.lang.String> value) {
    this.package$ = value;
  }

  /**
   * Gets the value of the 'known_flags' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: SortedSet<String> getKnownFlags()
   */
  public java.util.List<java.lang.String> getKnownFlags() {
    return known_flags;
  }

  /**
   * Sets the value of the 'known_flags' field.
   * metrics-lib/RelayNetworkStatusConsensus: SortedSet<String> getKnownFlags()
   * @param value the value to set.
   */
  public void setKnownFlags(java.util.List<java.lang.String> value) {
    this.known_flags = value;
  }

  /**
   * Gets the value of the 'params' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getConsensusParams()
   */
  public java.util.Map<java.lang.String,java.lang.Integer> getParams() {
    return params;
  }

  /**
   * Sets the value of the 'params' field.
   * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getConsensusParams()
   * @param value the value to set.
   */
  public void setParams(java.util.Map<java.lang.String,java.lang.Integer> value) {
    this.params = value;
  }

  /**
   * Gets the value of the 'authorities' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, DirSourceEntry> getDirSourceEntries()
   */
  public java.util.Map<java.lang.String,trans.encoders.relayConsensus.Authority> getAuthorities() {
    return authorities;
  }

  /**
   * Sets the value of the 'authorities' field.
   * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, DirSourceEntry> getDirSourceEntries()
   * @param value the value to set.
   */
  public void setAuthorities(java.util.Map<java.lang.String,trans.encoders.relayConsensus.Authority> value) {
    this.authorities = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, NetworkStatusEntry> getStatusEntries()
   */
  public java.util.Map<java.lang.String,trans.encoders.relayConsensus.Status> getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, NetworkStatusEntry> getStatusEntries()
   * @param value the value to set.
   */
  public void setStatus(java.util.Map<java.lang.String,trans.encoders.relayConsensus.Status> value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'directory_footer' field.
   */
  public trans.encoders.relayConsensus.DirFooter getDirectoryFooter() {
    return directory_footer;
  }

  /**
   * Sets the value of the 'directory_footer' field.
   * @param value the value to set.
   */
  public void setDirectoryFooter(trans.encoders.relayConsensus.DirFooter value) {
    this.directory_footer = value;
  }

  /**
   * Creates a new RelayConsensus RecordBuilder.
   * @return A new RelayConsensus RecordBuilder
   */
  public static trans.encoders.relayConsensus.RelayConsensus.Builder newBuilder() {
    return new trans.encoders.relayConsensus.RelayConsensus.Builder();
  }
  
  /**
   * Creates a new RelayConsensus RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RelayConsensus RecordBuilder
   */
  public static trans.encoders.relayConsensus.RelayConsensus.Builder newBuilder(trans.encoders.relayConsensus.RelayConsensus.Builder other) {
    return new trans.encoders.relayConsensus.RelayConsensus.Builder(other);
  }
  
  /**
   * Creates a new RelayConsensus RecordBuilder by copying an existing RelayConsensus instance.
   * @param other The existing instance to copy.
   * @return A new RelayConsensus RecordBuilder
   */
  public static trans.encoders.relayConsensus.RelayConsensus.Builder newBuilder(trans.encoders.relayConsensus.RelayConsensus other) {
    return new trans.encoders.relayConsensus.RelayConsensus.Builder(other);
  }
  
  /**
   * RecordBuilder for RelayConsensus instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RelayConsensus>
    implements org.apache.avro.data.RecordBuilder<RelayConsensus> {

    private java.lang.String descriptor_type;
    /** file creation date, in milliseconds, of the data source to this conversion */
    private java.lang.Long src_date;
    /** metrics-lib/RelayNetworkStatusConsensus: int getNetworkStatusVersion() */
    private int network_status_version;
    /** "consensus" per definition, no getter */
    private java.lang.String vote_status;
    /** metrics-lib/RelayNetworkStatusConsensus: int getConsensusMethod() */
    private java.lang.Integer consensus_method;
    /** metrics-lib/RelayNetworkStatusConsensus: String getConsensusFlavor() */
    private java.lang.String consensus_flavor;
    /** metrics-lib/RelayNetworkStatusConsensus: long getValidAfterMillis() */
    private java.lang.Long valid_after;
    /** metrics-lib/RelayNetworkStatusConsensus: long getFreshUntilMillis() */
    private java.lang.Long fresh_until;
    /** metrics-lib/RelayNetworkStatusConsensus: long getValidUntilMillis() */
    private java.lang.Long valid_until;
    private trans.encoders.relayConsensus.Vote voting_delay;
    private trans.encoders.relayConsensus.Vote.Builder voting_delayBuilder;
    /** metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedClientVersions() */
    private java.util.List<java.lang.String> client_versions;
    /** metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedServerVersions() */
    private java.util.List<java.lang.String> server_versions;
    /** metrics-lib/RelayNetworkStatusConsensus: List<String> getPackageLines() */
    private java.util.List<java.lang.String> package$;
    /** metrics-lib/RelayNetworkStatusConsensus: SortedSet<String> getKnownFlags() */
    private java.util.List<java.lang.String> known_flags;
    /** metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getConsensusParams() */
    private java.util.Map<java.lang.String,java.lang.Integer> params;
    /** metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, DirSourceEntry> getDirSourceEntries() */
    private java.util.Map<java.lang.String,trans.encoders.relayConsensus.Authority> authorities;
    /** metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, NetworkStatusEntry> getStatusEntries() */
    private java.util.Map<java.lang.String,trans.encoders.relayConsensus.Status> status;
    private trans.encoders.relayConsensus.DirFooter directory_footer;
    private trans.encoders.relayConsensus.DirFooter.Builder directory_footerBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(trans.encoders.relayConsensus.RelayConsensus.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(trans.encoders.relayConsensus.RelayConsensus.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.src_date)) {
        this.src_date = data().deepCopy(fields()[1].schema(), other.src_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.network_status_version)) {
        this.network_status_version = data().deepCopy(fields()[2].schema(), other.network_status_version);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vote_status)) {
        this.vote_status = data().deepCopy(fields()[3].schema(), other.vote_status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.consensus_method)) {
        this.consensus_method = data().deepCopy(fields()[4].schema(), other.consensus_method);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.consensus_flavor)) {
        this.consensus_flavor = data().deepCopy(fields()[5].schema(), other.consensus_flavor);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.valid_after)) {
        this.valid_after = data().deepCopy(fields()[6].schema(), other.valid_after);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.fresh_until)) {
        this.fresh_until = data().deepCopy(fields()[7].schema(), other.fresh_until);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.valid_until)) {
        this.valid_until = data().deepCopy(fields()[8].schema(), other.valid_until);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.voting_delay)) {
        this.voting_delay = data().deepCopy(fields()[9].schema(), other.voting_delay);
        fieldSetFlags()[9] = true;
      }
      if (other.hasVotingDelayBuilder()) {
        this.voting_delayBuilder = trans.encoders.relayConsensus.Vote.newBuilder(other.getVotingDelayBuilder());
      }
      if (isValidValue(fields()[10], other.client_versions)) {
        this.client_versions = data().deepCopy(fields()[10].schema(), other.client_versions);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.server_versions)) {
        this.server_versions = data().deepCopy(fields()[11].schema(), other.server_versions);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.package$)) {
        this.package$ = data().deepCopy(fields()[12].schema(), other.package$);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.known_flags)) {
        this.known_flags = data().deepCopy(fields()[13].schema(), other.known_flags);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.params)) {
        this.params = data().deepCopy(fields()[14].schema(), other.params);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.authorities)) {
        this.authorities = data().deepCopy(fields()[15].schema(), other.authorities);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.status)) {
        this.status = data().deepCopy(fields()[16].schema(), other.status);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.directory_footer)) {
        this.directory_footer = data().deepCopy(fields()[17].schema(), other.directory_footer);
        fieldSetFlags()[17] = true;
      }
      if (other.hasDirectoryFooterBuilder()) {
        this.directory_footerBuilder = trans.encoders.relayConsensus.DirFooter.newBuilder(other.getDirectoryFooterBuilder());
      }
    }
    
    /**
     * Creates a Builder by copying an existing RelayConsensus instance
     * @param other The existing instance to copy.
     */
    private Builder(trans.encoders.relayConsensus.RelayConsensus other) {
            super(trans.encoders.relayConsensus.RelayConsensus.SCHEMA$);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.src_date)) {
        this.src_date = data().deepCopy(fields()[1].schema(), other.src_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.network_status_version)) {
        this.network_status_version = data().deepCopy(fields()[2].schema(), other.network_status_version);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.vote_status)) {
        this.vote_status = data().deepCopy(fields()[3].schema(), other.vote_status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.consensus_method)) {
        this.consensus_method = data().deepCopy(fields()[4].schema(), other.consensus_method);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.consensus_flavor)) {
        this.consensus_flavor = data().deepCopy(fields()[5].schema(), other.consensus_flavor);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.valid_after)) {
        this.valid_after = data().deepCopy(fields()[6].schema(), other.valid_after);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.fresh_until)) {
        this.fresh_until = data().deepCopy(fields()[7].schema(), other.fresh_until);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.valid_until)) {
        this.valid_until = data().deepCopy(fields()[8].schema(), other.valid_until);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.voting_delay)) {
        this.voting_delay = data().deepCopy(fields()[9].schema(), other.voting_delay);
        fieldSetFlags()[9] = true;
      }
      this.voting_delayBuilder = null;
      if (isValidValue(fields()[10], other.client_versions)) {
        this.client_versions = data().deepCopy(fields()[10].schema(), other.client_versions);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.server_versions)) {
        this.server_versions = data().deepCopy(fields()[11].schema(), other.server_versions);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.package$)) {
        this.package$ = data().deepCopy(fields()[12].schema(), other.package$);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.known_flags)) {
        this.known_flags = data().deepCopy(fields()[13].schema(), other.known_flags);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.params)) {
        this.params = data().deepCopy(fields()[14].schema(), other.params);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.authorities)) {
        this.authorities = data().deepCopy(fields()[15].schema(), other.authorities);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.status)) {
        this.status = data().deepCopy(fields()[16].schema(), other.status);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.directory_footer)) {
        this.directory_footer = data().deepCopy(fields()[17].schema(), other.directory_footer);
        fieldSetFlags()[17] = true;
      }
      this.directory_footerBuilder = null;
    }

    /**
      * Gets the value of the 'descriptor_type' field.
      * @return The value.
      */
    public java.lang.String getDescriptorType() {
      return descriptor_type;
    }

    /**
      * Sets the value of the 'descriptor_type' field.
      * @param value The value of 'descriptor_type'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setDescriptorType(java.lang.String value) {
      validate(fields()[0], value);
      this.descriptor_type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'descriptor_type' field has been set.
      * @return True if the 'descriptor_type' field has been set, false otherwise.
      */
    public boolean hasDescriptorType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'descriptor_type' field.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearDescriptorType() {
      descriptor_type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'src_date' field.
      * file creation date, in milliseconds, of the data source to this conversion
      * @return The value.
      */
    public java.lang.Long getSrcDate() {
      return src_date;
    }

    /**
      * Sets the value of the 'src_date' field.
      * file creation date, in milliseconds, of the data source to this conversion
      * @param value The value of 'src_date'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setSrcDate(java.lang.Long value) {
      validate(fields()[1], value);
      this.src_date = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'src_date' field has been set.
      * file creation date, in milliseconds, of the data source to this conversion
      * @return True if the 'src_date' field has been set, false otherwise.
      */
    public boolean hasSrcDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'src_date' field.
      * file creation date, in milliseconds, of the data source to this conversion
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearSrcDate() {
      src_date = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'network_status_version' field.
      * metrics-lib/RelayNetworkStatusConsensus: int getNetworkStatusVersion()
      * @return The value.
      */
    public java.lang.Integer getNetworkStatusVersion() {
      return network_status_version;
    }

    /**
      * Sets the value of the 'network_status_version' field.
      * metrics-lib/RelayNetworkStatusConsensus: int getNetworkStatusVersion()
      * @param value The value of 'network_status_version'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setNetworkStatusVersion(int value) {
      validate(fields()[2], value);
      this.network_status_version = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'network_status_version' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: int getNetworkStatusVersion()
      * @return True if the 'network_status_version' field has been set, false otherwise.
      */
    public boolean hasNetworkStatusVersion() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'network_status_version' field.
      * metrics-lib/RelayNetworkStatusConsensus: int getNetworkStatusVersion()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearNetworkStatusVersion() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'vote_status' field.
      * "consensus" per definition, no getter
      * @return The value.
      */
    public java.lang.String getVoteStatus() {
      return vote_status;
    }

    /**
      * Sets the value of the 'vote_status' field.
      * "consensus" per definition, no getter
      * @param value The value of 'vote_status'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setVoteStatus(java.lang.String value) {
      validate(fields()[3], value);
      this.vote_status = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'vote_status' field has been set.
      * "consensus" per definition, no getter
      * @return True if the 'vote_status' field has been set, false otherwise.
      */
    public boolean hasVoteStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'vote_status' field.
      * "consensus" per definition, no getter
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearVoteStatus() {
      vote_status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'consensus_method' field.
      * metrics-lib/RelayNetworkStatusConsensus: int getConsensusMethod()
      * @return The value.
      */
    public java.lang.Integer getConsensusMethod() {
      return consensus_method;
    }

    /**
      * Sets the value of the 'consensus_method' field.
      * metrics-lib/RelayNetworkStatusConsensus: int getConsensusMethod()
      * @param value The value of 'consensus_method'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setConsensusMethod(java.lang.Integer value) {
      validate(fields()[4], value);
      this.consensus_method = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'consensus_method' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: int getConsensusMethod()
      * @return True if the 'consensus_method' field has been set, false otherwise.
      */
    public boolean hasConsensusMethod() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'consensus_method' field.
      * metrics-lib/RelayNetworkStatusConsensus: int getConsensusMethod()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearConsensusMethod() {
      consensus_method = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'consensus_flavor' field.
      * metrics-lib/RelayNetworkStatusConsensus: String getConsensusFlavor()
      * @return The value.
      */
    public java.lang.String getConsensusFlavor() {
      return consensus_flavor;
    }

    /**
      * Sets the value of the 'consensus_flavor' field.
      * metrics-lib/RelayNetworkStatusConsensus: String getConsensusFlavor()
      * @param value The value of 'consensus_flavor'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setConsensusFlavor(java.lang.String value) {
      validate(fields()[5], value);
      this.consensus_flavor = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'consensus_flavor' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: String getConsensusFlavor()
      * @return True if the 'consensus_flavor' field has been set, false otherwise.
      */
    public boolean hasConsensusFlavor() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'consensus_flavor' field.
      * metrics-lib/RelayNetworkStatusConsensus: String getConsensusFlavor()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearConsensusFlavor() {
      consensus_flavor = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'valid_after' field.
      * metrics-lib/RelayNetworkStatusConsensus: long getValidAfterMillis()
      * @return The value.
      */
    public java.lang.Long getValidAfter() {
      return valid_after;
    }

    /**
      * Sets the value of the 'valid_after' field.
      * metrics-lib/RelayNetworkStatusConsensus: long getValidAfterMillis()
      * @param value The value of 'valid_after'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setValidAfter(java.lang.Long value) {
      validate(fields()[6], value);
      this.valid_after = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'valid_after' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: long getValidAfterMillis()
      * @return True if the 'valid_after' field has been set, false otherwise.
      */
    public boolean hasValidAfter() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'valid_after' field.
      * metrics-lib/RelayNetworkStatusConsensus: long getValidAfterMillis()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearValidAfter() {
      valid_after = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'fresh_until' field.
      * metrics-lib/RelayNetworkStatusConsensus: long getFreshUntilMillis()
      * @return The value.
      */
    public java.lang.Long getFreshUntil() {
      return fresh_until;
    }

    /**
      * Sets the value of the 'fresh_until' field.
      * metrics-lib/RelayNetworkStatusConsensus: long getFreshUntilMillis()
      * @param value The value of 'fresh_until'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setFreshUntil(java.lang.Long value) {
      validate(fields()[7], value);
      this.fresh_until = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'fresh_until' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: long getFreshUntilMillis()
      * @return True if the 'fresh_until' field has been set, false otherwise.
      */
    public boolean hasFreshUntil() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'fresh_until' field.
      * metrics-lib/RelayNetworkStatusConsensus: long getFreshUntilMillis()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearFreshUntil() {
      fresh_until = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'valid_until' field.
      * metrics-lib/RelayNetworkStatusConsensus: long getValidUntilMillis()
      * @return The value.
      */
    public java.lang.Long getValidUntil() {
      return valid_until;
    }

    /**
      * Sets the value of the 'valid_until' field.
      * metrics-lib/RelayNetworkStatusConsensus: long getValidUntilMillis()
      * @param value The value of 'valid_until'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setValidUntil(java.lang.Long value) {
      validate(fields()[8], value);
      this.valid_until = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'valid_until' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: long getValidUntilMillis()
      * @return True if the 'valid_until' field has been set, false otherwise.
      */
    public boolean hasValidUntil() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'valid_until' field.
      * metrics-lib/RelayNetworkStatusConsensus: long getValidUntilMillis()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearValidUntil() {
      valid_until = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'voting_delay' field.
      * @return The value.
      */
    public trans.encoders.relayConsensus.Vote getVotingDelay() {
      return voting_delay;
    }

    /**
      * Sets the value of the 'voting_delay' field.
      * @param value The value of 'voting_delay'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setVotingDelay(trans.encoders.relayConsensus.Vote value) {
      validate(fields()[9], value);
      this.voting_delayBuilder = null;
      this.voting_delay = value;
      fieldSetFlags()[9] = true;
      return this; 
    }

    /**
      * Checks whether the 'voting_delay' field has been set.
      * @return True if the 'voting_delay' field has been set, false otherwise.
      */
    public boolean hasVotingDelay() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'voting_delay' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public trans.encoders.relayConsensus.Vote.Builder getVotingDelayBuilder() {
      if (voting_delayBuilder == null) {
        if (hasVotingDelay()) {
          setVotingDelayBuilder(trans.encoders.relayConsensus.Vote.newBuilder(voting_delay));
        } else {
          setVotingDelayBuilder(trans.encoders.relayConsensus.Vote.newBuilder());
        }
      }
      return voting_delayBuilder;
    }

    /**
     * Sets the Builder instance for the 'voting_delay' field
     * @return This builder.
     */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setVotingDelayBuilder(trans.encoders.relayConsensus.Vote.Builder value) {
      clearVotingDelay();
      voting_delayBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'voting_delay' field has an active Builder instance
     * @return True if the 'voting_delay' field has an active Builder instance
     */
    public boolean hasVotingDelayBuilder() {
      return voting_delayBuilder != null;
    }

    /**
      * Clears the value of the 'voting_delay' field.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearVotingDelay() {
      voting_delay = null;
      voting_delayBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'client_versions' field.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedClientVersions()
      * @return The value.
      */
    public java.util.List<java.lang.String> getClientVersions() {
      return client_versions;
    }

    /**
      * Sets the value of the 'client_versions' field.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedClientVersions()
      * @param value The value of 'client_versions'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setClientVersions(java.util.List<java.lang.String> value) {
      validate(fields()[10], value);
      this.client_versions = value;
      fieldSetFlags()[10] = true;
      return this; 
    }

    /**
      * Checks whether the 'client_versions' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedClientVersions()
      * @return True if the 'client_versions' field has been set, false otherwise.
      */
    public boolean hasClientVersions() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'client_versions' field.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedClientVersions()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearClientVersions() {
      client_versions = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'server_versions' field.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedServerVersions()
      * @return The value.
      */
    public java.util.List<java.lang.String> getServerVersions() {
      return server_versions;
    }

    /**
      * Sets the value of the 'server_versions' field.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedServerVersions()
      * @param value The value of 'server_versions'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setServerVersions(java.util.List<java.lang.String> value) {
      validate(fields()[11], value);
      this.server_versions = value;
      fieldSetFlags()[11] = true;
      return this; 
    }

    /**
      * Checks whether the 'server_versions' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedServerVersions()
      * @return True if the 'server_versions' field has been set, false otherwise.
      */
    public boolean hasServerVersions() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'server_versions' field.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getRecommendedServerVersions()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearServerVersions() {
      server_versions = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'package$' field.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getPackageLines()
      * @return The value.
      */
    public java.util.List<java.lang.String> getPackage$() {
      return package$;
    }

    /**
      * Sets the value of the 'package$' field.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getPackageLines()
      * @param value The value of 'package$'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setPackage$(java.util.List<java.lang.String> value) {
      validate(fields()[12], value);
      this.package$ = value;
      fieldSetFlags()[12] = true;
      return this; 
    }

    /**
      * Checks whether the 'package$' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getPackageLines()
      * @return True if the 'package$' field has been set, false otherwise.
      */
    public boolean hasPackage$() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'package$' field.
      * metrics-lib/RelayNetworkStatusConsensus: List<String> getPackageLines()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearPackage$() {
      package$ = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'known_flags' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedSet<String> getKnownFlags()
      * @return The value.
      */
    public java.util.List<java.lang.String> getKnownFlags() {
      return known_flags;
    }

    /**
      * Sets the value of the 'known_flags' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedSet<String> getKnownFlags()
      * @param value The value of 'known_flags'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setKnownFlags(java.util.List<java.lang.String> value) {
      validate(fields()[13], value);
      this.known_flags = value;
      fieldSetFlags()[13] = true;
      return this; 
    }

    /**
      * Checks whether the 'known_flags' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: SortedSet<String> getKnownFlags()
      * @return True if the 'known_flags' field has been set, false otherwise.
      */
    public boolean hasKnownFlags() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'known_flags' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedSet<String> getKnownFlags()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearKnownFlags() {
      known_flags = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'params' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getConsensusParams()
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.Integer> getParams() {
      return params;
    }

    /**
      * Sets the value of the 'params' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getConsensusParams()
      * @param value The value of 'params'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setParams(java.util.Map<java.lang.String,java.lang.Integer> value) {
      validate(fields()[14], value);
      this.params = value;
      fieldSetFlags()[14] = true;
      return this; 
    }

    /**
      * Checks whether the 'params' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getConsensusParams()
      * @return True if the 'params' field has been set, false otherwise.
      */
    public boolean hasParams() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'params' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, Integer> getConsensusParams()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearParams() {
      params = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'authorities' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, DirSourceEntry> getDirSourceEntries()
      * @return The value.
      */
    public java.util.Map<java.lang.String,trans.encoders.relayConsensus.Authority> getAuthorities() {
      return authorities;
    }

    /**
      * Sets the value of the 'authorities' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, DirSourceEntry> getDirSourceEntries()
      * @param value The value of 'authorities'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setAuthorities(java.util.Map<java.lang.String,trans.encoders.relayConsensus.Authority> value) {
      validate(fields()[15], value);
      this.authorities = value;
      fieldSetFlags()[15] = true;
      return this; 
    }

    /**
      * Checks whether the 'authorities' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, DirSourceEntry> getDirSourceEntries()
      * @return True if the 'authorities' field has been set, false otherwise.
      */
    public boolean hasAuthorities() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'authorities' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, DirSourceEntry> getDirSourceEntries()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearAuthorities() {
      authorities = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, NetworkStatusEntry> getStatusEntries()
      * @return The value.
      */
    public java.util.Map<java.lang.String,trans.encoders.relayConsensus.Status> getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, NetworkStatusEntry> getStatusEntries()
      * @param value The value of 'status'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setStatus(java.util.Map<java.lang.String,trans.encoders.relayConsensus.Status> value) {
      validate(fields()[16], value);
      this.status = value;
      fieldSetFlags()[16] = true;
      return this; 
    }

    /**
      * Checks whether the 'status' field has been set.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, NetworkStatusEntry> getStatusEntries()
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'status' field.
      * metrics-lib/RelayNetworkStatusConsensus: SortedMap<String, NetworkStatusEntry> getStatusEntries()
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearStatus() {
      status = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'directory_footer' field.
      * @return The value.
      */
    public trans.encoders.relayConsensus.DirFooter getDirectoryFooter() {
      return directory_footer;
    }

    /**
      * Sets the value of the 'directory_footer' field.
      * @param value The value of 'directory_footer'.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setDirectoryFooter(trans.encoders.relayConsensus.DirFooter value) {
      validate(fields()[17], value);
      this.directory_footerBuilder = null;
      this.directory_footer = value;
      fieldSetFlags()[17] = true;
      return this; 
    }

    /**
      * Checks whether the 'directory_footer' field has been set.
      * @return True if the 'directory_footer' field has been set, false otherwise.
      */
    public boolean hasDirectoryFooter() {
      return fieldSetFlags()[17];
    }

    /**
     * Gets the Builder instance for the 'directory_footer' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public trans.encoders.relayConsensus.DirFooter.Builder getDirectoryFooterBuilder() {
      if (directory_footerBuilder == null) {
        if (hasDirectoryFooter()) {
          setDirectoryFooterBuilder(trans.encoders.relayConsensus.DirFooter.newBuilder(directory_footer));
        } else {
          setDirectoryFooterBuilder(trans.encoders.relayConsensus.DirFooter.newBuilder());
        }
      }
      return directory_footerBuilder;
    }

    /**
     * Sets the Builder instance for the 'directory_footer' field
     * @return This builder.
     */
    public trans.encoders.relayConsensus.RelayConsensus.Builder setDirectoryFooterBuilder(trans.encoders.relayConsensus.DirFooter.Builder value) {
      clearDirectoryFooter();
      directory_footerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'directory_footer' field has an active Builder instance
     * @return True if the 'directory_footer' field has an active Builder instance
     */
    public boolean hasDirectoryFooterBuilder() {
      return directory_footerBuilder != null;
    }

    /**
      * Clears the value of the 'directory_footer' field.
      * @return This builder.
      */
    public trans.encoders.relayConsensus.RelayConsensus.Builder clearDirectoryFooter() {
      directory_footer = null;
      directory_footerBuilder = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    @Override
    public RelayConsensus build() {
      try {
        RelayConsensus record = new RelayConsensus();
        record.descriptor_type = fieldSetFlags()[0] ? this.descriptor_type : (java.lang.String) defaultValue(fields()[0]);
        record.src_date = fieldSetFlags()[1] ? this.src_date : (java.lang.Long) defaultValue(fields()[1]);
        record.network_status_version = fieldSetFlags()[2] ? this.network_status_version : (java.lang.Integer) defaultValue(fields()[2]);
        record.vote_status = fieldSetFlags()[3] ? this.vote_status : (java.lang.String) defaultValue(fields()[3]);
        record.consensus_method = fieldSetFlags()[4] ? this.consensus_method : (java.lang.Integer) defaultValue(fields()[4]);
        record.consensus_flavor = fieldSetFlags()[5] ? this.consensus_flavor : (java.lang.String) defaultValue(fields()[5]);
        record.valid_after = fieldSetFlags()[6] ? this.valid_after : (java.lang.Long) defaultValue(fields()[6]);
        record.fresh_until = fieldSetFlags()[7] ? this.fresh_until : (java.lang.Long) defaultValue(fields()[7]);
        record.valid_until = fieldSetFlags()[8] ? this.valid_until : (java.lang.Long) defaultValue(fields()[8]);
        if (voting_delayBuilder != null) {
          record.voting_delay = this.voting_delayBuilder.build();
        } else {
          record.voting_delay = fieldSetFlags()[9] ? this.voting_delay : (trans.encoders.relayConsensus.Vote) defaultValue(fields()[9]);
        }
        record.client_versions = fieldSetFlags()[10] ? this.client_versions : (java.util.List<java.lang.String>) defaultValue(fields()[10]);
        record.server_versions = fieldSetFlags()[11] ? this.server_versions : (java.util.List<java.lang.String>) defaultValue(fields()[11]);
        record.package$ = fieldSetFlags()[12] ? this.package$ : (java.util.List<java.lang.String>) defaultValue(fields()[12]);
        record.known_flags = fieldSetFlags()[13] ? this.known_flags : (java.util.List<java.lang.String>) defaultValue(fields()[13]);
        record.params = fieldSetFlags()[14] ? this.params : (java.util.Map<java.lang.String,java.lang.Integer>) defaultValue(fields()[14]);
        record.authorities = fieldSetFlags()[15] ? this.authorities : (java.util.Map<java.lang.String,trans.encoders.relayConsensus.Authority>) defaultValue(fields()[15]);
        record.status = fieldSetFlags()[16] ? this.status : (java.util.Map<java.lang.String,trans.encoders.relayConsensus.Status>) defaultValue(fields()[16]);
        if (directory_footerBuilder != null) {
          record.directory_footer = this.directory_footerBuilder.build();
        } else {
          record.directory_footer = fieldSetFlags()[17] ? this.directory_footer : (trans.encoders.relayConsensus.DirFooter) defaultValue(fields()[17]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
