/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package trans.encoders.relay;  
@SuppressWarnings("all")
/** server-descriptor 1.0 - same as bridge but additional field 'router_signature' */
@org.apache.avro.specific.AvroGenerated
public class Relay extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5801679694744998013L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Relay\",\"namespace\":\"trans.encoders.relay\",\"doc\":\"server-descriptor 1.0 - same as bridge but additional field 'router_signature'\",\"fields\":[{\"name\":\"descriptor_type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"server-descriptor 1.0\"},{\"name\":\"src_date\",\"type\":[\"null\",\"long\"],\"doc\":\"file creation date, in milliseconds, of the data source to this conversion\"},{\"name\":\"server_descriptor_digest\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getServerDescriptorDigest()\"},{\"name\":\"server_descriptor_sha256\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256()\"},{\"name\":\"router\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Router\",\"fields\":[{\"name\":\"nickname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getNickname()\"},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getAddress()\"},{\"name\":\"or_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/ServerDescriptor: int getOrPort()\"},{\"name\":\"socks_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/ServerDescriptor: int getSocksPort()\"},{\"name\":\"dir_port\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/ServerDescriptor: int getDirPort()\"}]}]},{\"name\":\"identity_ed25519\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: String getIdentityEd25519()\"},{\"name\":\"master_key_ed25519\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getMasterKeyEd25519()\"},{\"name\":\"bandwidth\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Bandwidth\",\"fields\":[{\"name\":\"avg\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/ServerDescriptor: int getBandwidthRate()\"},{\"name\":\"burst\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/ServerDescriptor: int getBandwidthBurst()\"},{\"name\":\"observed\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/ServerDescriptor: int getBandwidthObserved()\"}]}]},{\"name\":\"platform\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getPlatform()\"},{\"name\":\"published\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/ServerDescriptor: long getPublishedMillis()\"},{\"name\":\"fingerprint\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getFingerprint()\"},{\"name\":\"hibernating\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: boolean isHibernating()\"},{\"name\":\"uptime\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/ServerDescriptor: Long getUptime()\"},{\"name\":\"onion_key\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: String getOnionKey()\"},{\"name\":\"onion_key_crosscert\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: String getOnionKeyCrosscert()\"},{\"name\":\"ntor_onion_key\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: String getNtorOnionKey()\"},{\"name\":\"ntor_onion_key_crosscert\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert()\"},{\"name\":\"signing_key\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: String getSigningKey()\"},{\"name\":\"exit_policy\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/ServerDescriptor: List<String> getExitPolicyLines()\"},{\"name\":\"ipv6_policy\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy()\"},{\"name\":\"ipv6_portlist\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getIpv6PortList()\"},{\"name\":\"router_sig_ed25519\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: String getRouterSignatureEd25519()\"},{\"name\":\"router_signature\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: String getRouterSignature()\"},{\"name\":\"contact\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getContact()\"},{\"name\":\"family\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/ServerDescriptor: List<String> getFamilyEntries()\"},{\"name\":\"read_history\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ReadHistory\",\"fields\":[{\"name\":\"date\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/BandwidthHistory: long getHistoryEndMillis()\"},{\"name\":\"interval\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/BandwidthHistory: long getIntervalLength()\"},{\"name\":\"bytes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"long\"}],\"doc\":\"metrics-lib/BandwidthHistory: Collection<Long> getBandwidthValues().values()\"}]}],\"doc\":\"metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()\"},{\"name\":\"write_history\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"WriteHistory\",\"fields\":[{\"name\":\"date\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/BandwidthHistory: long getHistoryEndMillis()\"},{\"name\":\"interval\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/BandwidthHistory: long getIntervalLength()\"},{\"name\":\"bytes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"long\"}],\"doc\":\"metrics-lib/BandwidthHistory: Collection<Long> getBandwidthValues().values()\"}]}],\"doc\":\"metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()\"},{\"name\":\"eventdns\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic()\"},{\"name\":\"caches_extra_info\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: boolean getCachesExtraInfo()\"},{\"name\":\"extra_info_digest\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getExtraInfoDigest()\"},{\"name\":\"extra_info_digest_sha256\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256()\"},{\"name\":\"hidden_service_dir\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}],\"doc\":\"metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions()\"},{\"name\":\"link_protocol_versions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}],\"doc\":\"metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions()\"},{\"name\":\"circuit_protocol_versions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}],\"doc\":\"metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions()\"},{\"name\":\"allow_single_hop_exits\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits()\"},{\"name\":\"or_address\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrAddress\",\"fields\":[{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"implementation specific\"},{\"name\":\"port\",\"type\":[\"null\",\"int\"],\"doc\":\"implementation specific\"}]}}],\"doc\":\"metrics-lib/ServerDescriptor: List<String> getOrAddresses()\"},{\"name\":\"tunneled_dir_server\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/ServerDescriptor: boolean getTunnelledDirServer()\"}],\"aliases\":[\"relay_server\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String descriptor_type;
  /** file creation date, in milliseconds, of the data source to this conversion */
  @Deprecated public java.lang.Long src_date;
  /** metrics-lib/ServerDescriptor: String getServerDescriptorDigest() */
  @Deprecated public java.lang.String server_descriptor_digest;
  /** metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256() */
  @Deprecated public java.lang.String server_descriptor_sha256;
  @Deprecated public trans.encoders.relay.Router router;
  /** metrics-lib/ServerDescriptor: String getIdentityEd25519() */
  @Deprecated public java.lang.Boolean identity_ed25519;
  /** metrics-lib/ServerDescriptor: String getMasterKeyEd25519() */
  @Deprecated public java.lang.String master_key_ed25519;
  @Deprecated public trans.encoders.relay.Bandwidth bandwidth;
  /** metrics-lib/ServerDescriptor: String getPlatform() */
  @Deprecated public java.lang.String platform;
  /** metrics-lib/ServerDescriptor: long getPublishedMillis() */
  @Deprecated public java.lang.Long published;
  /** metrics-lib/ServerDescriptor: String getFingerprint() */
  @Deprecated public java.lang.String fingerprint;
  /** metrics-lib/ServerDescriptor: boolean isHibernating() */
  @Deprecated public java.lang.Boolean hibernating;
  /** metrics-lib/ServerDescriptor: Long getUptime() */
  @Deprecated public java.lang.Long uptime;
  /** metrics-lib/ServerDescriptor: String getOnionKey() */
  @Deprecated public java.lang.Boolean onion_key;
  /** metrics-lib/ServerDescriptor: String getOnionKeyCrosscert() */
  @Deprecated public java.lang.Boolean onion_key_crosscert;
  /** metrics-lib/ServerDescriptor: String getNtorOnionKey() */
  @Deprecated public java.lang.Boolean ntor_onion_key;
  /** metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert() */
  @Deprecated public java.lang.Boolean ntor_onion_key_crosscert;
  /** metrics-lib/ServerDescriptor: String getSigningKey() */
  @Deprecated public java.lang.Boolean signing_key;
  /** metrics-lib/ServerDescriptor: List<String> getExitPolicyLines() */
  @Deprecated public java.util.List<java.lang.String> exit_policy;
  /** metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy() */
  @Deprecated public java.lang.String ipv6_policy;
  /** metrics-lib/ServerDescriptor: String getIpv6PortList() */
  @Deprecated public java.lang.String ipv6_portlist;
  /** metrics-lib/ServerDescriptor: String getRouterSignatureEd25519() */
  @Deprecated public java.lang.Boolean router_sig_ed25519;
  /** metrics-lib/ServerDescriptor: String getRouterSignature() */
  @Deprecated public java.lang.Boolean router_signature;
  /** metrics-lib/ServerDescriptor: String getContact() */
  @Deprecated public java.lang.String contact;
  /** metrics-lib/ServerDescriptor: List<String> getFamilyEntries() */
  @Deprecated public java.util.List<java.lang.String> family;
  /** metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory() */
  @Deprecated public trans.encoders.relay.ReadHistory read_history;
  /** metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory() */
  @Deprecated public trans.encoders.relay.WriteHistory write_history;
  /** metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic() */
  @Deprecated public java.lang.Boolean eventdns;
  /** metrics-lib/ServerDescriptor: boolean getCachesExtraInfo() */
  @Deprecated public java.lang.Boolean caches_extra_info;
  /** metrics-lib/ServerDescriptor: String getExtraInfoDigest() */
  @Deprecated public java.lang.String extra_info_digest;
  /** metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256() */
  @Deprecated public java.lang.String extra_info_digest_sha256;
  /** metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions() */
  @Deprecated public java.util.List<java.lang.Integer> hidden_service_dir;
  /** metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions() */
  @Deprecated public java.util.List<java.lang.Integer> link_protocol_versions;
  /** metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions() */
  @Deprecated public java.util.List<java.lang.Integer> circuit_protocol_versions;
  /** metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits() */
  @Deprecated public java.lang.Boolean allow_single_hop_exits;
  /** metrics-lib/ServerDescriptor: List<String> getOrAddresses() */
  @Deprecated public java.util.List<trans.encoders.relay.OrAddress> or_address;
  /** metrics-lib/ServerDescriptor: boolean getTunnelledDirServer() */
  @Deprecated public java.lang.Boolean tunneled_dir_server;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Relay() {}

  /**
   * All-args constructor.
   * @param src_date file creation date, in milliseconds, of the data source to this conversion
   * @param server_descriptor_digest metrics-lib/ServerDescriptor: String getServerDescriptorDigest()
   * @param server_descriptor_sha256 metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256()
   * @param identity_ed25519 metrics-lib/ServerDescriptor: String getIdentityEd25519()
   * @param master_key_ed25519 metrics-lib/ServerDescriptor: String getMasterKeyEd25519()
   * @param platform metrics-lib/ServerDescriptor: String getPlatform()
   * @param published metrics-lib/ServerDescriptor: long getPublishedMillis()
   * @param fingerprint metrics-lib/ServerDescriptor: String getFingerprint()
   * @param hibernating metrics-lib/ServerDescriptor: boolean isHibernating()
   * @param uptime metrics-lib/ServerDescriptor: Long getUptime()
   * @param onion_key metrics-lib/ServerDescriptor: String getOnionKey()
   * @param onion_key_crosscert metrics-lib/ServerDescriptor: String getOnionKeyCrosscert()
   * @param ntor_onion_key metrics-lib/ServerDescriptor: String getNtorOnionKey()
   * @param ntor_onion_key_crosscert metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert()
   * @param signing_key metrics-lib/ServerDescriptor: String getSigningKey()
   * @param exit_policy metrics-lib/ServerDescriptor: List<String> getExitPolicyLines()
   * @param ipv6_policy metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy()
   * @param ipv6_portlist metrics-lib/ServerDescriptor: String getIpv6PortList()
   * @param router_sig_ed25519 metrics-lib/ServerDescriptor: String getRouterSignatureEd25519()
   * @param router_signature metrics-lib/ServerDescriptor: String getRouterSignature()
   * @param contact metrics-lib/ServerDescriptor: String getContact()
   * @param family metrics-lib/ServerDescriptor: List<String> getFamilyEntries()
   * @param read_history metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()
   * @param write_history metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()
   * @param eventdns metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic()
   * @param caches_extra_info metrics-lib/ServerDescriptor: boolean getCachesExtraInfo()
   * @param extra_info_digest metrics-lib/ServerDescriptor: String getExtraInfoDigest()
   * @param extra_info_digest_sha256 metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256()
   * @param hidden_service_dir metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions()
   * @param link_protocol_versions metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions()
   * @param circuit_protocol_versions metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions()
   * @param allow_single_hop_exits metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits()
   * @param or_address metrics-lib/ServerDescriptor: List<String> getOrAddresses()
   * @param tunneled_dir_server metrics-lib/ServerDescriptor: boolean getTunnelledDirServer()
   */
  public Relay(java.lang.String descriptor_type, java.lang.Long src_date, java.lang.String server_descriptor_digest, java.lang.String server_descriptor_sha256, trans.encoders.relay.Router router, java.lang.Boolean identity_ed25519, java.lang.String master_key_ed25519, trans.encoders.relay.Bandwidth bandwidth, java.lang.String platform, java.lang.Long published, java.lang.String fingerprint, java.lang.Boolean hibernating, java.lang.Long uptime, java.lang.Boolean onion_key, java.lang.Boolean onion_key_crosscert, java.lang.Boolean ntor_onion_key, java.lang.Boolean ntor_onion_key_crosscert, java.lang.Boolean signing_key, java.util.List<java.lang.String> exit_policy, java.lang.String ipv6_policy, java.lang.String ipv6_portlist, java.lang.Boolean router_sig_ed25519, java.lang.Boolean router_signature, java.lang.String contact, java.util.List<java.lang.String> family, trans.encoders.relay.ReadHistory read_history, trans.encoders.relay.WriteHistory write_history, java.lang.Boolean eventdns, java.lang.Boolean caches_extra_info, java.lang.String extra_info_digest, java.lang.String extra_info_digest_sha256, java.util.List<java.lang.Integer> hidden_service_dir, java.util.List<java.lang.Integer> link_protocol_versions, java.util.List<java.lang.Integer> circuit_protocol_versions, java.lang.Boolean allow_single_hop_exits, java.util.List<trans.encoders.relay.OrAddress> or_address, java.lang.Boolean tunneled_dir_server) {
    this.descriptor_type = descriptor_type;
    this.src_date = src_date;
    this.server_descriptor_digest = server_descriptor_digest;
    this.server_descriptor_sha256 = server_descriptor_sha256;
    this.router = router;
    this.identity_ed25519 = identity_ed25519;
    this.master_key_ed25519 = master_key_ed25519;
    this.bandwidth = bandwidth;
    this.platform = platform;
    this.published = published;
    this.fingerprint = fingerprint;
    this.hibernating = hibernating;
    this.uptime = uptime;
    this.onion_key = onion_key;
    this.onion_key_crosscert = onion_key_crosscert;
    this.ntor_onion_key = ntor_onion_key;
    this.ntor_onion_key_crosscert = ntor_onion_key_crosscert;
    this.signing_key = signing_key;
    this.exit_policy = exit_policy;
    this.ipv6_policy = ipv6_policy;
    this.ipv6_portlist = ipv6_portlist;
    this.router_sig_ed25519 = router_sig_ed25519;
    this.router_signature = router_signature;
    this.contact = contact;
    this.family = family;
    this.read_history = read_history;
    this.write_history = write_history;
    this.eventdns = eventdns;
    this.caches_extra_info = caches_extra_info;
    this.extra_info_digest = extra_info_digest;
    this.extra_info_digest_sha256 = extra_info_digest_sha256;
    this.hidden_service_dir = hidden_service_dir;
    this.link_protocol_versions = link_protocol_versions;
    this.circuit_protocol_versions = circuit_protocol_versions;
    this.allow_single_hop_exits = allow_single_hop_exits;
    this.or_address = or_address;
    this.tunneled_dir_server = tunneled_dir_server;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return descriptor_type;
    case 1: return src_date;
    case 2: return server_descriptor_digest;
    case 3: return server_descriptor_sha256;
    case 4: return router;
    case 5: return identity_ed25519;
    case 6: return master_key_ed25519;
    case 7: return bandwidth;
    case 8: return platform;
    case 9: return published;
    case 10: return fingerprint;
    case 11: return hibernating;
    case 12: return uptime;
    case 13: return onion_key;
    case 14: return onion_key_crosscert;
    case 15: return ntor_onion_key;
    case 16: return ntor_onion_key_crosscert;
    case 17: return signing_key;
    case 18: return exit_policy;
    case 19: return ipv6_policy;
    case 20: return ipv6_portlist;
    case 21: return router_sig_ed25519;
    case 22: return router_signature;
    case 23: return contact;
    case 24: return family;
    case 25: return read_history;
    case 26: return write_history;
    case 27: return eventdns;
    case 28: return caches_extra_info;
    case 29: return extra_info_digest;
    case 30: return extra_info_digest_sha256;
    case 31: return hidden_service_dir;
    case 32: return link_protocol_versions;
    case 33: return circuit_protocol_versions;
    case 34: return allow_single_hop_exits;
    case 35: return or_address;
    case 36: return tunneled_dir_server;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: descriptor_type = (java.lang.String)value$; break;
    case 1: src_date = (java.lang.Long)value$; break;
    case 2: server_descriptor_digest = (java.lang.String)value$; break;
    case 3: server_descriptor_sha256 = (java.lang.String)value$; break;
    case 4: router = (trans.encoders.relay.Router)value$; break;
    case 5: identity_ed25519 = (java.lang.Boolean)value$; break;
    case 6: master_key_ed25519 = (java.lang.String)value$; break;
    case 7: bandwidth = (trans.encoders.relay.Bandwidth)value$; break;
    case 8: platform = (java.lang.String)value$; break;
    case 9: published = (java.lang.Long)value$; break;
    case 10: fingerprint = (java.lang.String)value$; break;
    case 11: hibernating = (java.lang.Boolean)value$; break;
    case 12: uptime = (java.lang.Long)value$; break;
    case 13: onion_key = (java.lang.Boolean)value$; break;
    case 14: onion_key_crosscert = (java.lang.Boolean)value$; break;
    case 15: ntor_onion_key = (java.lang.Boolean)value$; break;
    case 16: ntor_onion_key_crosscert = (java.lang.Boolean)value$; break;
    case 17: signing_key = (java.lang.Boolean)value$; break;
    case 18: exit_policy = (java.util.List<java.lang.String>)value$; break;
    case 19: ipv6_policy = (java.lang.String)value$; break;
    case 20: ipv6_portlist = (java.lang.String)value$; break;
    case 21: router_sig_ed25519 = (java.lang.Boolean)value$; break;
    case 22: router_signature = (java.lang.Boolean)value$; break;
    case 23: contact = (java.lang.String)value$; break;
    case 24: family = (java.util.List<java.lang.String>)value$; break;
    case 25: read_history = (trans.encoders.relay.ReadHistory)value$; break;
    case 26: write_history = (trans.encoders.relay.WriteHistory)value$; break;
    case 27: eventdns = (java.lang.Boolean)value$; break;
    case 28: caches_extra_info = (java.lang.Boolean)value$; break;
    case 29: extra_info_digest = (java.lang.String)value$; break;
    case 30: extra_info_digest_sha256 = (java.lang.String)value$; break;
    case 31: hidden_service_dir = (java.util.List<java.lang.Integer>)value$; break;
    case 32: link_protocol_versions = (java.util.List<java.lang.Integer>)value$; break;
    case 33: circuit_protocol_versions = (java.util.List<java.lang.Integer>)value$; break;
    case 34: allow_single_hop_exits = (java.lang.Boolean)value$; break;
    case 35: or_address = (java.util.List<trans.encoders.relay.OrAddress>)value$; break;
    case 36: tunneled_dir_server = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'descriptor_type' field.
   */
  public java.lang.String getDescriptorType() {
    return descriptor_type;
  }

  /**
   * Sets the value of the 'descriptor_type' field.
   * @param value the value to set.
   */
  public void setDescriptorType(java.lang.String value) {
    this.descriptor_type = value;
  }

  /**
   * Gets the value of the 'src_date' field.
   * @return file creation date, in milliseconds, of the data source to this conversion
   */
  public java.lang.Long getSrcDate() {
    return src_date;
  }

  /**
   * Sets the value of the 'src_date' field.
   * file creation date, in milliseconds, of the data source to this conversion
   * @param value the value to set.
   */
  public void setSrcDate(java.lang.Long value) {
    this.src_date = value;
  }

  /**
   * Gets the value of the 'server_descriptor_digest' field.
   * @return metrics-lib/ServerDescriptor: String getServerDescriptorDigest()
   */
  public java.lang.String getServerDescriptorDigest() {
    return server_descriptor_digest;
  }

  /**
   * Sets the value of the 'server_descriptor_digest' field.
   * metrics-lib/ServerDescriptor: String getServerDescriptorDigest()
   * @param value the value to set.
   */
  public void setServerDescriptorDigest(java.lang.String value) {
    this.server_descriptor_digest = value;
  }

  /**
   * Gets the value of the 'server_descriptor_sha256' field.
   * @return metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256()
   */
  public java.lang.String getServerDescriptorSha256() {
    return server_descriptor_sha256;
  }

  /**
   * Sets the value of the 'server_descriptor_sha256' field.
   * metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256()
   * @param value the value to set.
   */
  public void setServerDescriptorSha256(java.lang.String value) {
    this.server_descriptor_sha256 = value;
  }

  /**
   * Gets the value of the 'router' field.
   */
  public trans.encoders.relay.Router getRouter() {
    return router;
  }

  /**
   * Sets the value of the 'router' field.
   * @param value the value to set.
   */
  public void setRouter(trans.encoders.relay.Router value) {
    this.router = value;
  }

  /**
   * Gets the value of the 'identity_ed25519' field.
   * @return metrics-lib/ServerDescriptor: String getIdentityEd25519()
   */
  public java.lang.Boolean getIdentityEd25519() {
    return identity_ed25519;
  }

  /**
   * Sets the value of the 'identity_ed25519' field.
   * metrics-lib/ServerDescriptor: String getIdentityEd25519()
   * @param value the value to set.
   */
  public void setIdentityEd25519(java.lang.Boolean value) {
    this.identity_ed25519 = value;
  }

  /**
   * Gets the value of the 'master_key_ed25519' field.
   * @return metrics-lib/ServerDescriptor: String getMasterKeyEd25519()
   */
  public java.lang.String getMasterKeyEd25519() {
    return master_key_ed25519;
  }

  /**
   * Sets the value of the 'master_key_ed25519' field.
   * metrics-lib/ServerDescriptor: String getMasterKeyEd25519()
   * @param value the value to set.
   */
  public void setMasterKeyEd25519(java.lang.String value) {
    this.master_key_ed25519 = value;
  }

  /**
   * Gets the value of the 'bandwidth' field.
   */
  public trans.encoders.relay.Bandwidth getBandwidth() {
    return bandwidth;
  }

  /**
   * Sets the value of the 'bandwidth' field.
   * @param value the value to set.
   */
  public void setBandwidth(trans.encoders.relay.Bandwidth value) {
    this.bandwidth = value;
  }

  /**
   * Gets the value of the 'platform' field.
   * @return metrics-lib/ServerDescriptor: String getPlatform()
   */
  public java.lang.String getPlatform() {
    return platform;
  }

  /**
   * Sets the value of the 'platform' field.
   * metrics-lib/ServerDescriptor: String getPlatform()
   * @param value the value to set.
   */
  public void setPlatform(java.lang.String value) {
    this.platform = value;
  }

  /**
   * Gets the value of the 'published' field.
   * @return metrics-lib/ServerDescriptor: long getPublishedMillis()
   */
  public java.lang.Long getPublished() {
    return published;
  }

  /**
   * Sets the value of the 'published' field.
   * metrics-lib/ServerDescriptor: long getPublishedMillis()
   * @param value the value to set.
   */
  public void setPublished(java.lang.Long value) {
    this.published = value;
  }

  /**
   * Gets the value of the 'fingerprint' field.
   * @return metrics-lib/ServerDescriptor: String getFingerprint()
   */
  public java.lang.String getFingerprint() {
    return fingerprint;
  }

  /**
   * Sets the value of the 'fingerprint' field.
   * metrics-lib/ServerDescriptor: String getFingerprint()
   * @param value the value to set.
   */
  public void setFingerprint(java.lang.String value) {
    this.fingerprint = value;
  }

  /**
   * Gets the value of the 'hibernating' field.
   * @return metrics-lib/ServerDescriptor: boolean isHibernating()
   */
  public java.lang.Boolean getHibernating() {
    return hibernating;
  }

  /**
   * Sets the value of the 'hibernating' field.
   * metrics-lib/ServerDescriptor: boolean isHibernating()
   * @param value the value to set.
   */
  public void setHibernating(java.lang.Boolean value) {
    this.hibernating = value;
  }

  /**
   * Gets the value of the 'uptime' field.
   * @return metrics-lib/ServerDescriptor: Long getUptime()
   */
  public java.lang.Long getUptime() {
    return uptime;
  }

  /**
   * Sets the value of the 'uptime' field.
   * metrics-lib/ServerDescriptor: Long getUptime()
   * @param value the value to set.
   */
  public void setUptime(java.lang.Long value) {
    this.uptime = value;
  }

  /**
   * Gets the value of the 'onion_key' field.
   * @return metrics-lib/ServerDescriptor: String getOnionKey()
   */
  public java.lang.Boolean getOnionKey() {
    return onion_key;
  }

  /**
   * Sets the value of the 'onion_key' field.
   * metrics-lib/ServerDescriptor: String getOnionKey()
   * @param value the value to set.
   */
  public void setOnionKey(java.lang.Boolean value) {
    this.onion_key = value;
  }

  /**
   * Gets the value of the 'onion_key_crosscert' field.
   * @return metrics-lib/ServerDescriptor: String getOnionKeyCrosscert()
   */
  public java.lang.Boolean getOnionKeyCrosscert() {
    return onion_key_crosscert;
  }

  /**
   * Sets the value of the 'onion_key_crosscert' field.
   * metrics-lib/ServerDescriptor: String getOnionKeyCrosscert()
   * @param value the value to set.
   */
  public void setOnionKeyCrosscert(java.lang.Boolean value) {
    this.onion_key_crosscert = value;
  }

  /**
   * Gets the value of the 'ntor_onion_key' field.
   * @return metrics-lib/ServerDescriptor: String getNtorOnionKey()
   */
  public java.lang.Boolean getNtorOnionKey() {
    return ntor_onion_key;
  }

  /**
   * Sets the value of the 'ntor_onion_key' field.
   * metrics-lib/ServerDescriptor: String getNtorOnionKey()
   * @param value the value to set.
   */
  public void setNtorOnionKey(java.lang.Boolean value) {
    this.ntor_onion_key = value;
  }

  /**
   * Gets the value of the 'ntor_onion_key_crosscert' field.
   * @return metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert()
   */
  public java.lang.Boolean getNtorOnionKeyCrosscert() {
    return ntor_onion_key_crosscert;
  }

  /**
   * Sets the value of the 'ntor_onion_key_crosscert' field.
   * metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert()
   * @param value the value to set.
   */
  public void setNtorOnionKeyCrosscert(java.lang.Boolean value) {
    this.ntor_onion_key_crosscert = value;
  }

  /**
   * Gets the value of the 'signing_key' field.
   * @return metrics-lib/ServerDescriptor: String getSigningKey()
   */
  public java.lang.Boolean getSigningKey() {
    return signing_key;
  }

  /**
   * Sets the value of the 'signing_key' field.
   * metrics-lib/ServerDescriptor: String getSigningKey()
   * @param value the value to set.
   */
  public void setSigningKey(java.lang.Boolean value) {
    this.signing_key = value;
  }

  /**
   * Gets the value of the 'exit_policy' field.
   * @return metrics-lib/ServerDescriptor: List<String> getExitPolicyLines()
   */
  public java.util.List<java.lang.String> getExitPolicy() {
    return exit_policy;
  }

  /**
   * Sets the value of the 'exit_policy' field.
   * metrics-lib/ServerDescriptor: List<String> getExitPolicyLines()
   * @param value the value to set.
   */
  public void setExitPolicy(java.util.List<java.lang.String> value) {
    this.exit_policy = value;
  }

  /**
   * Gets the value of the 'ipv6_policy' field.
   * @return metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy()
   */
  public java.lang.String getIpv6Policy() {
    return ipv6_policy;
  }

  /**
   * Sets the value of the 'ipv6_policy' field.
   * metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy()
   * @param value the value to set.
   */
  public void setIpv6Policy(java.lang.String value) {
    this.ipv6_policy = value;
  }

  /**
   * Gets the value of the 'ipv6_portlist' field.
   * @return metrics-lib/ServerDescriptor: String getIpv6PortList()
   */
  public java.lang.String getIpv6Portlist() {
    return ipv6_portlist;
  }

  /**
   * Sets the value of the 'ipv6_portlist' field.
   * metrics-lib/ServerDescriptor: String getIpv6PortList()
   * @param value the value to set.
   */
  public void setIpv6Portlist(java.lang.String value) {
    this.ipv6_portlist = value;
  }

  /**
   * Gets the value of the 'router_sig_ed25519' field.
   * @return metrics-lib/ServerDescriptor: String getRouterSignatureEd25519()
   */
  public java.lang.Boolean getRouterSigEd25519() {
    return router_sig_ed25519;
  }

  /**
   * Sets the value of the 'router_sig_ed25519' field.
   * metrics-lib/ServerDescriptor: String getRouterSignatureEd25519()
   * @param value the value to set.
   */
  public void setRouterSigEd25519(java.lang.Boolean value) {
    this.router_sig_ed25519 = value;
  }

  /**
   * Gets the value of the 'router_signature' field.
   * @return metrics-lib/ServerDescriptor: String getRouterSignature()
   */
  public java.lang.Boolean getRouterSignature() {
    return router_signature;
  }

  /**
   * Sets the value of the 'router_signature' field.
   * metrics-lib/ServerDescriptor: String getRouterSignature()
   * @param value the value to set.
   */
  public void setRouterSignature(java.lang.Boolean value) {
    this.router_signature = value;
  }

  /**
   * Gets the value of the 'contact' field.
   * @return metrics-lib/ServerDescriptor: String getContact()
   */
  public java.lang.String getContact() {
    return contact;
  }

  /**
   * Sets the value of the 'contact' field.
   * metrics-lib/ServerDescriptor: String getContact()
   * @param value the value to set.
   */
  public void setContact(java.lang.String value) {
    this.contact = value;
  }

  /**
   * Gets the value of the 'family' field.
   * @return metrics-lib/ServerDescriptor: List<String> getFamilyEntries()
   */
  public java.util.List<java.lang.String> getFamily() {
    return family;
  }

  /**
   * Sets the value of the 'family' field.
   * metrics-lib/ServerDescriptor: List<String> getFamilyEntries()
   * @param value the value to set.
   */
  public void setFamily(java.util.List<java.lang.String> value) {
    this.family = value;
  }

  /**
   * Gets the value of the 'read_history' field.
   * @return metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()
   */
  public trans.encoders.relay.ReadHistory getReadHistory() {
    return read_history;
  }

  /**
   * Sets the value of the 'read_history' field.
   * metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()
   * @param value the value to set.
   */
  public void setReadHistory(trans.encoders.relay.ReadHistory value) {
    this.read_history = value;
  }

  /**
   * Gets the value of the 'write_history' field.
   * @return metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()
   */
  public trans.encoders.relay.WriteHistory getWriteHistory() {
    return write_history;
  }

  /**
   * Sets the value of the 'write_history' field.
   * metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()
   * @param value the value to set.
   */
  public void setWriteHistory(trans.encoders.relay.WriteHistory value) {
    this.write_history = value;
  }

  /**
   * Gets the value of the 'eventdns' field.
   * @return metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic()
   */
  public java.lang.Boolean getEventdns() {
    return eventdns;
  }

  /**
   * Sets the value of the 'eventdns' field.
   * metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic()
   * @param value the value to set.
   */
  public void setEventdns(java.lang.Boolean value) {
    this.eventdns = value;
  }

  /**
   * Gets the value of the 'caches_extra_info' field.
   * @return metrics-lib/ServerDescriptor: boolean getCachesExtraInfo()
   */
  public java.lang.Boolean getCachesExtraInfo() {
    return caches_extra_info;
  }

  /**
   * Sets the value of the 'caches_extra_info' field.
   * metrics-lib/ServerDescriptor: boolean getCachesExtraInfo()
   * @param value the value to set.
   */
  public void setCachesExtraInfo(java.lang.Boolean value) {
    this.caches_extra_info = value;
  }

  /**
   * Gets the value of the 'extra_info_digest' field.
   * @return metrics-lib/ServerDescriptor: String getExtraInfoDigest()
   */
  public java.lang.String getExtraInfoDigest() {
    return extra_info_digest;
  }

  /**
   * Sets the value of the 'extra_info_digest' field.
   * metrics-lib/ServerDescriptor: String getExtraInfoDigest()
   * @param value the value to set.
   */
  public void setExtraInfoDigest(java.lang.String value) {
    this.extra_info_digest = value;
  }

  /**
   * Gets the value of the 'extra_info_digest_sha256' field.
   * @return metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256()
   */
  public java.lang.String getExtraInfoDigestSha256() {
    return extra_info_digest_sha256;
  }

  /**
   * Sets the value of the 'extra_info_digest_sha256' field.
   * metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256()
   * @param value the value to set.
   */
  public void setExtraInfoDigestSha256(java.lang.String value) {
    this.extra_info_digest_sha256 = value;
  }

  /**
   * Gets the value of the 'hidden_service_dir' field.
   * @return metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions()
   */
  public java.util.List<java.lang.Integer> getHiddenServiceDir() {
    return hidden_service_dir;
  }

  /**
   * Sets the value of the 'hidden_service_dir' field.
   * metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions()
   * @param value the value to set.
   */
  public void setHiddenServiceDir(java.util.List<java.lang.Integer> value) {
    this.hidden_service_dir = value;
  }

  /**
   * Gets the value of the 'link_protocol_versions' field.
   * @return metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions()
   */
  public java.util.List<java.lang.Integer> getLinkProtocolVersions() {
    return link_protocol_versions;
  }

  /**
   * Sets the value of the 'link_protocol_versions' field.
   * metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions()
   * @param value the value to set.
   */
  public void setLinkProtocolVersions(java.util.List<java.lang.Integer> value) {
    this.link_protocol_versions = value;
  }

  /**
   * Gets the value of the 'circuit_protocol_versions' field.
   * @return metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions()
   */
  public java.util.List<java.lang.Integer> getCircuitProtocolVersions() {
    return circuit_protocol_versions;
  }

  /**
   * Sets the value of the 'circuit_protocol_versions' field.
   * metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions()
   * @param value the value to set.
   */
  public void setCircuitProtocolVersions(java.util.List<java.lang.Integer> value) {
    this.circuit_protocol_versions = value;
  }

  /**
   * Gets the value of the 'allow_single_hop_exits' field.
   * @return metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits()
   */
  public java.lang.Boolean getAllowSingleHopExits() {
    return allow_single_hop_exits;
  }

  /**
   * Sets the value of the 'allow_single_hop_exits' field.
   * metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits()
   * @param value the value to set.
   */
  public void setAllowSingleHopExits(java.lang.Boolean value) {
    this.allow_single_hop_exits = value;
  }

  /**
   * Gets the value of the 'or_address' field.
   * @return metrics-lib/ServerDescriptor: List<String> getOrAddresses()
   */
  public java.util.List<trans.encoders.relay.OrAddress> getOrAddress() {
    return or_address;
  }

  /**
   * Sets the value of the 'or_address' field.
   * metrics-lib/ServerDescriptor: List<String> getOrAddresses()
   * @param value the value to set.
   */
  public void setOrAddress(java.util.List<trans.encoders.relay.OrAddress> value) {
    this.or_address = value;
  }

  /**
   * Gets the value of the 'tunneled_dir_server' field.
   * @return metrics-lib/ServerDescriptor: boolean getTunnelledDirServer()
   */
  public java.lang.Boolean getTunneledDirServer() {
    return tunneled_dir_server;
  }

  /**
   * Sets the value of the 'tunneled_dir_server' field.
   * metrics-lib/ServerDescriptor: boolean getTunnelledDirServer()
   * @param value the value to set.
   */
  public void setTunneledDirServer(java.lang.Boolean value) {
    this.tunneled_dir_server = value;
  }

  /**
   * Creates a new Relay RecordBuilder.
   * @return A new Relay RecordBuilder
   */
  public static trans.encoders.relay.Relay.Builder newBuilder() {
    return new trans.encoders.relay.Relay.Builder();
  }
  
  /**
   * Creates a new Relay RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Relay RecordBuilder
   */
  public static trans.encoders.relay.Relay.Builder newBuilder(trans.encoders.relay.Relay.Builder other) {
    return new trans.encoders.relay.Relay.Builder(other);
  }
  
  /**
   * Creates a new Relay RecordBuilder by copying an existing Relay instance.
   * @param other The existing instance to copy.
   * @return A new Relay RecordBuilder
   */
  public static trans.encoders.relay.Relay.Builder newBuilder(trans.encoders.relay.Relay other) {
    return new trans.encoders.relay.Relay.Builder(other);
  }
  
  /**
   * RecordBuilder for Relay instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Relay>
    implements org.apache.avro.data.RecordBuilder<Relay> {

    private java.lang.String descriptor_type;
    /** file creation date, in milliseconds, of the data source to this conversion */
    private java.lang.Long src_date;
    /** metrics-lib/ServerDescriptor: String getServerDescriptorDigest() */
    private java.lang.String server_descriptor_digest;
    /** metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256() */
    private java.lang.String server_descriptor_sha256;
    private trans.encoders.relay.Router router;
    private trans.encoders.relay.Router.Builder routerBuilder;
    /** metrics-lib/ServerDescriptor: String getIdentityEd25519() */
    private java.lang.Boolean identity_ed25519;
    /** metrics-lib/ServerDescriptor: String getMasterKeyEd25519() */
    private java.lang.String master_key_ed25519;
    private trans.encoders.relay.Bandwidth bandwidth;
    private trans.encoders.relay.Bandwidth.Builder bandwidthBuilder;
    /** metrics-lib/ServerDescriptor: String getPlatform() */
    private java.lang.String platform;
    /** metrics-lib/ServerDescriptor: long getPublishedMillis() */
    private java.lang.Long published;
    /** metrics-lib/ServerDescriptor: String getFingerprint() */
    private java.lang.String fingerprint;
    /** metrics-lib/ServerDescriptor: boolean isHibernating() */
    private java.lang.Boolean hibernating;
    /** metrics-lib/ServerDescriptor: Long getUptime() */
    private java.lang.Long uptime;
    /** metrics-lib/ServerDescriptor: String getOnionKey() */
    private java.lang.Boolean onion_key;
    /** metrics-lib/ServerDescriptor: String getOnionKeyCrosscert() */
    private java.lang.Boolean onion_key_crosscert;
    /** metrics-lib/ServerDescriptor: String getNtorOnionKey() */
    private java.lang.Boolean ntor_onion_key;
    /** metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert() */
    private java.lang.Boolean ntor_onion_key_crosscert;
    /** metrics-lib/ServerDescriptor: String getSigningKey() */
    private java.lang.Boolean signing_key;
    /** metrics-lib/ServerDescriptor: List<String> getExitPolicyLines() */
    private java.util.List<java.lang.String> exit_policy;
    /** metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy() */
    private java.lang.String ipv6_policy;
    /** metrics-lib/ServerDescriptor: String getIpv6PortList() */
    private java.lang.String ipv6_portlist;
    /** metrics-lib/ServerDescriptor: String getRouterSignatureEd25519() */
    private java.lang.Boolean router_sig_ed25519;
    /** metrics-lib/ServerDescriptor: String getRouterSignature() */
    private java.lang.Boolean router_signature;
    /** metrics-lib/ServerDescriptor: String getContact() */
    private java.lang.String contact;
    /** metrics-lib/ServerDescriptor: List<String> getFamilyEntries() */
    private java.util.List<java.lang.String> family;
    /** metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory() */
    private trans.encoders.relay.ReadHistory read_history;
    private trans.encoders.relay.ReadHistory.Builder read_historyBuilder;
    /** metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory() */
    private trans.encoders.relay.WriteHistory write_history;
    private trans.encoders.relay.WriteHistory.Builder write_historyBuilder;
    /** metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic() */
    private java.lang.Boolean eventdns;
    /** metrics-lib/ServerDescriptor: boolean getCachesExtraInfo() */
    private java.lang.Boolean caches_extra_info;
    /** metrics-lib/ServerDescriptor: String getExtraInfoDigest() */
    private java.lang.String extra_info_digest;
    /** metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256() */
    private java.lang.String extra_info_digest_sha256;
    /** metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions() */
    private java.util.List<java.lang.Integer> hidden_service_dir;
    /** metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions() */
    private java.util.List<java.lang.Integer> link_protocol_versions;
    /** metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions() */
    private java.util.List<java.lang.Integer> circuit_protocol_versions;
    /** metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits() */
    private java.lang.Boolean allow_single_hop_exits;
    /** metrics-lib/ServerDescriptor: List<String> getOrAddresses() */
    private java.util.List<trans.encoders.relay.OrAddress> or_address;
    /** metrics-lib/ServerDescriptor: boolean getTunnelledDirServer() */
    private java.lang.Boolean tunneled_dir_server;

    /** Creates a new Builder */
    private Builder() {
      super(trans.encoders.relay.Relay.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(trans.encoders.relay.Relay.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.src_date)) {
        this.src_date = data().deepCopy(fields()[1].schema(), other.src_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.server_descriptor_digest)) {
        this.server_descriptor_digest = data().deepCopy(fields()[2].schema(), other.server_descriptor_digest);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.server_descriptor_sha256)) {
        this.server_descriptor_sha256 = data().deepCopy(fields()[3].schema(), other.server_descriptor_sha256);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.router)) {
        this.router = data().deepCopy(fields()[4].schema(), other.router);
        fieldSetFlags()[4] = true;
      }
      if (other.hasRouterBuilder()) {
        this.routerBuilder = trans.encoders.relay.Router.newBuilder(other.getRouterBuilder());
      }
      if (isValidValue(fields()[5], other.identity_ed25519)) {
        this.identity_ed25519 = data().deepCopy(fields()[5].schema(), other.identity_ed25519);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.master_key_ed25519)) {
        this.master_key_ed25519 = data().deepCopy(fields()[6].schema(), other.master_key_ed25519);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.bandwidth)) {
        this.bandwidth = data().deepCopy(fields()[7].schema(), other.bandwidth);
        fieldSetFlags()[7] = true;
      }
      if (other.hasBandwidthBuilder()) {
        this.bandwidthBuilder = trans.encoders.relay.Bandwidth.newBuilder(other.getBandwidthBuilder());
      }
      if (isValidValue(fields()[8], other.platform)) {
        this.platform = data().deepCopy(fields()[8].schema(), other.platform);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.published)) {
        this.published = data().deepCopy(fields()[9].schema(), other.published);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.fingerprint)) {
        this.fingerprint = data().deepCopy(fields()[10].schema(), other.fingerprint);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.hibernating)) {
        this.hibernating = data().deepCopy(fields()[11].schema(), other.hibernating);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.uptime)) {
        this.uptime = data().deepCopy(fields()[12].schema(), other.uptime);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.onion_key)) {
        this.onion_key = data().deepCopy(fields()[13].schema(), other.onion_key);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.onion_key_crosscert)) {
        this.onion_key_crosscert = data().deepCopy(fields()[14].schema(), other.onion_key_crosscert);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.ntor_onion_key)) {
        this.ntor_onion_key = data().deepCopy(fields()[15].schema(), other.ntor_onion_key);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.ntor_onion_key_crosscert)) {
        this.ntor_onion_key_crosscert = data().deepCopy(fields()[16].schema(), other.ntor_onion_key_crosscert);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.signing_key)) {
        this.signing_key = data().deepCopy(fields()[17].schema(), other.signing_key);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.exit_policy)) {
        this.exit_policy = data().deepCopy(fields()[18].schema(), other.exit_policy);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.ipv6_policy)) {
        this.ipv6_policy = data().deepCopy(fields()[19].schema(), other.ipv6_policy);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.ipv6_portlist)) {
        this.ipv6_portlist = data().deepCopy(fields()[20].schema(), other.ipv6_portlist);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.router_sig_ed25519)) {
        this.router_sig_ed25519 = data().deepCopy(fields()[21].schema(), other.router_sig_ed25519);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.router_signature)) {
        this.router_signature = data().deepCopy(fields()[22].schema(), other.router_signature);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.contact)) {
        this.contact = data().deepCopy(fields()[23].schema(), other.contact);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.family)) {
        this.family = data().deepCopy(fields()[24].schema(), other.family);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.read_history)) {
        this.read_history = data().deepCopy(fields()[25].schema(), other.read_history);
        fieldSetFlags()[25] = true;
      }
      if (other.hasReadHistoryBuilder()) {
        this.read_historyBuilder = trans.encoders.relay.ReadHistory.newBuilder(other.getReadHistoryBuilder());
      }
      if (isValidValue(fields()[26], other.write_history)) {
        this.write_history = data().deepCopy(fields()[26].schema(), other.write_history);
        fieldSetFlags()[26] = true;
      }
      if (other.hasWriteHistoryBuilder()) {
        this.write_historyBuilder = trans.encoders.relay.WriteHistory.newBuilder(other.getWriteHistoryBuilder());
      }
      if (isValidValue(fields()[27], other.eventdns)) {
        this.eventdns = data().deepCopy(fields()[27].schema(), other.eventdns);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.caches_extra_info)) {
        this.caches_extra_info = data().deepCopy(fields()[28].schema(), other.caches_extra_info);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.extra_info_digest)) {
        this.extra_info_digest = data().deepCopy(fields()[29].schema(), other.extra_info_digest);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.extra_info_digest_sha256)) {
        this.extra_info_digest_sha256 = data().deepCopy(fields()[30].schema(), other.extra_info_digest_sha256);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.hidden_service_dir)) {
        this.hidden_service_dir = data().deepCopy(fields()[31].schema(), other.hidden_service_dir);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.link_protocol_versions)) {
        this.link_protocol_versions = data().deepCopy(fields()[32].schema(), other.link_protocol_versions);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.circuit_protocol_versions)) {
        this.circuit_protocol_versions = data().deepCopy(fields()[33].schema(), other.circuit_protocol_versions);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.allow_single_hop_exits)) {
        this.allow_single_hop_exits = data().deepCopy(fields()[34].schema(), other.allow_single_hop_exits);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.or_address)) {
        this.or_address = data().deepCopy(fields()[35].schema(), other.or_address);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.tunneled_dir_server)) {
        this.tunneled_dir_server = data().deepCopy(fields()[36].schema(), other.tunneled_dir_server);
        fieldSetFlags()[36] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing Relay instance
     * @param other The existing instance to copy.
     */
    private Builder(trans.encoders.relay.Relay other) {
            super(trans.encoders.relay.Relay.SCHEMA$);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.src_date)) {
        this.src_date = data().deepCopy(fields()[1].schema(), other.src_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.server_descriptor_digest)) {
        this.server_descriptor_digest = data().deepCopy(fields()[2].schema(), other.server_descriptor_digest);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.server_descriptor_sha256)) {
        this.server_descriptor_sha256 = data().deepCopy(fields()[3].schema(), other.server_descriptor_sha256);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.router)) {
        this.router = data().deepCopy(fields()[4].schema(), other.router);
        fieldSetFlags()[4] = true;
      }
      this.routerBuilder = null;
      if (isValidValue(fields()[5], other.identity_ed25519)) {
        this.identity_ed25519 = data().deepCopy(fields()[5].schema(), other.identity_ed25519);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.master_key_ed25519)) {
        this.master_key_ed25519 = data().deepCopy(fields()[6].schema(), other.master_key_ed25519);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.bandwidth)) {
        this.bandwidth = data().deepCopy(fields()[7].schema(), other.bandwidth);
        fieldSetFlags()[7] = true;
      }
      this.bandwidthBuilder = null;
      if (isValidValue(fields()[8], other.platform)) {
        this.platform = data().deepCopy(fields()[8].schema(), other.platform);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.published)) {
        this.published = data().deepCopy(fields()[9].schema(), other.published);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.fingerprint)) {
        this.fingerprint = data().deepCopy(fields()[10].schema(), other.fingerprint);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.hibernating)) {
        this.hibernating = data().deepCopy(fields()[11].schema(), other.hibernating);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.uptime)) {
        this.uptime = data().deepCopy(fields()[12].schema(), other.uptime);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.onion_key)) {
        this.onion_key = data().deepCopy(fields()[13].schema(), other.onion_key);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.onion_key_crosscert)) {
        this.onion_key_crosscert = data().deepCopy(fields()[14].schema(), other.onion_key_crosscert);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.ntor_onion_key)) {
        this.ntor_onion_key = data().deepCopy(fields()[15].schema(), other.ntor_onion_key);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.ntor_onion_key_crosscert)) {
        this.ntor_onion_key_crosscert = data().deepCopy(fields()[16].schema(), other.ntor_onion_key_crosscert);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.signing_key)) {
        this.signing_key = data().deepCopy(fields()[17].schema(), other.signing_key);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.exit_policy)) {
        this.exit_policy = data().deepCopy(fields()[18].schema(), other.exit_policy);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.ipv6_policy)) {
        this.ipv6_policy = data().deepCopy(fields()[19].schema(), other.ipv6_policy);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.ipv6_portlist)) {
        this.ipv6_portlist = data().deepCopy(fields()[20].schema(), other.ipv6_portlist);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.router_sig_ed25519)) {
        this.router_sig_ed25519 = data().deepCopy(fields()[21].schema(), other.router_sig_ed25519);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.router_signature)) {
        this.router_signature = data().deepCopy(fields()[22].schema(), other.router_signature);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.contact)) {
        this.contact = data().deepCopy(fields()[23].schema(), other.contact);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.family)) {
        this.family = data().deepCopy(fields()[24].schema(), other.family);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.read_history)) {
        this.read_history = data().deepCopy(fields()[25].schema(), other.read_history);
        fieldSetFlags()[25] = true;
      }
      this.read_historyBuilder = null;
      if (isValidValue(fields()[26], other.write_history)) {
        this.write_history = data().deepCopy(fields()[26].schema(), other.write_history);
        fieldSetFlags()[26] = true;
      }
      this.write_historyBuilder = null;
      if (isValidValue(fields()[27], other.eventdns)) {
        this.eventdns = data().deepCopy(fields()[27].schema(), other.eventdns);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.caches_extra_info)) {
        this.caches_extra_info = data().deepCopy(fields()[28].schema(), other.caches_extra_info);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.extra_info_digest)) {
        this.extra_info_digest = data().deepCopy(fields()[29].schema(), other.extra_info_digest);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.extra_info_digest_sha256)) {
        this.extra_info_digest_sha256 = data().deepCopy(fields()[30].schema(), other.extra_info_digest_sha256);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.hidden_service_dir)) {
        this.hidden_service_dir = data().deepCopy(fields()[31].schema(), other.hidden_service_dir);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.link_protocol_versions)) {
        this.link_protocol_versions = data().deepCopy(fields()[32].schema(), other.link_protocol_versions);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.circuit_protocol_versions)) {
        this.circuit_protocol_versions = data().deepCopy(fields()[33].schema(), other.circuit_protocol_versions);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.allow_single_hop_exits)) {
        this.allow_single_hop_exits = data().deepCopy(fields()[34].schema(), other.allow_single_hop_exits);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.or_address)) {
        this.or_address = data().deepCopy(fields()[35].schema(), other.or_address);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.tunneled_dir_server)) {
        this.tunneled_dir_server = data().deepCopy(fields()[36].schema(), other.tunneled_dir_server);
        fieldSetFlags()[36] = true;
      }
    }

    /**
      * Gets the value of the 'descriptor_type' field.
      * @return The value.
      */
    public java.lang.String getDescriptorType() {
      return descriptor_type;
    }

    /**
      * Sets the value of the 'descriptor_type' field.
      * @param value The value of 'descriptor_type'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setDescriptorType(java.lang.String value) {
      validate(fields()[0], value);
      this.descriptor_type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'descriptor_type' field has been set.
      * @return True if the 'descriptor_type' field has been set, false otherwise.
      */
    public boolean hasDescriptorType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'descriptor_type' field.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearDescriptorType() {
      descriptor_type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'src_date' field.
      * file creation date, in milliseconds, of the data source to this conversion
      * @return The value.
      */
    public java.lang.Long getSrcDate() {
      return src_date;
    }

    /**
      * Sets the value of the 'src_date' field.
      * file creation date, in milliseconds, of the data source to this conversion
      * @param value The value of 'src_date'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setSrcDate(java.lang.Long value) {
      validate(fields()[1], value);
      this.src_date = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'src_date' field has been set.
      * file creation date, in milliseconds, of the data source to this conversion
      * @return True if the 'src_date' field has been set, false otherwise.
      */
    public boolean hasSrcDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'src_date' field.
      * file creation date, in milliseconds, of the data source to this conversion
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearSrcDate() {
      src_date = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'server_descriptor_digest' field.
      * metrics-lib/ServerDescriptor: String getServerDescriptorDigest()
      * @return The value.
      */
    public java.lang.String getServerDescriptorDigest() {
      return server_descriptor_digest;
    }

    /**
      * Sets the value of the 'server_descriptor_digest' field.
      * metrics-lib/ServerDescriptor: String getServerDescriptorDigest()
      * @param value The value of 'server_descriptor_digest'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setServerDescriptorDigest(java.lang.String value) {
      validate(fields()[2], value);
      this.server_descriptor_digest = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'server_descriptor_digest' field has been set.
      * metrics-lib/ServerDescriptor: String getServerDescriptorDigest()
      * @return True if the 'server_descriptor_digest' field has been set, false otherwise.
      */
    public boolean hasServerDescriptorDigest() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'server_descriptor_digest' field.
      * metrics-lib/ServerDescriptor: String getServerDescriptorDigest()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearServerDescriptorDigest() {
      server_descriptor_digest = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'server_descriptor_sha256' field.
      * metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256()
      * @return The value.
      */
    public java.lang.String getServerDescriptorSha256() {
      return server_descriptor_sha256;
    }

    /**
      * Sets the value of the 'server_descriptor_sha256' field.
      * metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256()
      * @param value The value of 'server_descriptor_sha256'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setServerDescriptorSha256(java.lang.String value) {
      validate(fields()[3], value);
      this.server_descriptor_sha256 = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'server_descriptor_sha256' field has been set.
      * metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256()
      * @return True if the 'server_descriptor_sha256' field has been set, false otherwise.
      */
    public boolean hasServerDescriptorSha256() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'server_descriptor_sha256' field.
      * metrics-lib/ServerDescriptor: String getServerDescriptorDigestSha256()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearServerDescriptorSha256() {
      server_descriptor_sha256 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'router' field.
      * @return The value.
      */
    public trans.encoders.relay.Router getRouter() {
      return router;
    }

    /**
      * Sets the value of the 'router' field.
      * @param value The value of 'router'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setRouter(trans.encoders.relay.Router value) {
      validate(fields()[4], value);
      this.routerBuilder = null;
      this.router = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'router' field has been set.
      * @return True if the 'router' field has been set, false otherwise.
      */
    public boolean hasRouter() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'router' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public trans.encoders.relay.Router.Builder getRouterBuilder() {
      if (routerBuilder == null) {
        if (hasRouter()) {
          setRouterBuilder(trans.encoders.relay.Router.newBuilder(router));
        } else {
          setRouterBuilder(trans.encoders.relay.Router.newBuilder());
        }
      }
      return routerBuilder;
    }

    /**
     * Sets the Builder instance for the 'router' field
     * @return This builder.
     */
    public trans.encoders.relay.Relay.Builder setRouterBuilder(trans.encoders.relay.Router.Builder value) {
      clearRouter();
      routerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'router' field has an active Builder instance
     * @return True if the 'router' field has an active Builder instance
     */
    public boolean hasRouterBuilder() {
      return routerBuilder != null;
    }

    /**
      * Clears the value of the 'router' field.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearRouter() {
      router = null;
      routerBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'identity_ed25519' field.
      * metrics-lib/ServerDescriptor: String getIdentityEd25519()
      * @return The value.
      */
    public java.lang.Boolean getIdentityEd25519() {
      return identity_ed25519;
    }

    /**
      * Sets the value of the 'identity_ed25519' field.
      * metrics-lib/ServerDescriptor: String getIdentityEd25519()
      * @param value The value of 'identity_ed25519'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setIdentityEd25519(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.identity_ed25519 = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'identity_ed25519' field has been set.
      * metrics-lib/ServerDescriptor: String getIdentityEd25519()
      * @return True if the 'identity_ed25519' field has been set, false otherwise.
      */
    public boolean hasIdentityEd25519() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'identity_ed25519' field.
      * metrics-lib/ServerDescriptor: String getIdentityEd25519()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearIdentityEd25519() {
      identity_ed25519 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'master_key_ed25519' field.
      * metrics-lib/ServerDescriptor: String getMasterKeyEd25519()
      * @return The value.
      */
    public java.lang.String getMasterKeyEd25519() {
      return master_key_ed25519;
    }

    /**
      * Sets the value of the 'master_key_ed25519' field.
      * metrics-lib/ServerDescriptor: String getMasterKeyEd25519()
      * @param value The value of 'master_key_ed25519'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setMasterKeyEd25519(java.lang.String value) {
      validate(fields()[6], value);
      this.master_key_ed25519 = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'master_key_ed25519' field has been set.
      * metrics-lib/ServerDescriptor: String getMasterKeyEd25519()
      * @return True if the 'master_key_ed25519' field has been set, false otherwise.
      */
    public boolean hasMasterKeyEd25519() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'master_key_ed25519' field.
      * metrics-lib/ServerDescriptor: String getMasterKeyEd25519()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearMasterKeyEd25519() {
      master_key_ed25519 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'bandwidth' field.
      * @return The value.
      */
    public trans.encoders.relay.Bandwidth getBandwidth() {
      return bandwidth;
    }

    /**
      * Sets the value of the 'bandwidth' field.
      * @param value The value of 'bandwidth'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setBandwidth(trans.encoders.relay.Bandwidth value) {
      validate(fields()[7], value);
      this.bandwidthBuilder = null;
      this.bandwidth = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'bandwidth' field has been set.
      * @return True if the 'bandwidth' field has been set, false otherwise.
      */
    public boolean hasBandwidth() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'bandwidth' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public trans.encoders.relay.Bandwidth.Builder getBandwidthBuilder() {
      if (bandwidthBuilder == null) {
        if (hasBandwidth()) {
          setBandwidthBuilder(trans.encoders.relay.Bandwidth.newBuilder(bandwidth));
        } else {
          setBandwidthBuilder(trans.encoders.relay.Bandwidth.newBuilder());
        }
      }
      return bandwidthBuilder;
    }

    /**
     * Sets the Builder instance for the 'bandwidth' field
     * @return This builder.
     */
    public trans.encoders.relay.Relay.Builder setBandwidthBuilder(trans.encoders.relay.Bandwidth.Builder value) {
      clearBandwidth();
      bandwidthBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'bandwidth' field has an active Builder instance
     * @return True if the 'bandwidth' field has an active Builder instance
     */
    public boolean hasBandwidthBuilder() {
      return bandwidthBuilder != null;
    }

    /**
      * Clears the value of the 'bandwidth' field.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearBandwidth() {
      bandwidth = null;
      bandwidthBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'platform' field.
      * metrics-lib/ServerDescriptor: String getPlatform()
      * @return The value.
      */
    public java.lang.String getPlatform() {
      return platform;
    }

    /**
      * Sets the value of the 'platform' field.
      * metrics-lib/ServerDescriptor: String getPlatform()
      * @param value The value of 'platform'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setPlatform(java.lang.String value) {
      validate(fields()[8], value);
      this.platform = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'platform' field has been set.
      * metrics-lib/ServerDescriptor: String getPlatform()
      * @return True if the 'platform' field has been set, false otherwise.
      */
    public boolean hasPlatform() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'platform' field.
      * metrics-lib/ServerDescriptor: String getPlatform()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearPlatform() {
      platform = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'published' field.
      * metrics-lib/ServerDescriptor: long getPublishedMillis()
      * @return The value.
      */
    public java.lang.Long getPublished() {
      return published;
    }

    /**
      * Sets the value of the 'published' field.
      * metrics-lib/ServerDescriptor: long getPublishedMillis()
      * @param value The value of 'published'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setPublished(java.lang.Long value) {
      validate(fields()[9], value);
      this.published = value;
      fieldSetFlags()[9] = true;
      return this; 
    }

    /**
      * Checks whether the 'published' field has been set.
      * metrics-lib/ServerDescriptor: long getPublishedMillis()
      * @return True if the 'published' field has been set, false otherwise.
      */
    public boolean hasPublished() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'published' field.
      * metrics-lib/ServerDescriptor: long getPublishedMillis()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearPublished() {
      published = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'fingerprint' field.
      * metrics-lib/ServerDescriptor: String getFingerprint()
      * @return The value.
      */
    public java.lang.String getFingerprint() {
      return fingerprint;
    }

    /**
      * Sets the value of the 'fingerprint' field.
      * metrics-lib/ServerDescriptor: String getFingerprint()
      * @param value The value of 'fingerprint'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setFingerprint(java.lang.String value) {
      validate(fields()[10], value);
      this.fingerprint = value;
      fieldSetFlags()[10] = true;
      return this; 
    }

    /**
      * Checks whether the 'fingerprint' field has been set.
      * metrics-lib/ServerDescriptor: String getFingerprint()
      * @return True if the 'fingerprint' field has been set, false otherwise.
      */
    public boolean hasFingerprint() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'fingerprint' field.
      * metrics-lib/ServerDescriptor: String getFingerprint()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearFingerprint() {
      fingerprint = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'hibernating' field.
      * metrics-lib/ServerDescriptor: boolean isHibernating()
      * @return The value.
      */
    public java.lang.Boolean getHibernating() {
      return hibernating;
    }

    /**
      * Sets the value of the 'hibernating' field.
      * metrics-lib/ServerDescriptor: boolean isHibernating()
      * @param value The value of 'hibernating'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setHibernating(java.lang.Boolean value) {
      validate(fields()[11], value);
      this.hibernating = value;
      fieldSetFlags()[11] = true;
      return this; 
    }

    /**
      * Checks whether the 'hibernating' field has been set.
      * metrics-lib/ServerDescriptor: boolean isHibernating()
      * @return True if the 'hibernating' field has been set, false otherwise.
      */
    public boolean hasHibernating() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'hibernating' field.
      * metrics-lib/ServerDescriptor: boolean isHibernating()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearHibernating() {
      hibernating = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'uptime' field.
      * metrics-lib/ServerDescriptor: Long getUptime()
      * @return The value.
      */
    public java.lang.Long getUptime() {
      return uptime;
    }

    /**
      * Sets the value of the 'uptime' field.
      * metrics-lib/ServerDescriptor: Long getUptime()
      * @param value The value of 'uptime'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setUptime(java.lang.Long value) {
      validate(fields()[12], value);
      this.uptime = value;
      fieldSetFlags()[12] = true;
      return this; 
    }

    /**
      * Checks whether the 'uptime' field has been set.
      * metrics-lib/ServerDescriptor: Long getUptime()
      * @return True if the 'uptime' field has been set, false otherwise.
      */
    public boolean hasUptime() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'uptime' field.
      * metrics-lib/ServerDescriptor: Long getUptime()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearUptime() {
      uptime = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'onion_key' field.
      * metrics-lib/ServerDescriptor: String getOnionKey()
      * @return The value.
      */
    public java.lang.Boolean getOnionKey() {
      return onion_key;
    }

    /**
      * Sets the value of the 'onion_key' field.
      * metrics-lib/ServerDescriptor: String getOnionKey()
      * @param value The value of 'onion_key'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setOnionKey(java.lang.Boolean value) {
      validate(fields()[13], value);
      this.onion_key = value;
      fieldSetFlags()[13] = true;
      return this; 
    }

    /**
      * Checks whether the 'onion_key' field has been set.
      * metrics-lib/ServerDescriptor: String getOnionKey()
      * @return True if the 'onion_key' field has been set, false otherwise.
      */
    public boolean hasOnionKey() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'onion_key' field.
      * metrics-lib/ServerDescriptor: String getOnionKey()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearOnionKey() {
      onion_key = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'onion_key_crosscert' field.
      * metrics-lib/ServerDescriptor: String getOnionKeyCrosscert()
      * @return The value.
      */
    public java.lang.Boolean getOnionKeyCrosscert() {
      return onion_key_crosscert;
    }

    /**
      * Sets the value of the 'onion_key_crosscert' field.
      * metrics-lib/ServerDescriptor: String getOnionKeyCrosscert()
      * @param value The value of 'onion_key_crosscert'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setOnionKeyCrosscert(java.lang.Boolean value) {
      validate(fields()[14], value);
      this.onion_key_crosscert = value;
      fieldSetFlags()[14] = true;
      return this; 
    }

    /**
      * Checks whether the 'onion_key_crosscert' field has been set.
      * metrics-lib/ServerDescriptor: String getOnionKeyCrosscert()
      * @return True if the 'onion_key_crosscert' field has been set, false otherwise.
      */
    public boolean hasOnionKeyCrosscert() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'onion_key_crosscert' field.
      * metrics-lib/ServerDescriptor: String getOnionKeyCrosscert()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearOnionKeyCrosscert() {
      onion_key_crosscert = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'ntor_onion_key' field.
      * metrics-lib/ServerDescriptor: String getNtorOnionKey()
      * @return The value.
      */
    public java.lang.Boolean getNtorOnionKey() {
      return ntor_onion_key;
    }

    /**
      * Sets the value of the 'ntor_onion_key' field.
      * metrics-lib/ServerDescriptor: String getNtorOnionKey()
      * @param value The value of 'ntor_onion_key'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setNtorOnionKey(java.lang.Boolean value) {
      validate(fields()[15], value);
      this.ntor_onion_key = value;
      fieldSetFlags()[15] = true;
      return this; 
    }

    /**
      * Checks whether the 'ntor_onion_key' field has been set.
      * metrics-lib/ServerDescriptor: String getNtorOnionKey()
      * @return True if the 'ntor_onion_key' field has been set, false otherwise.
      */
    public boolean hasNtorOnionKey() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'ntor_onion_key' field.
      * metrics-lib/ServerDescriptor: String getNtorOnionKey()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearNtorOnionKey() {
      ntor_onion_key = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'ntor_onion_key_crosscert' field.
      * metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert()
      * @return The value.
      */
    public java.lang.Boolean getNtorOnionKeyCrosscert() {
      return ntor_onion_key_crosscert;
    }

    /**
      * Sets the value of the 'ntor_onion_key_crosscert' field.
      * metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert()
      * @param value The value of 'ntor_onion_key_crosscert'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setNtorOnionKeyCrosscert(java.lang.Boolean value) {
      validate(fields()[16], value);
      this.ntor_onion_key_crosscert = value;
      fieldSetFlags()[16] = true;
      return this; 
    }

    /**
      * Checks whether the 'ntor_onion_key_crosscert' field has been set.
      * metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert()
      * @return True if the 'ntor_onion_key_crosscert' field has been set, false otherwise.
      */
    public boolean hasNtorOnionKeyCrosscert() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'ntor_onion_key_crosscert' field.
      * metrics-lib/ServerDescriptor: String getNtorOnionKeyCrosscert()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearNtorOnionKeyCrosscert() {
      ntor_onion_key_crosscert = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'signing_key' field.
      * metrics-lib/ServerDescriptor: String getSigningKey()
      * @return The value.
      */
    public java.lang.Boolean getSigningKey() {
      return signing_key;
    }

    /**
      * Sets the value of the 'signing_key' field.
      * metrics-lib/ServerDescriptor: String getSigningKey()
      * @param value The value of 'signing_key'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setSigningKey(java.lang.Boolean value) {
      validate(fields()[17], value);
      this.signing_key = value;
      fieldSetFlags()[17] = true;
      return this; 
    }

    /**
      * Checks whether the 'signing_key' field has been set.
      * metrics-lib/ServerDescriptor: String getSigningKey()
      * @return True if the 'signing_key' field has been set, false otherwise.
      */
    public boolean hasSigningKey() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'signing_key' field.
      * metrics-lib/ServerDescriptor: String getSigningKey()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearSigningKey() {
      signing_key = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'exit_policy' field.
      * metrics-lib/ServerDescriptor: List<String> getExitPolicyLines()
      * @return The value.
      */
    public java.util.List<java.lang.String> getExitPolicy() {
      return exit_policy;
    }

    /**
      * Sets the value of the 'exit_policy' field.
      * metrics-lib/ServerDescriptor: List<String> getExitPolicyLines()
      * @param value The value of 'exit_policy'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setExitPolicy(java.util.List<java.lang.String> value) {
      validate(fields()[18], value);
      this.exit_policy = value;
      fieldSetFlags()[18] = true;
      return this; 
    }

    /**
      * Checks whether the 'exit_policy' field has been set.
      * metrics-lib/ServerDescriptor: List<String> getExitPolicyLines()
      * @return True if the 'exit_policy' field has been set, false otherwise.
      */
    public boolean hasExitPolicy() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'exit_policy' field.
      * metrics-lib/ServerDescriptor: List<String> getExitPolicyLines()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearExitPolicy() {
      exit_policy = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'ipv6_policy' field.
      * metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy()
      * @return The value.
      */
    public java.lang.String getIpv6Policy() {
      return ipv6_policy;
    }

    /**
      * Sets the value of the 'ipv6_policy' field.
      * metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy()
      * @param value The value of 'ipv6_policy'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setIpv6Policy(java.lang.String value) {
      validate(fields()[19], value);
      this.ipv6_policy = value;
      fieldSetFlags()[19] = true;
      return this; 
    }

    /**
      * Checks whether the 'ipv6_policy' field has been set.
      * metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy()
      * @return True if the 'ipv6_policy' field has been set, false otherwise.
      */
    public boolean hasIpv6Policy() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'ipv6_policy' field.
      * metrics-lib/ServerDescriptor: String getIpv6DefaultPolicy()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearIpv6Policy() {
      ipv6_policy = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'ipv6_portlist' field.
      * metrics-lib/ServerDescriptor: String getIpv6PortList()
      * @return The value.
      */
    public java.lang.String getIpv6Portlist() {
      return ipv6_portlist;
    }

    /**
      * Sets the value of the 'ipv6_portlist' field.
      * metrics-lib/ServerDescriptor: String getIpv6PortList()
      * @param value The value of 'ipv6_portlist'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setIpv6Portlist(java.lang.String value) {
      validate(fields()[20], value);
      this.ipv6_portlist = value;
      fieldSetFlags()[20] = true;
      return this; 
    }

    /**
      * Checks whether the 'ipv6_portlist' field has been set.
      * metrics-lib/ServerDescriptor: String getIpv6PortList()
      * @return True if the 'ipv6_portlist' field has been set, false otherwise.
      */
    public boolean hasIpv6Portlist() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'ipv6_portlist' field.
      * metrics-lib/ServerDescriptor: String getIpv6PortList()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearIpv6Portlist() {
      ipv6_portlist = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'router_sig_ed25519' field.
      * metrics-lib/ServerDescriptor: String getRouterSignatureEd25519()
      * @return The value.
      */
    public java.lang.Boolean getRouterSigEd25519() {
      return router_sig_ed25519;
    }

    /**
      * Sets the value of the 'router_sig_ed25519' field.
      * metrics-lib/ServerDescriptor: String getRouterSignatureEd25519()
      * @param value The value of 'router_sig_ed25519'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setRouterSigEd25519(java.lang.Boolean value) {
      validate(fields()[21], value);
      this.router_sig_ed25519 = value;
      fieldSetFlags()[21] = true;
      return this; 
    }

    /**
      * Checks whether the 'router_sig_ed25519' field has been set.
      * metrics-lib/ServerDescriptor: String getRouterSignatureEd25519()
      * @return True if the 'router_sig_ed25519' field has been set, false otherwise.
      */
    public boolean hasRouterSigEd25519() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'router_sig_ed25519' field.
      * metrics-lib/ServerDescriptor: String getRouterSignatureEd25519()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearRouterSigEd25519() {
      router_sig_ed25519 = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'router_signature' field.
      * metrics-lib/ServerDescriptor: String getRouterSignature()
      * @return The value.
      */
    public java.lang.Boolean getRouterSignature() {
      return router_signature;
    }

    /**
      * Sets the value of the 'router_signature' field.
      * metrics-lib/ServerDescriptor: String getRouterSignature()
      * @param value The value of 'router_signature'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setRouterSignature(java.lang.Boolean value) {
      validate(fields()[22], value);
      this.router_signature = value;
      fieldSetFlags()[22] = true;
      return this; 
    }

    /**
      * Checks whether the 'router_signature' field has been set.
      * metrics-lib/ServerDescriptor: String getRouterSignature()
      * @return True if the 'router_signature' field has been set, false otherwise.
      */
    public boolean hasRouterSignature() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'router_signature' field.
      * metrics-lib/ServerDescriptor: String getRouterSignature()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearRouterSignature() {
      router_signature = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'contact' field.
      * metrics-lib/ServerDescriptor: String getContact()
      * @return The value.
      */
    public java.lang.String getContact() {
      return contact;
    }

    /**
      * Sets the value of the 'contact' field.
      * metrics-lib/ServerDescriptor: String getContact()
      * @param value The value of 'contact'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setContact(java.lang.String value) {
      validate(fields()[23], value);
      this.contact = value;
      fieldSetFlags()[23] = true;
      return this; 
    }

    /**
      * Checks whether the 'contact' field has been set.
      * metrics-lib/ServerDescriptor: String getContact()
      * @return True if the 'contact' field has been set, false otherwise.
      */
    public boolean hasContact() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'contact' field.
      * metrics-lib/ServerDescriptor: String getContact()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearContact() {
      contact = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'family' field.
      * metrics-lib/ServerDescriptor: List<String> getFamilyEntries()
      * @return The value.
      */
    public java.util.List<java.lang.String> getFamily() {
      return family;
    }

    /**
      * Sets the value of the 'family' field.
      * metrics-lib/ServerDescriptor: List<String> getFamilyEntries()
      * @param value The value of 'family'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setFamily(java.util.List<java.lang.String> value) {
      validate(fields()[24], value);
      this.family = value;
      fieldSetFlags()[24] = true;
      return this; 
    }

    /**
      * Checks whether the 'family' field has been set.
      * metrics-lib/ServerDescriptor: List<String> getFamilyEntries()
      * @return True if the 'family' field has been set, false otherwise.
      */
    public boolean hasFamily() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'family' field.
      * metrics-lib/ServerDescriptor: List<String> getFamilyEntries()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearFamily() {
      family = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'read_history' field.
      * metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()
      * @return The value.
      */
    public trans.encoders.relay.ReadHistory getReadHistory() {
      return read_history;
    }

    /**
      * Sets the value of the 'read_history' field.
      * metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()
      * @param value The value of 'read_history'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setReadHistory(trans.encoders.relay.ReadHistory value) {
      validate(fields()[25], value);
      this.read_historyBuilder = null;
      this.read_history = value;
      fieldSetFlags()[25] = true;
      return this; 
    }

    /**
      * Checks whether the 'read_history' field has been set.
      * metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()
      * @return True if the 'read_history' field has been set, false otherwise.
      */
    public boolean hasReadHistory() {
      return fieldSetFlags()[25];
    }

    /**
     * Gets the Builder instance for the 'read_history' field and creates one if it doesn't exist yet.
     * metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()
     * @return This builder.
     */
    public trans.encoders.relay.ReadHistory.Builder getReadHistoryBuilder() {
      if (read_historyBuilder == null) {
        if (hasReadHistory()) {
          setReadHistoryBuilder(trans.encoders.relay.ReadHistory.newBuilder(read_history));
        } else {
          setReadHistoryBuilder(trans.encoders.relay.ReadHistory.newBuilder());
        }
      }
      return read_historyBuilder;
    }

    /**
     * Sets the Builder instance for the 'read_history' field
     * metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()
     * @return This builder.
     */
    public trans.encoders.relay.Relay.Builder setReadHistoryBuilder(trans.encoders.relay.ReadHistory.Builder value) {
      clearReadHistory();
      read_historyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'read_history' field has an active Builder instance
     * metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()
     * @return True if the 'read_history' field has an active Builder instance
     */
    public boolean hasReadHistoryBuilder() {
      return read_historyBuilder != null;
    }

    /**
      * Clears the value of the 'read_history' field.
      * metrics-lib/ServerDescriptor: BandwidthHistory getReadHistory()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearReadHistory() {
      read_history = null;
      read_historyBuilder = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'write_history' field.
      * metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()
      * @return The value.
      */
    public trans.encoders.relay.WriteHistory getWriteHistory() {
      return write_history;
    }

    /**
      * Sets the value of the 'write_history' field.
      * metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()
      * @param value The value of 'write_history'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setWriteHistory(trans.encoders.relay.WriteHistory value) {
      validate(fields()[26], value);
      this.write_historyBuilder = null;
      this.write_history = value;
      fieldSetFlags()[26] = true;
      return this; 
    }

    /**
      * Checks whether the 'write_history' field has been set.
      * metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()
      * @return True if the 'write_history' field has been set, false otherwise.
      */
    public boolean hasWriteHistory() {
      return fieldSetFlags()[26];
    }

    /**
     * Gets the Builder instance for the 'write_history' field and creates one if it doesn't exist yet.
     * metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()
     * @return This builder.
     */
    public trans.encoders.relay.WriteHistory.Builder getWriteHistoryBuilder() {
      if (write_historyBuilder == null) {
        if (hasWriteHistory()) {
          setWriteHistoryBuilder(trans.encoders.relay.WriteHistory.newBuilder(write_history));
        } else {
          setWriteHistoryBuilder(trans.encoders.relay.WriteHistory.newBuilder());
        }
      }
      return write_historyBuilder;
    }

    /**
     * Sets the Builder instance for the 'write_history' field
     * metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()
     * @return This builder.
     */
    public trans.encoders.relay.Relay.Builder setWriteHistoryBuilder(trans.encoders.relay.WriteHistory.Builder value) {
      clearWriteHistory();
      write_historyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'write_history' field has an active Builder instance
     * metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()
     * @return True if the 'write_history' field has an active Builder instance
     */
    public boolean hasWriteHistoryBuilder() {
      return write_historyBuilder != null;
    }

    /**
      * Clears the value of the 'write_history' field.
      * metrics-lib/ServerDescriptor: BandwidthHistory getWriteHistory()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearWriteHistory() {
      write_history = null;
      write_historyBuilder = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventdns' field.
      * metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic()
      * @return The value.
      */
    public java.lang.Boolean getEventdns() {
      return eventdns;
    }

    /**
      * Sets the value of the 'eventdns' field.
      * metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic()
      * @param value The value of 'eventdns'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setEventdns(java.lang.Boolean value) {
      validate(fields()[27], value);
      this.eventdns = value;
      fieldSetFlags()[27] = true;
      return this; 
    }

    /**
      * Checks whether the 'eventdns' field has been set.
      * metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic()
      * @return True if the 'eventdns' field has been set, false otherwise.
      */
    public boolean hasEventdns() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'eventdns' field.
      * metrics-lib/ServerDescriptor: boolean getUsesEnhancedDnsLogic()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearEventdns() {
      eventdns = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'caches_extra_info' field.
      * metrics-lib/ServerDescriptor: boolean getCachesExtraInfo()
      * @return The value.
      */
    public java.lang.Boolean getCachesExtraInfo() {
      return caches_extra_info;
    }

    /**
      * Sets the value of the 'caches_extra_info' field.
      * metrics-lib/ServerDescriptor: boolean getCachesExtraInfo()
      * @param value The value of 'caches_extra_info'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setCachesExtraInfo(java.lang.Boolean value) {
      validate(fields()[28], value);
      this.caches_extra_info = value;
      fieldSetFlags()[28] = true;
      return this; 
    }

    /**
      * Checks whether the 'caches_extra_info' field has been set.
      * metrics-lib/ServerDescriptor: boolean getCachesExtraInfo()
      * @return True if the 'caches_extra_info' field has been set, false otherwise.
      */
    public boolean hasCachesExtraInfo() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'caches_extra_info' field.
      * metrics-lib/ServerDescriptor: boolean getCachesExtraInfo()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearCachesExtraInfo() {
      caches_extra_info = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'extra_info_digest' field.
      * metrics-lib/ServerDescriptor: String getExtraInfoDigest()
      * @return The value.
      */
    public java.lang.String getExtraInfoDigest() {
      return extra_info_digest;
    }

    /**
      * Sets the value of the 'extra_info_digest' field.
      * metrics-lib/ServerDescriptor: String getExtraInfoDigest()
      * @param value The value of 'extra_info_digest'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setExtraInfoDigest(java.lang.String value) {
      validate(fields()[29], value);
      this.extra_info_digest = value;
      fieldSetFlags()[29] = true;
      return this; 
    }

    /**
      * Checks whether the 'extra_info_digest' field has been set.
      * metrics-lib/ServerDescriptor: String getExtraInfoDigest()
      * @return True if the 'extra_info_digest' field has been set, false otherwise.
      */
    public boolean hasExtraInfoDigest() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'extra_info_digest' field.
      * metrics-lib/ServerDescriptor: String getExtraInfoDigest()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearExtraInfoDigest() {
      extra_info_digest = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'extra_info_digest_sha256' field.
      * metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256()
      * @return The value.
      */
    public java.lang.String getExtraInfoDigestSha256() {
      return extra_info_digest_sha256;
    }

    /**
      * Sets the value of the 'extra_info_digest_sha256' field.
      * metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256()
      * @param value The value of 'extra_info_digest_sha256'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setExtraInfoDigestSha256(java.lang.String value) {
      validate(fields()[30], value);
      this.extra_info_digest_sha256 = value;
      fieldSetFlags()[30] = true;
      return this; 
    }

    /**
      * Checks whether the 'extra_info_digest_sha256' field has been set.
      * metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256()
      * @return True if the 'extra_info_digest_sha256' field has been set, false otherwise.
      */
    public boolean hasExtraInfoDigestSha256() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'extra_info_digest_sha256' field.
      * metrics-lib/ServerDescriptor: String getExtraInfoDigestSha256()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearExtraInfoDigestSha256() {
      extra_info_digest_sha256 = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'hidden_service_dir' field.
      * metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions()
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getHiddenServiceDir() {
      return hidden_service_dir;
    }

    /**
      * Sets the value of the 'hidden_service_dir' field.
      * metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions()
      * @param value The value of 'hidden_service_dir'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setHiddenServiceDir(java.util.List<java.lang.Integer> value) {
      validate(fields()[31], value);
      this.hidden_service_dir = value;
      fieldSetFlags()[31] = true;
      return this; 
    }

    /**
      * Checks whether the 'hidden_service_dir' field has been set.
      * metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions()
      * @return True if the 'hidden_service_dir' field has been set, false otherwise.
      */
    public boolean hasHiddenServiceDir() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'hidden_service_dir' field.
      * metrics-lib/ServerDescriptor: List<Integer> getHiddenServiceDirVersions()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearHiddenServiceDir() {
      hidden_service_dir = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'link_protocol_versions' field.
      * metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions()
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getLinkProtocolVersions() {
      return link_protocol_versions;
    }

    /**
      * Sets the value of the 'link_protocol_versions' field.
      * metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions()
      * @param value The value of 'link_protocol_versions'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setLinkProtocolVersions(java.util.List<java.lang.Integer> value) {
      validate(fields()[32], value);
      this.link_protocol_versions = value;
      fieldSetFlags()[32] = true;
      return this; 
    }

    /**
      * Checks whether the 'link_protocol_versions' field has been set.
      * metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions()
      * @return True if the 'link_protocol_versions' field has been set, false otherwise.
      */
    public boolean hasLinkProtocolVersions() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'link_protocol_versions' field.
      * metrics-lib/ServerDescriptor: List<Integer> getLinkProtocolVersions()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearLinkProtocolVersions() {
      link_protocol_versions = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'circuit_protocol_versions' field.
      * metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions()
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getCircuitProtocolVersions() {
      return circuit_protocol_versions;
    }

    /**
      * Sets the value of the 'circuit_protocol_versions' field.
      * metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions()
      * @param value The value of 'circuit_protocol_versions'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setCircuitProtocolVersions(java.util.List<java.lang.Integer> value) {
      validate(fields()[33], value);
      this.circuit_protocol_versions = value;
      fieldSetFlags()[33] = true;
      return this; 
    }

    /**
      * Checks whether the 'circuit_protocol_versions' field has been set.
      * metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions()
      * @return True if the 'circuit_protocol_versions' field has been set, false otherwise.
      */
    public boolean hasCircuitProtocolVersions() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'circuit_protocol_versions' field.
      * metrics-lib/ServerDescriptor: List<Integer> getCircuitProtocolVersions()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearCircuitProtocolVersions() {
      circuit_protocol_versions = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'allow_single_hop_exits' field.
      * metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits()
      * @return The value.
      */
    public java.lang.Boolean getAllowSingleHopExits() {
      return allow_single_hop_exits;
    }

    /**
      * Sets the value of the 'allow_single_hop_exits' field.
      * metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits()
      * @param value The value of 'allow_single_hop_exits'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setAllowSingleHopExits(java.lang.Boolean value) {
      validate(fields()[34], value);
      this.allow_single_hop_exits = value;
      fieldSetFlags()[34] = true;
      return this; 
    }

    /**
      * Checks whether the 'allow_single_hop_exits' field has been set.
      * metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits()
      * @return True if the 'allow_single_hop_exits' field has been set, false otherwise.
      */
    public boolean hasAllowSingleHopExits() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'allow_single_hop_exits' field.
      * metrics-lib/ServerDescriptor: boolean getAllowSingleHopExits()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearAllowSingleHopExits() {
      allow_single_hop_exits = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'or_address' field.
      * metrics-lib/ServerDescriptor: List<String> getOrAddresses()
      * @return The value.
      */
    public java.util.List<trans.encoders.relay.OrAddress> getOrAddress() {
      return or_address;
    }

    /**
      * Sets the value of the 'or_address' field.
      * metrics-lib/ServerDescriptor: List<String> getOrAddresses()
      * @param value The value of 'or_address'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setOrAddress(java.util.List<trans.encoders.relay.OrAddress> value) {
      validate(fields()[35], value);
      this.or_address = value;
      fieldSetFlags()[35] = true;
      return this; 
    }

    /**
      * Checks whether the 'or_address' field has been set.
      * metrics-lib/ServerDescriptor: List<String> getOrAddresses()
      * @return True if the 'or_address' field has been set, false otherwise.
      */
    public boolean hasOrAddress() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'or_address' field.
      * metrics-lib/ServerDescriptor: List<String> getOrAddresses()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearOrAddress() {
      or_address = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'tunneled_dir_server' field.
      * metrics-lib/ServerDescriptor: boolean getTunnelledDirServer()
      * @return The value.
      */
    public java.lang.Boolean getTunneledDirServer() {
      return tunneled_dir_server;
    }

    /**
      * Sets the value of the 'tunneled_dir_server' field.
      * metrics-lib/ServerDescriptor: boolean getTunnelledDirServer()
      * @param value The value of 'tunneled_dir_server'.
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder setTunneledDirServer(java.lang.Boolean value) {
      validate(fields()[36], value);
      this.tunneled_dir_server = value;
      fieldSetFlags()[36] = true;
      return this; 
    }

    /**
      * Checks whether the 'tunneled_dir_server' field has been set.
      * metrics-lib/ServerDescriptor: boolean getTunnelledDirServer()
      * @return True if the 'tunneled_dir_server' field has been set, false otherwise.
      */
    public boolean hasTunneledDirServer() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'tunneled_dir_server' field.
      * metrics-lib/ServerDescriptor: boolean getTunnelledDirServer()
      * @return This builder.
      */
    public trans.encoders.relay.Relay.Builder clearTunneledDirServer() {
      tunneled_dir_server = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    @Override
    public Relay build() {
      try {
        Relay record = new Relay();
        record.descriptor_type = fieldSetFlags()[0] ? this.descriptor_type : (java.lang.String) defaultValue(fields()[0]);
        record.src_date = fieldSetFlags()[1] ? this.src_date : (java.lang.Long) defaultValue(fields()[1]);
        record.server_descriptor_digest = fieldSetFlags()[2] ? this.server_descriptor_digest : (java.lang.String) defaultValue(fields()[2]);
        record.server_descriptor_sha256 = fieldSetFlags()[3] ? this.server_descriptor_sha256 : (java.lang.String) defaultValue(fields()[3]);
        if (routerBuilder != null) {
          record.router = this.routerBuilder.build();
        } else {
          record.router = fieldSetFlags()[4] ? this.router : (trans.encoders.relay.Router) defaultValue(fields()[4]);
        }
        record.identity_ed25519 = fieldSetFlags()[5] ? this.identity_ed25519 : (java.lang.Boolean) defaultValue(fields()[5]);
        record.master_key_ed25519 = fieldSetFlags()[6] ? this.master_key_ed25519 : (java.lang.String) defaultValue(fields()[6]);
        if (bandwidthBuilder != null) {
          record.bandwidth = this.bandwidthBuilder.build();
        } else {
          record.bandwidth = fieldSetFlags()[7] ? this.bandwidth : (trans.encoders.relay.Bandwidth) defaultValue(fields()[7]);
        }
        record.platform = fieldSetFlags()[8] ? this.platform : (java.lang.String) defaultValue(fields()[8]);
        record.published = fieldSetFlags()[9] ? this.published : (java.lang.Long) defaultValue(fields()[9]);
        record.fingerprint = fieldSetFlags()[10] ? this.fingerprint : (java.lang.String) defaultValue(fields()[10]);
        record.hibernating = fieldSetFlags()[11] ? this.hibernating : (java.lang.Boolean) defaultValue(fields()[11]);
        record.uptime = fieldSetFlags()[12] ? this.uptime : (java.lang.Long) defaultValue(fields()[12]);
        record.onion_key = fieldSetFlags()[13] ? this.onion_key : (java.lang.Boolean) defaultValue(fields()[13]);
        record.onion_key_crosscert = fieldSetFlags()[14] ? this.onion_key_crosscert : (java.lang.Boolean) defaultValue(fields()[14]);
        record.ntor_onion_key = fieldSetFlags()[15] ? this.ntor_onion_key : (java.lang.Boolean) defaultValue(fields()[15]);
        record.ntor_onion_key_crosscert = fieldSetFlags()[16] ? this.ntor_onion_key_crosscert : (java.lang.Boolean) defaultValue(fields()[16]);
        record.signing_key = fieldSetFlags()[17] ? this.signing_key : (java.lang.Boolean) defaultValue(fields()[17]);
        record.exit_policy = fieldSetFlags()[18] ? this.exit_policy : (java.util.List<java.lang.String>) defaultValue(fields()[18]);
        record.ipv6_policy = fieldSetFlags()[19] ? this.ipv6_policy : (java.lang.String) defaultValue(fields()[19]);
        record.ipv6_portlist = fieldSetFlags()[20] ? this.ipv6_portlist : (java.lang.String) defaultValue(fields()[20]);
        record.router_sig_ed25519 = fieldSetFlags()[21] ? this.router_sig_ed25519 : (java.lang.Boolean) defaultValue(fields()[21]);
        record.router_signature = fieldSetFlags()[22] ? this.router_signature : (java.lang.Boolean) defaultValue(fields()[22]);
        record.contact = fieldSetFlags()[23] ? this.contact : (java.lang.String) defaultValue(fields()[23]);
        record.family = fieldSetFlags()[24] ? this.family : (java.util.List<java.lang.String>) defaultValue(fields()[24]);
        if (read_historyBuilder != null) {
          record.read_history = this.read_historyBuilder.build();
        } else {
          record.read_history = fieldSetFlags()[25] ? this.read_history : (trans.encoders.relay.ReadHistory) defaultValue(fields()[25]);
        }
        if (write_historyBuilder != null) {
          record.write_history = this.write_historyBuilder.build();
        } else {
          record.write_history = fieldSetFlags()[26] ? this.write_history : (trans.encoders.relay.WriteHistory) defaultValue(fields()[26]);
        }
        record.eventdns = fieldSetFlags()[27] ? this.eventdns : (java.lang.Boolean) defaultValue(fields()[27]);
        record.caches_extra_info = fieldSetFlags()[28] ? this.caches_extra_info : (java.lang.Boolean) defaultValue(fields()[28]);
        record.extra_info_digest = fieldSetFlags()[29] ? this.extra_info_digest : (java.lang.String) defaultValue(fields()[29]);
        record.extra_info_digest_sha256 = fieldSetFlags()[30] ? this.extra_info_digest_sha256 : (java.lang.String) defaultValue(fields()[30]);
        record.hidden_service_dir = fieldSetFlags()[31] ? this.hidden_service_dir : (java.util.List<java.lang.Integer>) defaultValue(fields()[31]);
        record.link_protocol_versions = fieldSetFlags()[32] ? this.link_protocol_versions : (java.util.List<java.lang.Integer>) defaultValue(fields()[32]);
        record.circuit_protocol_versions = fieldSetFlags()[33] ? this.circuit_protocol_versions : (java.util.List<java.lang.Integer>) defaultValue(fields()[33]);
        record.allow_single_hop_exits = fieldSetFlags()[34] ? this.allow_single_hop_exits : (java.lang.Boolean) defaultValue(fields()[34]);
        record.or_address = fieldSetFlags()[35] ? this.or_address : (java.util.List<trans.encoders.relay.OrAddress>) defaultValue(fields()[35]);
        record.tunneled_dir_server = fieldSetFlags()[36] ? this.tunneled_dir_server : (java.lang.Boolean) defaultValue(fields()[36]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
