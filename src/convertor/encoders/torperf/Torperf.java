/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package convertor.encoders.torperf;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Torperf extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3535635639082686588L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Torperf\",\"namespace\":\"convertor.encoders.torperf\",\"fields\":[{\"name\":\"descriptor_type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"torperf 1.0\"},{\"name\":\"src_date\",\"type\":[\"null\",\"long\"],\"doc\":\"file creation date, in milliseconds, of the data source to this conversion\"},{\"name\":\"source\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metrics-lib/TorperfResult: String getSource()\"},{\"name\":\"filesize\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/TorperfResult: int getFileSize()\"},{\"name\":\"start\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getStartMillis()\"},{\"name\":\"socket\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getSocketMillis()\"},{\"name\":\"connect\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getConnectMillis()\"},{\"name\":\"negotiate\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getNegotiateMillis()\"},{\"name\":\"request\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getRequestMillis()\"},{\"name\":\"response\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getResponseMillis()\"},{\"name\":\"datarequest\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getDataRequestMillis()\"},{\"name\":\"dataresponse\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getDataResponseMillis()\"},{\"name\":\"datacomplete\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getDataCompleteMillis()\"},{\"name\":\"writebytes\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/TorperfResult: int getWriteBytes()\"},{\"name\":\"readbytes\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/TorperfResult: int getReadBytes()\"},{\"name\":\"didtimeout\",\"type\":[\"null\",\"boolean\"],\"doc\":\"metrics-lib/TorperfResult: Boolean didTimeout()\"},{\"name\":\"dataperc10\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(10)\"},{\"name\":\"dataperc20\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(20)\"},{\"name\":\"dataperc30\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(30)\"},{\"name\":\"dataperc40\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(40)\"},{\"name\":\"dataperc50\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(50)\"},{\"name\":\"dataperc60\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(60)\"},{\"name\":\"dataperc70\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(70)\"},{\"name\":\"dataperc80\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(80)\"},{\"name\":\"dataperc90\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(90)\"},{\"name\":\"launch\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getLaunchMillis()()\"},{\"name\":\"used_at\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getUsedAtMillis()\"},{\"name\":\"path\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"doc\":\"metrics-lib/TorperfResult: List<String> getPath()\"},{\"name\":\"buildtimes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"long\"}],\"doc\":\"metrics-lib/TorperfResult: List<Long> getBuildTimes()\"},{\"name\":\"timeout\",\"type\":[\"null\",\"long\"],\"doc\":\"metrics-lib/TorperfResult: long getTimeout()\"},{\"name\":\"quantile\",\"type\":[\"null\",\"double\"],\"doc\":\"metrics-lib/TorperfResult: double getQuantile()\"},{\"name\":\"circ_id\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/TorperfResult: int getCircId()\"},{\"name\":\"used_by\",\"type\":[\"null\",\"int\"],\"doc\":\"metrics-lib/TorperfResult: int getUsedBy()\"}],\"aliases\":[\"torperfResult\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String descriptor_type;
  /** file creation date, in milliseconds, of the data source to this conversion */
  @Deprecated public java.lang.Long src_date;
  /** metrics-lib/TorperfResult: String getSource() */
  @Deprecated public java.lang.String source;
  /** metrics-lib/TorperfResult: int getFileSize() */
  @Deprecated public java.lang.Integer filesize;
  /** metrics-lib/TorperfResult: long getStartMillis() */
  @Deprecated public java.lang.Long start;
  /** metrics-lib/TorperfResult: long getSocketMillis() */
  @Deprecated public java.lang.Long socket;
  /** metrics-lib/TorperfResult: long getConnectMillis() */
  @Deprecated public java.lang.Long connect;
  /** metrics-lib/TorperfResult: long getNegotiateMillis() */
  @Deprecated public java.lang.Long negotiate;
  /** metrics-lib/TorperfResult: long getRequestMillis() */
  @Deprecated public java.lang.Long request;
  /** metrics-lib/TorperfResult: long getResponseMillis() */
  @Deprecated public java.lang.Long response;
  /** metrics-lib/TorperfResult: long getDataRequestMillis() */
  @Deprecated public java.lang.Long datarequest;
  /** metrics-lib/TorperfResult: long getDataResponseMillis() */
  @Deprecated public java.lang.Long dataresponse;
  /** metrics-lib/TorperfResult: long getDataCompleteMillis() */
  @Deprecated public java.lang.Long datacomplete;
  /** metrics-lib/TorperfResult: int getWriteBytes() */
  @Deprecated public java.lang.Integer writebytes;
  /** metrics-lib/TorperfResult: int getReadBytes() */
  @Deprecated public java.lang.Integer readbytes;
  /** metrics-lib/TorperfResult: Boolean didTimeout() */
  @Deprecated public java.lang.Boolean didtimeout;
  /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(10) */
  @Deprecated public java.lang.Long dataperc10;
  /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(20) */
  @Deprecated public java.lang.Long dataperc20;
  /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(30) */
  @Deprecated public java.lang.Long dataperc30;
  /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(40) */
  @Deprecated public java.lang.Long dataperc40;
  /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(50) */
  @Deprecated public java.lang.Long dataperc50;
  /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(60) */
  @Deprecated public java.lang.Long dataperc60;
  /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(70) */
  @Deprecated public java.lang.Long dataperc70;
  /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(80) */
  @Deprecated public java.lang.Long dataperc80;
  /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(90) */
  @Deprecated public java.lang.Long dataperc90;
  /** metrics-lib/TorperfResult: long getLaunchMillis()() */
  @Deprecated public java.lang.Long launch;
  /** metrics-lib/TorperfResult: long getUsedAtMillis() */
  @Deprecated public java.lang.Long used_at;
  /** metrics-lib/TorperfResult: List<String> getPath() */
  @Deprecated public java.util.List<java.lang.String> path;
  /** metrics-lib/TorperfResult: List<Long> getBuildTimes() */
  @Deprecated public java.util.List<java.lang.Long> buildtimes;
  /** metrics-lib/TorperfResult: long getTimeout() */
  @Deprecated public java.lang.Long timeout;
  /** metrics-lib/TorperfResult: double getQuantile() */
  @Deprecated public java.lang.Double quantile;
  /** metrics-lib/TorperfResult: int getCircId() */
  @Deprecated public java.lang.Integer circ_id;
  /** metrics-lib/TorperfResult: int getUsedBy() */
  @Deprecated public java.lang.Integer used_by;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Torperf() {}

  /**
   * All-args constructor.
   * @param src_date file creation date, in milliseconds, of the data source to this conversion
   * @param source metrics-lib/TorperfResult: String getSource()
   * @param filesize metrics-lib/TorperfResult: int getFileSize()
   * @param start metrics-lib/TorperfResult: long getStartMillis()
   * @param socket metrics-lib/TorperfResult: long getSocketMillis()
   * @param connect metrics-lib/TorperfResult: long getConnectMillis()
   * @param negotiate metrics-lib/TorperfResult: long getNegotiateMillis()
   * @param request metrics-lib/TorperfResult: long getRequestMillis()
   * @param response metrics-lib/TorperfResult: long getResponseMillis()
   * @param datarequest metrics-lib/TorperfResult: long getDataRequestMillis()
   * @param dataresponse metrics-lib/TorperfResult: long getDataResponseMillis()
   * @param datacomplete metrics-lib/TorperfResult: long getDataCompleteMillis()
   * @param writebytes metrics-lib/TorperfResult: int getWriteBytes()
   * @param readbytes metrics-lib/TorperfResult: int getReadBytes()
   * @param didtimeout metrics-lib/TorperfResult: Boolean didTimeout()
   * @param dataperc10 metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(10)
   * @param dataperc20 metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(20)
   * @param dataperc30 metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(30)
   * @param dataperc40 metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(40)
   * @param dataperc50 metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(50)
   * @param dataperc60 metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(60)
   * @param dataperc70 metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(70)
   * @param dataperc80 metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(80)
   * @param dataperc90 metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(90)
   * @param launch metrics-lib/TorperfResult: long getLaunchMillis()()
   * @param used_at metrics-lib/TorperfResult: long getUsedAtMillis()
   * @param path metrics-lib/TorperfResult: List<String> getPath()
   * @param buildtimes metrics-lib/TorperfResult: List<Long> getBuildTimes()
   * @param timeout metrics-lib/TorperfResult: long getTimeout()
   * @param quantile metrics-lib/TorperfResult: double getQuantile()
   * @param circ_id metrics-lib/TorperfResult: int getCircId()
   * @param used_by metrics-lib/TorperfResult: int getUsedBy()
   */
  public Torperf(java.lang.String descriptor_type, java.lang.Long src_date, java.lang.String source, java.lang.Integer filesize, java.lang.Long start, java.lang.Long socket, java.lang.Long connect, java.lang.Long negotiate, java.lang.Long request, java.lang.Long response, java.lang.Long datarequest, java.lang.Long dataresponse, java.lang.Long datacomplete, java.lang.Integer writebytes, java.lang.Integer readbytes, java.lang.Boolean didtimeout, java.lang.Long dataperc10, java.lang.Long dataperc20, java.lang.Long dataperc30, java.lang.Long dataperc40, java.lang.Long dataperc50, java.lang.Long dataperc60, java.lang.Long dataperc70, java.lang.Long dataperc80, java.lang.Long dataperc90, java.lang.Long launch, java.lang.Long used_at, java.util.List<java.lang.String> path, java.util.List<java.lang.Long> buildtimes, java.lang.Long timeout, java.lang.Double quantile, java.lang.Integer circ_id, java.lang.Integer used_by) {
    this.descriptor_type = descriptor_type;
    this.src_date = src_date;
    this.source = source;
    this.filesize = filesize;
    this.start = start;
    this.socket = socket;
    this.connect = connect;
    this.negotiate = negotiate;
    this.request = request;
    this.response = response;
    this.datarequest = datarequest;
    this.dataresponse = dataresponse;
    this.datacomplete = datacomplete;
    this.writebytes = writebytes;
    this.readbytes = readbytes;
    this.didtimeout = didtimeout;
    this.dataperc10 = dataperc10;
    this.dataperc20 = dataperc20;
    this.dataperc30 = dataperc30;
    this.dataperc40 = dataperc40;
    this.dataperc50 = dataperc50;
    this.dataperc60 = dataperc60;
    this.dataperc70 = dataperc70;
    this.dataperc80 = dataperc80;
    this.dataperc90 = dataperc90;
    this.launch = launch;
    this.used_at = used_at;
    this.path = path;
    this.buildtimes = buildtimes;
    this.timeout = timeout;
    this.quantile = quantile;
    this.circ_id = circ_id;
    this.used_by = used_by;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return descriptor_type;
    case 1: return src_date;
    case 2: return source;
    case 3: return filesize;
    case 4: return start;
    case 5: return socket;
    case 6: return connect;
    case 7: return negotiate;
    case 8: return request;
    case 9: return response;
    case 10: return datarequest;
    case 11: return dataresponse;
    case 12: return datacomplete;
    case 13: return writebytes;
    case 14: return readbytes;
    case 15: return didtimeout;
    case 16: return dataperc10;
    case 17: return dataperc20;
    case 18: return dataperc30;
    case 19: return dataperc40;
    case 20: return dataperc50;
    case 21: return dataperc60;
    case 22: return dataperc70;
    case 23: return dataperc80;
    case 24: return dataperc90;
    case 25: return launch;
    case 26: return used_at;
    case 27: return path;
    case 28: return buildtimes;
    case 29: return timeout;
    case 30: return quantile;
    case 31: return circ_id;
    case 32: return used_by;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: descriptor_type = (java.lang.String)value$; break;
    case 1: src_date = (java.lang.Long)value$; break;
    case 2: source = (java.lang.String)value$; break;
    case 3: filesize = (java.lang.Integer)value$; break;
    case 4: start = (java.lang.Long)value$; break;
    case 5: socket = (java.lang.Long)value$; break;
    case 6: connect = (java.lang.Long)value$; break;
    case 7: negotiate = (java.lang.Long)value$; break;
    case 8: request = (java.lang.Long)value$; break;
    case 9: response = (java.lang.Long)value$; break;
    case 10: datarequest = (java.lang.Long)value$; break;
    case 11: dataresponse = (java.lang.Long)value$; break;
    case 12: datacomplete = (java.lang.Long)value$; break;
    case 13: writebytes = (java.lang.Integer)value$; break;
    case 14: readbytes = (java.lang.Integer)value$; break;
    case 15: didtimeout = (java.lang.Boolean)value$; break;
    case 16: dataperc10 = (java.lang.Long)value$; break;
    case 17: dataperc20 = (java.lang.Long)value$; break;
    case 18: dataperc30 = (java.lang.Long)value$; break;
    case 19: dataperc40 = (java.lang.Long)value$; break;
    case 20: dataperc50 = (java.lang.Long)value$; break;
    case 21: dataperc60 = (java.lang.Long)value$; break;
    case 22: dataperc70 = (java.lang.Long)value$; break;
    case 23: dataperc80 = (java.lang.Long)value$; break;
    case 24: dataperc90 = (java.lang.Long)value$; break;
    case 25: launch = (java.lang.Long)value$; break;
    case 26: used_at = (java.lang.Long)value$; break;
    case 27: path = (java.util.List<java.lang.String>)value$; break;
    case 28: buildtimes = (java.util.List<java.lang.Long>)value$; break;
    case 29: timeout = (java.lang.Long)value$; break;
    case 30: quantile = (java.lang.Double)value$; break;
    case 31: circ_id = (java.lang.Integer)value$; break;
    case 32: used_by = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'descriptor_type' field.
   */
  public java.lang.String getDescriptorType() {
    return descriptor_type;
  }

  /**
   * Sets the value of the 'descriptor_type' field.
   * @param value the value to set.
   */
  public void setDescriptorType(java.lang.String value) {
    this.descriptor_type = value;
  }

  /**
   * Gets the value of the 'src_date' field.
   * @return file creation date, in milliseconds, of the data source to this conversion
   */
  public java.lang.Long getSrcDate() {
    return src_date;
  }

  /**
   * Sets the value of the 'src_date' field.
   * file creation date, in milliseconds, of the data source to this conversion
   * @param value the value to set.
   */
  public void setSrcDate(java.lang.Long value) {
    this.src_date = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return metrics-lib/TorperfResult: String getSource()
   */
  public java.lang.String getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * metrics-lib/TorperfResult: String getSource()
   * @param value the value to set.
   */
  public void setSource(java.lang.String value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'filesize' field.
   * @return metrics-lib/TorperfResult: int getFileSize()
   */
  public java.lang.Integer getFilesize() {
    return filesize;
  }

  /**
   * Sets the value of the 'filesize' field.
   * metrics-lib/TorperfResult: int getFileSize()
   * @param value the value to set.
   */
  public void setFilesize(java.lang.Integer value) {
    this.filesize = value;
  }

  /**
   * Gets the value of the 'start' field.
   * @return metrics-lib/TorperfResult: long getStartMillis()
   */
  public java.lang.Long getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * metrics-lib/TorperfResult: long getStartMillis()
   * @param value the value to set.
   */
  public void setStart(java.lang.Long value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'socket' field.
   * @return metrics-lib/TorperfResult: long getSocketMillis()
   */
  public java.lang.Long getSocket() {
    return socket;
  }

  /**
   * Sets the value of the 'socket' field.
   * metrics-lib/TorperfResult: long getSocketMillis()
   * @param value the value to set.
   */
  public void setSocket(java.lang.Long value) {
    this.socket = value;
  }

  /**
   * Gets the value of the 'connect' field.
   * @return metrics-lib/TorperfResult: long getConnectMillis()
   */
  public java.lang.Long getConnect() {
    return connect;
  }

  /**
   * Sets the value of the 'connect' field.
   * metrics-lib/TorperfResult: long getConnectMillis()
   * @param value the value to set.
   */
  public void setConnect(java.lang.Long value) {
    this.connect = value;
  }

  /**
   * Gets the value of the 'negotiate' field.
   * @return metrics-lib/TorperfResult: long getNegotiateMillis()
   */
  public java.lang.Long getNegotiate() {
    return negotiate;
  }

  /**
   * Sets the value of the 'negotiate' field.
   * metrics-lib/TorperfResult: long getNegotiateMillis()
   * @param value the value to set.
   */
  public void setNegotiate(java.lang.Long value) {
    this.negotiate = value;
  }

  /**
   * Gets the value of the 'request' field.
   * @return metrics-lib/TorperfResult: long getRequestMillis()
   */
  public java.lang.Long getRequest() {
    return request;
  }

  /**
   * Sets the value of the 'request' field.
   * metrics-lib/TorperfResult: long getRequestMillis()
   * @param value the value to set.
   */
  public void setRequest(java.lang.Long value) {
    this.request = value;
  }

  /**
   * Gets the value of the 'response' field.
   * @return metrics-lib/TorperfResult: long getResponseMillis()
   */
  public java.lang.Long getResponse() {
    return response;
  }

  /**
   * Sets the value of the 'response' field.
   * metrics-lib/TorperfResult: long getResponseMillis()
   * @param value the value to set.
   */
  public void setResponse(java.lang.Long value) {
    this.response = value;
  }

  /**
   * Gets the value of the 'datarequest' field.
   * @return metrics-lib/TorperfResult: long getDataRequestMillis()
   */
  public java.lang.Long getDatarequest() {
    return datarequest;
  }

  /**
   * Sets the value of the 'datarequest' field.
   * metrics-lib/TorperfResult: long getDataRequestMillis()
   * @param value the value to set.
   */
  public void setDatarequest(java.lang.Long value) {
    this.datarequest = value;
  }

  /**
   * Gets the value of the 'dataresponse' field.
   * @return metrics-lib/TorperfResult: long getDataResponseMillis()
   */
  public java.lang.Long getDataresponse() {
    return dataresponse;
  }

  /**
   * Sets the value of the 'dataresponse' field.
   * metrics-lib/TorperfResult: long getDataResponseMillis()
   * @param value the value to set.
   */
  public void setDataresponse(java.lang.Long value) {
    this.dataresponse = value;
  }

  /**
   * Gets the value of the 'datacomplete' field.
   * @return metrics-lib/TorperfResult: long getDataCompleteMillis()
   */
  public java.lang.Long getDatacomplete() {
    return datacomplete;
  }

  /**
   * Sets the value of the 'datacomplete' field.
   * metrics-lib/TorperfResult: long getDataCompleteMillis()
   * @param value the value to set.
   */
  public void setDatacomplete(java.lang.Long value) {
    this.datacomplete = value;
  }

  /**
   * Gets the value of the 'writebytes' field.
   * @return metrics-lib/TorperfResult: int getWriteBytes()
   */
  public java.lang.Integer getWritebytes() {
    return writebytes;
  }

  /**
   * Sets the value of the 'writebytes' field.
   * metrics-lib/TorperfResult: int getWriteBytes()
   * @param value the value to set.
   */
  public void setWritebytes(java.lang.Integer value) {
    this.writebytes = value;
  }

  /**
   * Gets the value of the 'readbytes' field.
   * @return metrics-lib/TorperfResult: int getReadBytes()
   */
  public java.lang.Integer getReadbytes() {
    return readbytes;
  }

  /**
   * Sets the value of the 'readbytes' field.
   * metrics-lib/TorperfResult: int getReadBytes()
   * @param value the value to set.
   */
  public void setReadbytes(java.lang.Integer value) {
    this.readbytes = value;
  }

  /**
   * Gets the value of the 'didtimeout' field.
   * @return metrics-lib/TorperfResult: Boolean didTimeout()
   */
  public java.lang.Boolean getDidtimeout() {
    return didtimeout;
  }

  /**
   * Sets the value of the 'didtimeout' field.
   * metrics-lib/TorperfResult: Boolean didTimeout()
   * @param value the value to set.
   */
  public void setDidtimeout(java.lang.Boolean value) {
    this.didtimeout = value;
  }

  /**
   * Gets the value of the 'dataperc10' field.
   * @return metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(10)
   */
  public java.lang.Long getDataperc10() {
    return dataperc10;
  }

  /**
   * Sets the value of the 'dataperc10' field.
   * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(10)
   * @param value the value to set.
   */
  public void setDataperc10(java.lang.Long value) {
    this.dataperc10 = value;
  }

  /**
   * Gets the value of the 'dataperc20' field.
   * @return metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(20)
   */
  public java.lang.Long getDataperc20() {
    return dataperc20;
  }

  /**
   * Sets the value of the 'dataperc20' field.
   * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(20)
   * @param value the value to set.
   */
  public void setDataperc20(java.lang.Long value) {
    this.dataperc20 = value;
  }

  /**
   * Gets the value of the 'dataperc30' field.
   * @return metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(30)
   */
  public java.lang.Long getDataperc30() {
    return dataperc30;
  }

  /**
   * Sets the value of the 'dataperc30' field.
   * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(30)
   * @param value the value to set.
   */
  public void setDataperc30(java.lang.Long value) {
    this.dataperc30 = value;
  }

  /**
   * Gets the value of the 'dataperc40' field.
   * @return metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(40)
   */
  public java.lang.Long getDataperc40() {
    return dataperc40;
  }

  /**
   * Sets the value of the 'dataperc40' field.
   * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(40)
   * @param value the value to set.
   */
  public void setDataperc40(java.lang.Long value) {
    this.dataperc40 = value;
  }

  /**
   * Gets the value of the 'dataperc50' field.
   * @return metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(50)
   */
  public java.lang.Long getDataperc50() {
    return dataperc50;
  }

  /**
   * Sets the value of the 'dataperc50' field.
   * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(50)
   * @param value the value to set.
   */
  public void setDataperc50(java.lang.Long value) {
    this.dataperc50 = value;
  }

  /**
   * Gets the value of the 'dataperc60' field.
   * @return metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(60)
   */
  public java.lang.Long getDataperc60() {
    return dataperc60;
  }

  /**
   * Sets the value of the 'dataperc60' field.
   * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(60)
   * @param value the value to set.
   */
  public void setDataperc60(java.lang.Long value) {
    this.dataperc60 = value;
  }

  /**
   * Gets the value of the 'dataperc70' field.
   * @return metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(70)
   */
  public java.lang.Long getDataperc70() {
    return dataperc70;
  }

  /**
   * Sets the value of the 'dataperc70' field.
   * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(70)
   * @param value the value to set.
   */
  public void setDataperc70(java.lang.Long value) {
    this.dataperc70 = value;
  }

  /**
   * Gets the value of the 'dataperc80' field.
   * @return metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(80)
   */
  public java.lang.Long getDataperc80() {
    return dataperc80;
  }

  /**
   * Sets the value of the 'dataperc80' field.
   * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(80)
   * @param value the value to set.
   */
  public void setDataperc80(java.lang.Long value) {
    this.dataperc80 = value;
  }

  /**
   * Gets the value of the 'dataperc90' field.
   * @return metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(90)
   */
  public java.lang.Long getDataperc90() {
    return dataperc90;
  }

  /**
   * Sets the value of the 'dataperc90' field.
   * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(90)
   * @param value the value to set.
   */
  public void setDataperc90(java.lang.Long value) {
    this.dataperc90 = value;
  }

  /**
   * Gets the value of the 'launch' field.
   * @return metrics-lib/TorperfResult: long getLaunchMillis()()
   */
  public java.lang.Long getLaunch() {
    return launch;
  }

  /**
   * Sets the value of the 'launch' field.
   * metrics-lib/TorperfResult: long getLaunchMillis()()
   * @param value the value to set.
   */
  public void setLaunch(java.lang.Long value) {
    this.launch = value;
  }

  /**
   * Gets the value of the 'used_at' field.
   * @return metrics-lib/TorperfResult: long getUsedAtMillis()
   */
  public java.lang.Long getUsedAt() {
    return used_at;
  }

  /**
   * Sets the value of the 'used_at' field.
   * metrics-lib/TorperfResult: long getUsedAtMillis()
   * @param value the value to set.
   */
  public void setUsedAt(java.lang.Long value) {
    this.used_at = value;
  }

  /**
   * Gets the value of the 'path' field.
   * @return metrics-lib/TorperfResult: List<String> getPath()
   */
  public java.util.List<java.lang.String> getPath() {
    return path;
  }

  /**
   * Sets the value of the 'path' field.
   * metrics-lib/TorperfResult: List<String> getPath()
   * @param value the value to set.
   */
  public void setPath(java.util.List<java.lang.String> value) {
    this.path = value;
  }

  /**
   * Gets the value of the 'buildtimes' field.
   * @return metrics-lib/TorperfResult: List<Long> getBuildTimes()
   */
  public java.util.List<java.lang.Long> getBuildtimes() {
    return buildtimes;
  }

  /**
   * Sets the value of the 'buildtimes' field.
   * metrics-lib/TorperfResult: List<Long> getBuildTimes()
   * @param value the value to set.
   */
  public void setBuildtimes(java.util.List<java.lang.Long> value) {
    this.buildtimes = value;
  }

  /**
   * Gets the value of the 'timeout' field.
   * @return metrics-lib/TorperfResult: long getTimeout()
   */
  public java.lang.Long getTimeout() {
    return timeout;
  }

  /**
   * Sets the value of the 'timeout' field.
   * metrics-lib/TorperfResult: long getTimeout()
   * @param value the value to set.
   */
  public void setTimeout(java.lang.Long value) {
    this.timeout = value;
  }

  /**
   * Gets the value of the 'quantile' field.
   * @return metrics-lib/TorperfResult: double getQuantile()
   */
  public java.lang.Double getQuantile() {
    return quantile;
  }

  /**
   * Sets the value of the 'quantile' field.
   * metrics-lib/TorperfResult: double getQuantile()
   * @param value the value to set.
   */
  public void setQuantile(java.lang.Double value) {
    this.quantile = value;
  }

  /**
   * Gets the value of the 'circ_id' field.
   * @return metrics-lib/TorperfResult: int getCircId()
   */
  public java.lang.Integer getCircId() {
    return circ_id;
  }

  /**
   * Sets the value of the 'circ_id' field.
   * metrics-lib/TorperfResult: int getCircId()
   * @param value the value to set.
   */
  public void setCircId(java.lang.Integer value) {
    this.circ_id = value;
  }

  /**
   * Gets the value of the 'used_by' field.
   * @return metrics-lib/TorperfResult: int getUsedBy()
   */
  public java.lang.Integer getUsedBy() {
    return used_by;
  }

  /**
   * Sets the value of the 'used_by' field.
   * metrics-lib/TorperfResult: int getUsedBy()
   * @param value the value to set.
   */
  public void setUsedBy(java.lang.Integer value) {
    this.used_by = value;
  }

  /**
   * Creates a new Torperf RecordBuilder.
   * @return A new Torperf RecordBuilder
   */
  public static convertor.encoders.torperf.Torperf.Builder newBuilder() {
    return new convertor.encoders.torperf.Torperf.Builder();
  }
  
  /**
   * Creates a new Torperf RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Torperf RecordBuilder
   */
  public static convertor.encoders.torperf.Torperf.Builder newBuilder(convertor.encoders.torperf.Torperf.Builder other) {
    return new convertor.encoders.torperf.Torperf.Builder(other);
  }
  
  /**
   * Creates a new Torperf RecordBuilder by copying an existing Torperf instance.
   * @param other The existing instance to copy.
   * @return A new Torperf RecordBuilder
   */
  public static convertor.encoders.torperf.Torperf.Builder newBuilder(convertor.encoders.torperf.Torperf other) {
    return new convertor.encoders.torperf.Torperf.Builder(other);
  }
  
  /**
   * RecordBuilder for Torperf instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Torperf>
    implements org.apache.avro.data.RecordBuilder<Torperf> {

    private java.lang.String descriptor_type;
    /** file creation date, in milliseconds, of the data source to this conversion */
    private java.lang.Long src_date;
    /** metrics-lib/TorperfResult: String getSource() */
    private java.lang.String source;
    /** metrics-lib/TorperfResult: int getFileSize() */
    private java.lang.Integer filesize;
    /** metrics-lib/TorperfResult: long getStartMillis() */
    private java.lang.Long start;
    /** metrics-lib/TorperfResult: long getSocketMillis() */
    private java.lang.Long socket;
    /** metrics-lib/TorperfResult: long getConnectMillis() */
    private java.lang.Long connect;
    /** metrics-lib/TorperfResult: long getNegotiateMillis() */
    private java.lang.Long negotiate;
    /** metrics-lib/TorperfResult: long getRequestMillis() */
    private java.lang.Long request;
    /** metrics-lib/TorperfResult: long getResponseMillis() */
    private java.lang.Long response;
    /** metrics-lib/TorperfResult: long getDataRequestMillis() */
    private java.lang.Long datarequest;
    /** metrics-lib/TorperfResult: long getDataResponseMillis() */
    private java.lang.Long dataresponse;
    /** metrics-lib/TorperfResult: long getDataCompleteMillis() */
    private java.lang.Long datacomplete;
    /** metrics-lib/TorperfResult: int getWriteBytes() */
    private java.lang.Integer writebytes;
    /** metrics-lib/TorperfResult: int getReadBytes() */
    private java.lang.Integer readbytes;
    /** metrics-lib/TorperfResult: Boolean didTimeout() */
    private java.lang.Boolean didtimeout;
    /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(10) */
    private java.lang.Long dataperc10;
    /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(20) */
    private java.lang.Long dataperc20;
    /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(30) */
    private java.lang.Long dataperc30;
    /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(40) */
    private java.lang.Long dataperc40;
    /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(50) */
    private java.lang.Long dataperc50;
    /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(60) */
    private java.lang.Long dataperc60;
    /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(70) */
    private java.lang.Long dataperc70;
    /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(80) */
    private java.lang.Long dataperc80;
    /** metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(90) */
    private java.lang.Long dataperc90;
    /** metrics-lib/TorperfResult: long getLaunchMillis()() */
    private java.lang.Long launch;
    /** metrics-lib/TorperfResult: long getUsedAtMillis() */
    private java.lang.Long used_at;
    /** metrics-lib/TorperfResult: List<String> getPath() */
    private java.util.List<java.lang.String> path;
    /** metrics-lib/TorperfResult: List<Long> getBuildTimes() */
    private java.util.List<java.lang.Long> buildtimes;
    /** metrics-lib/TorperfResult: long getTimeout() */
    private java.lang.Long timeout;
    /** metrics-lib/TorperfResult: double getQuantile() */
    private java.lang.Double quantile;
    /** metrics-lib/TorperfResult: int getCircId() */
    private java.lang.Integer circ_id;
    /** metrics-lib/TorperfResult: int getUsedBy() */
    private java.lang.Integer used_by;

    /** Creates a new Builder */
    private Builder() {
      super(convertor.encoders.torperf.Torperf.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(convertor.encoders.torperf.Torperf.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.src_date)) {
        this.src_date = data().deepCopy(fields()[1].schema(), other.src_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source)) {
        this.source = data().deepCopy(fields()[2].schema(), other.source);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.filesize)) {
        this.filesize = data().deepCopy(fields()[3].schema(), other.filesize);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.start)) {
        this.start = data().deepCopy(fields()[4].schema(), other.start);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.socket)) {
        this.socket = data().deepCopy(fields()[5].schema(), other.socket);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.connect)) {
        this.connect = data().deepCopy(fields()[6].schema(), other.connect);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.negotiate)) {
        this.negotiate = data().deepCopy(fields()[7].schema(), other.negotiate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.request)) {
        this.request = data().deepCopy(fields()[8].schema(), other.request);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.response)) {
        this.response = data().deepCopy(fields()[9].schema(), other.response);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.datarequest)) {
        this.datarequest = data().deepCopy(fields()[10].schema(), other.datarequest);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.dataresponse)) {
        this.dataresponse = data().deepCopy(fields()[11].schema(), other.dataresponse);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.datacomplete)) {
        this.datacomplete = data().deepCopy(fields()[12].schema(), other.datacomplete);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.writebytes)) {
        this.writebytes = data().deepCopy(fields()[13].schema(), other.writebytes);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.readbytes)) {
        this.readbytes = data().deepCopy(fields()[14].schema(), other.readbytes);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.didtimeout)) {
        this.didtimeout = data().deepCopy(fields()[15].schema(), other.didtimeout);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.dataperc10)) {
        this.dataperc10 = data().deepCopy(fields()[16].schema(), other.dataperc10);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.dataperc20)) {
        this.dataperc20 = data().deepCopy(fields()[17].schema(), other.dataperc20);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.dataperc30)) {
        this.dataperc30 = data().deepCopy(fields()[18].schema(), other.dataperc30);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.dataperc40)) {
        this.dataperc40 = data().deepCopy(fields()[19].schema(), other.dataperc40);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.dataperc50)) {
        this.dataperc50 = data().deepCopy(fields()[20].schema(), other.dataperc50);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.dataperc60)) {
        this.dataperc60 = data().deepCopy(fields()[21].schema(), other.dataperc60);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.dataperc70)) {
        this.dataperc70 = data().deepCopy(fields()[22].schema(), other.dataperc70);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.dataperc80)) {
        this.dataperc80 = data().deepCopy(fields()[23].schema(), other.dataperc80);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.dataperc90)) {
        this.dataperc90 = data().deepCopy(fields()[24].schema(), other.dataperc90);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.launch)) {
        this.launch = data().deepCopy(fields()[25].schema(), other.launch);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.used_at)) {
        this.used_at = data().deepCopy(fields()[26].schema(), other.used_at);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.path)) {
        this.path = data().deepCopy(fields()[27].schema(), other.path);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.buildtimes)) {
        this.buildtimes = data().deepCopy(fields()[28].schema(), other.buildtimes);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.timeout)) {
        this.timeout = data().deepCopy(fields()[29].schema(), other.timeout);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.quantile)) {
        this.quantile = data().deepCopy(fields()[30].schema(), other.quantile);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.circ_id)) {
        this.circ_id = data().deepCopy(fields()[31].schema(), other.circ_id);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.used_by)) {
        this.used_by = data().deepCopy(fields()[32].schema(), other.used_by);
        fieldSetFlags()[32] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing Torperf instance
     * @param other The existing instance to copy.
     */
    private Builder(convertor.encoders.torperf.Torperf other) {
            super(convertor.encoders.torperf.Torperf.SCHEMA$);
      if (isValidValue(fields()[0], other.descriptor_type)) {
        this.descriptor_type = data().deepCopy(fields()[0].schema(), other.descriptor_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.src_date)) {
        this.src_date = data().deepCopy(fields()[1].schema(), other.src_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source)) {
        this.source = data().deepCopy(fields()[2].schema(), other.source);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.filesize)) {
        this.filesize = data().deepCopy(fields()[3].schema(), other.filesize);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.start)) {
        this.start = data().deepCopy(fields()[4].schema(), other.start);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.socket)) {
        this.socket = data().deepCopy(fields()[5].schema(), other.socket);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.connect)) {
        this.connect = data().deepCopy(fields()[6].schema(), other.connect);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.negotiate)) {
        this.negotiate = data().deepCopy(fields()[7].schema(), other.negotiate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.request)) {
        this.request = data().deepCopy(fields()[8].schema(), other.request);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.response)) {
        this.response = data().deepCopy(fields()[9].schema(), other.response);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.datarequest)) {
        this.datarequest = data().deepCopy(fields()[10].schema(), other.datarequest);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.dataresponse)) {
        this.dataresponse = data().deepCopy(fields()[11].schema(), other.dataresponse);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.datacomplete)) {
        this.datacomplete = data().deepCopy(fields()[12].schema(), other.datacomplete);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.writebytes)) {
        this.writebytes = data().deepCopy(fields()[13].schema(), other.writebytes);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.readbytes)) {
        this.readbytes = data().deepCopy(fields()[14].schema(), other.readbytes);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.didtimeout)) {
        this.didtimeout = data().deepCopy(fields()[15].schema(), other.didtimeout);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.dataperc10)) {
        this.dataperc10 = data().deepCopy(fields()[16].schema(), other.dataperc10);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.dataperc20)) {
        this.dataperc20 = data().deepCopy(fields()[17].schema(), other.dataperc20);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.dataperc30)) {
        this.dataperc30 = data().deepCopy(fields()[18].schema(), other.dataperc30);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.dataperc40)) {
        this.dataperc40 = data().deepCopy(fields()[19].schema(), other.dataperc40);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.dataperc50)) {
        this.dataperc50 = data().deepCopy(fields()[20].schema(), other.dataperc50);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.dataperc60)) {
        this.dataperc60 = data().deepCopy(fields()[21].schema(), other.dataperc60);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.dataperc70)) {
        this.dataperc70 = data().deepCopy(fields()[22].schema(), other.dataperc70);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.dataperc80)) {
        this.dataperc80 = data().deepCopy(fields()[23].schema(), other.dataperc80);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.dataperc90)) {
        this.dataperc90 = data().deepCopy(fields()[24].schema(), other.dataperc90);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.launch)) {
        this.launch = data().deepCopy(fields()[25].schema(), other.launch);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.used_at)) {
        this.used_at = data().deepCopy(fields()[26].schema(), other.used_at);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.path)) {
        this.path = data().deepCopy(fields()[27].schema(), other.path);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.buildtimes)) {
        this.buildtimes = data().deepCopy(fields()[28].schema(), other.buildtimes);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.timeout)) {
        this.timeout = data().deepCopy(fields()[29].schema(), other.timeout);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.quantile)) {
        this.quantile = data().deepCopy(fields()[30].schema(), other.quantile);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.circ_id)) {
        this.circ_id = data().deepCopy(fields()[31].schema(), other.circ_id);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.used_by)) {
        this.used_by = data().deepCopy(fields()[32].schema(), other.used_by);
        fieldSetFlags()[32] = true;
      }
    }

    /**
      * Gets the value of the 'descriptor_type' field.
      * @return The value.
      */
    public java.lang.String getDescriptorType() {
      return descriptor_type;
    }

    /**
      * Sets the value of the 'descriptor_type' field.
      * @param value The value of 'descriptor_type'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDescriptorType(java.lang.String value) {
      validate(fields()[0], value);
      this.descriptor_type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'descriptor_type' field has been set.
      * @return True if the 'descriptor_type' field has been set, false otherwise.
      */
    public boolean hasDescriptorType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'descriptor_type' field.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDescriptorType() {
      descriptor_type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'src_date' field.
      * file creation date, in milliseconds, of the data source to this conversion
      * @return The value.
      */
    public java.lang.Long getSrcDate() {
      return src_date;
    }

    /**
      * Sets the value of the 'src_date' field.
      * file creation date, in milliseconds, of the data source to this conversion
      * @param value The value of 'src_date'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setSrcDate(java.lang.Long value) {
      validate(fields()[1], value);
      this.src_date = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'src_date' field has been set.
      * file creation date, in milliseconds, of the data source to this conversion
      * @return True if the 'src_date' field has been set, false otherwise.
      */
    public boolean hasSrcDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'src_date' field.
      * file creation date, in milliseconds, of the data source to this conversion
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearSrcDate() {
      src_date = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * metrics-lib/TorperfResult: String getSource()
      * @return The value.
      */
    public java.lang.String getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * metrics-lib/TorperfResult: String getSource()
      * @param value The value of 'source'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setSource(java.lang.String value) {
      validate(fields()[2], value);
      this.source = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'source' field has been set.
      * metrics-lib/TorperfResult: String getSource()
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'source' field.
      * metrics-lib/TorperfResult: String getSource()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearSource() {
      source = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'filesize' field.
      * metrics-lib/TorperfResult: int getFileSize()
      * @return The value.
      */
    public java.lang.Integer getFilesize() {
      return filesize;
    }

    /**
      * Sets the value of the 'filesize' field.
      * metrics-lib/TorperfResult: int getFileSize()
      * @param value The value of 'filesize'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setFilesize(java.lang.Integer value) {
      validate(fields()[3], value);
      this.filesize = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'filesize' field has been set.
      * metrics-lib/TorperfResult: int getFileSize()
      * @return True if the 'filesize' field has been set, false otherwise.
      */
    public boolean hasFilesize() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'filesize' field.
      * metrics-lib/TorperfResult: int getFileSize()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearFilesize() {
      filesize = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'start' field.
      * metrics-lib/TorperfResult: long getStartMillis()
      * @return The value.
      */
    public java.lang.Long getStart() {
      return start;
    }

    /**
      * Sets the value of the 'start' field.
      * metrics-lib/TorperfResult: long getStartMillis()
      * @param value The value of 'start'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setStart(java.lang.Long value) {
      validate(fields()[4], value);
      this.start = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'start' field has been set.
      * metrics-lib/TorperfResult: long getStartMillis()
      * @return True if the 'start' field has been set, false otherwise.
      */
    public boolean hasStart() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'start' field.
      * metrics-lib/TorperfResult: long getStartMillis()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearStart() {
      start = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'socket' field.
      * metrics-lib/TorperfResult: long getSocketMillis()
      * @return The value.
      */
    public java.lang.Long getSocket() {
      return socket;
    }

    /**
      * Sets the value of the 'socket' field.
      * metrics-lib/TorperfResult: long getSocketMillis()
      * @param value The value of 'socket'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setSocket(java.lang.Long value) {
      validate(fields()[5], value);
      this.socket = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'socket' field has been set.
      * metrics-lib/TorperfResult: long getSocketMillis()
      * @return True if the 'socket' field has been set, false otherwise.
      */
    public boolean hasSocket() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'socket' field.
      * metrics-lib/TorperfResult: long getSocketMillis()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearSocket() {
      socket = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'connect' field.
      * metrics-lib/TorperfResult: long getConnectMillis()
      * @return The value.
      */
    public java.lang.Long getConnect() {
      return connect;
    }

    /**
      * Sets the value of the 'connect' field.
      * metrics-lib/TorperfResult: long getConnectMillis()
      * @param value The value of 'connect'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setConnect(java.lang.Long value) {
      validate(fields()[6], value);
      this.connect = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'connect' field has been set.
      * metrics-lib/TorperfResult: long getConnectMillis()
      * @return True if the 'connect' field has been set, false otherwise.
      */
    public boolean hasConnect() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'connect' field.
      * metrics-lib/TorperfResult: long getConnectMillis()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearConnect() {
      connect = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'negotiate' field.
      * metrics-lib/TorperfResult: long getNegotiateMillis()
      * @return The value.
      */
    public java.lang.Long getNegotiate() {
      return negotiate;
    }

    /**
      * Sets the value of the 'negotiate' field.
      * metrics-lib/TorperfResult: long getNegotiateMillis()
      * @param value The value of 'negotiate'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setNegotiate(java.lang.Long value) {
      validate(fields()[7], value);
      this.negotiate = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'negotiate' field has been set.
      * metrics-lib/TorperfResult: long getNegotiateMillis()
      * @return True if the 'negotiate' field has been set, false otherwise.
      */
    public boolean hasNegotiate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'negotiate' field.
      * metrics-lib/TorperfResult: long getNegotiateMillis()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearNegotiate() {
      negotiate = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'request' field.
      * metrics-lib/TorperfResult: long getRequestMillis()
      * @return The value.
      */
    public java.lang.Long getRequest() {
      return request;
    }

    /**
      * Sets the value of the 'request' field.
      * metrics-lib/TorperfResult: long getRequestMillis()
      * @param value The value of 'request'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setRequest(java.lang.Long value) {
      validate(fields()[8], value);
      this.request = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'request' field has been set.
      * metrics-lib/TorperfResult: long getRequestMillis()
      * @return True if the 'request' field has been set, false otherwise.
      */
    public boolean hasRequest() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'request' field.
      * metrics-lib/TorperfResult: long getRequestMillis()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearRequest() {
      request = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'response' field.
      * metrics-lib/TorperfResult: long getResponseMillis()
      * @return The value.
      */
    public java.lang.Long getResponse() {
      return response;
    }

    /**
      * Sets the value of the 'response' field.
      * metrics-lib/TorperfResult: long getResponseMillis()
      * @param value The value of 'response'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setResponse(java.lang.Long value) {
      validate(fields()[9], value);
      this.response = value;
      fieldSetFlags()[9] = true;
      return this; 
    }

    /**
      * Checks whether the 'response' field has been set.
      * metrics-lib/TorperfResult: long getResponseMillis()
      * @return True if the 'response' field has been set, false otherwise.
      */
    public boolean hasResponse() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'response' field.
      * metrics-lib/TorperfResult: long getResponseMillis()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearResponse() {
      response = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'datarequest' field.
      * metrics-lib/TorperfResult: long getDataRequestMillis()
      * @return The value.
      */
    public java.lang.Long getDatarequest() {
      return datarequest;
    }

    /**
      * Sets the value of the 'datarequest' field.
      * metrics-lib/TorperfResult: long getDataRequestMillis()
      * @param value The value of 'datarequest'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDatarequest(java.lang.Long value) {
      validate(fields()[10], value);
      this.datarequest = value;
      fieldSetFlags()[10] = true;
      return this; 
    }

    /**
      * Checks whether the 'datarequest' field has been set.
      * metrics-lib/TorperfResult: long getDataRequestMillis()
      * @return True if the 'datarequest' field has been set, false otherwise.
      */
    public boolean hasDatarequest() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'datarequest' field.
      * metrics-lib/TorperfResult: long getDataRequestMillis()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDatarequest() {
      datarequest = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataresponse' field.
      * metrics-lib/TorperfResult: long getDataResponseMillis()
      * @return The value.
      */
    public java.lang.Long getDataresponse() {
      return dataresponse;
    }

    /**
      * Sets the value of the 'dataresponse' field.
      * metrics-lib/TorperfResult: long getDataResponseMillis()
      * @param value The value of 'dataresponse'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDataresponse(java.lang.Long value) {
      validate(fields()[11], value);
      this.dataresponse = value;
      fieldSetFlags()[11] = true;
      return this; 
    }

    /**
      * Checks whether the 'dataresponse' field has been set.
      * metrics-lib/TorperfResult: long getDataResponseMillis()
      * @return True if the 'dataresponse' field has been set, false otherwise.
      */
    public boolean hasDataresponse() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'dataresponse' field.
      * metrics-lib/TorperfResult: long getDataResponseMillis()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDataresponse() {
      dataresponse = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'datacomplete' field.
      * metrics-lib/TorperfResult: long getDataCompleteMillis()
      * @return The value.
      */
    public java.lang.Long getDatacomplete() {
      return datacomplete;
    }

    /**
      * Sets the value of the 'datacomplete' field.
      * metrics-lib/TorperfResult: long getDataCompleteMillis()
      * @param value The value of 'datacomplete'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDatacomplete(java.lang.Long value) {
      validate(fields()[12], value);
      this.datacomplete = value;
      fieldSetFlags()[12] = true;
      return this; 
    }

    /**
      * Checks whether the 'datacomplete' field has been set.
      * metrics-lib/TorperfResult: long getDataCompleteMillis()
      * @return True if the 'datacomplete' field has been set, false otherwise.
      */
    public boolean hasDatacomplete() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'datacomplete' field.
      * metrics-lib/TorperfResult: long getDataCompleteMillis()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDatacomplete() {
      datacomplete = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'writebytes' field.
      * metrics-lib/TorperfResult: int getWriteBytes()
      * @return The value.
      */
    public java.lang.Integer getWritebytes() {
      return writebytes;
    }

    /**
      * Sets the value of the 'writebytes' field.
      * metrics-lib/TorperfResult: int getWriteBytes()
      * @param value The value of 'writebytes'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setWritebytes(java.lang.Integer value) {
      validate(fields()[13], value);
      this.writebytes = value;
      fieldSetFlags()[13] = true;
      return this; 
    }

    /**
      * Checks whether the 'writebytes' field has been set.
      * metrics-lib/TorperfResult: int getWriteBytes()
      * @return True if the 'writebytes' field has been set, false otherwise.
      */
    public boolean hasWritebytes() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'writebytes' field.
      * metrics-lib/TorperfResult: int getWriteBytes()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearWritebytes() {
      writebytes = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'readbytes' field.
      * metrics-lib/TorperfResult: int getReadBytes()
      * @return The value.
      */
    public java.lang.Integer getReadbytes() {
      return readbytes;
    }

    /**
      * Sets the value of the 'readbytes' field.
      * metrics-lib/TorperfResult: int getReadBytes()
      * @param value The value of 'readbytes'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setReadbytes(java.lang.Integer value) {
      validate(fields()[14], value);
      this.readbytes = value;
      fieldSetFlags()[14] = true;
      return this; 
    }

    /**
      * Checks whether the 'readbytes' field has been set.
      * metrics-lib/TorperfResult: int getReadBytes()
      * @return True if the 'readbytes' field has been set, false otherwise.
      */
    public boolean hasReadbytes() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'readbytes' field.
      * metrics-lib/TorperfResult: int getReadBytes()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearReadbytes() {
      readbytes = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'didtimeout' field.
      * metrics-lib/TorperfResult: Boolean didTimeout()
      * @return The value.
      */
    public java.lang.Boolean getDidtimeout() {
      return didtimeout;
    }

    /**
      * Sets the value of the 'didtimeout' field.
      * metrics-lib/TorperfResult: Boolean didTimeout()
      * @param value The value of 'didtimeout'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDidtimeout(java.lang.Boolean value) {
      validate(fields()[15], value);
      this.didtimeout = value;
      fieldSetFlags()[15] = true;
      return this; 
    }

    /**
      * Checks whether the 'didtimeout' field has been set.
      * metrics-lib/TorperfResult: Boolean didTimeout()
      * @return True if the 'didtimeout' field has been set, false otherwise.
      */
    public boolean hasDidtimeout() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'didtimeout' field.
      * metrics-lib/TorperfResult: Boolean didTimeout()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDidtimeout() {
      didtimeout = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataperc10' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(10)
      * @return The value.
      */
    public java.lang.Long getDataperc10() {
      return dataperc10;
    }

    /**
      * Sets the value of the 'dataperc10' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(10)
      * @param value The value of 'dataperc10'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDataperc10(java.lang.Long value) {
      validate(fields()[16], value);
      this.dataperc10 = value;
      fieldSetFlags()[16] = true;
      return this; 
    }

    /**
      * Checks whether the 'dataperc10' field has been set.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(10)
      * @return True if the 'dataperc10' field has been set, false otherwise.
      */
    public boolean hasDataperc10() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'dataperc10' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(10)
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDataperc10() {
      dataperc10 = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataperc20' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(20)
      * @return The value.
      */
    public java.lang.Long getDataperc20() {
      return dataperc20;
    }

    /**
      * Sets the value of the 'dataperc20' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(20)
      * @param value The value of 'dataperc20'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDataperc20(java.lang.Long value) {
      validate(fields()[17], value);
      this.dataperc20 = value;
      fieldSetFlags()[17] = true;
      return this; 
    }

    /**
      * Checks whether the 'dataperc20' field has been set.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(20)
      * @return True if the 'dataperc20' field has been set, false otherwise.
      */
    public boolean hasDataperc20() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'dataperc20' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(20)
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDataperc20() {
      dataperc20 = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataperc30' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(30)
      * @return The value.
      */
    public java.lang.Long getDataperc30() {
      return dataperc30;
    }

    /**
      * Sets the value of the 'dataperc30' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(30)
      * @param value The value of 'dataperc30'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDataperc30(java.lang.Long value) {
      validate(fields()[18], value);
      this.dataperc30 = value;
      fieldSetFlags()[18] = true;
      return this; 
    }

    /**
      * Checks whether the 'dataperc30' field has been set.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(30)
      * @return True if the 'dataperc30' field has been set, false otherwise.
      */
    public boolean hasDataperc30() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'dataperc30' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(30)
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDataperc30() {
      dataperc30 = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataperc40' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(40)
      * @return The value.
      */
    public java.lang.Long getDataperc40() {
      return dataperc40;
    }

    /**
      * Sets the value of the 'dataperc40' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(40)
      * @param value The value of 'dataperc40'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDataperc40(java.lang.Long value) {
      validate(fields()[19], value);
      this.dataperc40 = value;
      fieldSetFlags()[19] = true;
      return this; 
    }

    /**
      * Checks whether the 'dataperc40' field has been set.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(40)
      * @return True if the 'dataperc40' field has been set, false otherwise.
      */
    public boolean hasDataperc40() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'dataperc40' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(40)
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDataperc40() {
      dataperc40 = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataperc50' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(50)
      * @return The value.
      */
    public java.lang.Long getDataperc50() {
      return dataperc50;
    }

    /**
      * Sets the value of the 'dataperc50' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(50)
      * @param value The value of 'dataperc50'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDataperc50(java.lang.Long value) {
      validate(fields()[20], value);
      this.dataperc50 = value;
      fieldSetFlags()[20] = true;
      return this; 
    }

    /**
      * Checks whether the 'dataperc50' field has been set.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(50)
      * @return True if the 'dataperc50' field has been set, false otherwise.
      */
    public boolean hasDataperc50() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'dataperc50' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(50)
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDataperc50() {
      dataperc50 = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataperc60' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(60)
      * @return The value.
      */
    public java.lang.Long getDataperc60() {
      return dataperc60;
    }

    /**
      * Sets the value of the 'dataperc60' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(60)
      * @param value The value of 'dataperc60'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDataperc60(java.lang.Long value) {
      validate(fields()[21], value);
      this.dataperc60 = value;
      fieldSetFlags()[21] = true;
      return this; 
    }

    /**
      * Checks whether the 'dataperc60' field has been set.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(60)
      * @return True if the 'dataperc60' field has been set, false otherwise.
      */
    public boolean hasDataperc60() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'dataperc60' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(60)
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDataperc60() {
      dataperc60 = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataperc70' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(70)
      * @return The value.
      */
    public java.lang.Long getDataperc70() {
      return dataperc70;
    }

    /**
      * Sets the value of the 'dataperc70' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(70)
      * @param value The value of 'dataperc70'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDataperc70(java.lang.Long value) {
      validate(fields()[22], value);
      this.dataperc70 = value;
      fieldSetFlags()[22] = true;
      return this; 
    }

    /**
      * Checks whether the 'dataperc70' field has been set.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(70)
      * @return True if the 'dataperc70' field has been set, false otherwise.
      */
    public boolean hasDataperc70() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'dataperc70' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(70)
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDataperc70() {
      dataperc70 = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataperc80' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(80)
      * @return The value.
      */
    public java.lang.Long getDataperc80() {
      return dataperc80;
    }

    /**
      * Sets the value of the 'dataperc80' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(80)
      * @param value The value of 'dataperc80'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDataperc80(java.lang.Long value) {
      validate(fields()[23], value);
      this.dataperc80 = value;
      fieldSetFlags()[23] = true;
      return this; 
    }

    /**
      * Checks whether the 'dataperc80' field has been set.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(80)
      * @return True if the 'dataperc80' field has been set, false otherwise.
      */
    public boolean hasDataperc80() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'dataperc80' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(80)
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDataperc80() {
      dataperc80 = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataperc90' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(90)
      * @return The value.
      */
    public java.lang.Long getDataperc90() {
      return dataperc90;
    }

    /**
      * Sets the value of the 'dataperc90' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(90)
      * @param value The value of 'dataperc90'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setDataperc90(java.lang.Long value) {
      validate(fields()[24], value);
      this.dataperc90 = value;
      fieldSetFlags()[24] = true;
      return this; 
    }

    /**
      * Checks whether the 'dataperc90' field has been set.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(90)
      * @return True if the 'dataperc90' field has been set, false otherwise.
      */
    public boolean hasDataperc90() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'dataperc90' field.
      * metrics-lib/TorperfResult: long SortedMap<Integer, Long> getDataPercentiles().get(90)
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearDataperc90() {
      dataperc90 = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'launch' field.
      * metrics-lib/TorperfResult: long getLaunchMillis()()
      * @return The value.
      */
    public java.lang.Long getLaunch() {
      return launch;
    }

    /**
      * Sets the value of the 'launch' field.
      * metrics-lib/TorperfResult: long getLaunchMillis()()
      * @param value The value of 'launch'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setLaunch(java.lang.Long value) {
      validate(fields()[25], value);
      this.launch = value;
      fieldSetFlags()[25] = true;
      return this; 
    }

    /**
      * Checks whether the 'launch' field has been set.
      * metrics-lib/TorperfResult: long getLaunchMillis()()
      * @return True if the 'launch' field has been set, false otherwise.
      */
    public boolean hasLaunch() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'launch' field.
      * metrics-lib/TorperfResult: long getLaunchMillis()()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearLaunch() {
      launch = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'used_at' field.
      * metrics-lib/TorperfResult: long getUsedAtMillis()
      * @return The value.
      */
    public java.lang.Long getUsedAt() {
      return used_at;
    }

    /**
      * Sets the value of the 'used_at' field.
      * metrics-lib/TorperfResult: long getUsedAtMillis()
      * @param value The value of 'used_at'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setUsedAt(java.lang.Long value) {
      validate(fields()[26], value);
      this.used_at = value;
      fieldSetFlags()[26] = true;
      return this; 
    }

    /**
      * Checks whether the 'used_at' field has been set.
      * metrics-lib/TorperfResult: long getUsedAtMillis()
      * @return True if the 'used_at' field has been set, false otherwise.
      */
    public boolean hasUsedAt() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'used_at' field.
      * metrics-lib/TorperfResult: long getUsedAtMillis()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearUsedAt() {
      used_at = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'path' field.
      * metrics-lib/TorperfResult: List<String> getPath()
      * @return The value.
      */
    public java.util.List<java.lang.String> getPath() {
      return path;
    }

    /**
      * Sets the value of the 'path' field.
      * metrics-lib/TorperfResult: List<String> getPath()
      * @param value The value of 'path'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setPath(java.util.List<java.lang.String> value) {
      validate(fields()[27], value);
      this.path = value;
      fieldSetFlags()[27] = true;
      return this; 
    }

    /**
      * Checks whether the 'path' field has been set.
      * metrics-lib/TorperfResult: List<String> getPath()
      * @return True if the 'path' field has been set, false otherwise.
      */
    public boolean hasPath() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'path' field.
      * metrics-lib/TorperfResult: List<String> getPath()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearPath() {
      path = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'buildtimes' field.
      * metrics-lib/TorperfResult: List<Long> getBuildTimes()
      * @return The value.
      */
    public java.util.List<java.lang.Long> getBuildtimes() {
      return buildtimes;
    }

    /**
      * Sets the value of the 'buildtimes' field.
      * metrics-lib/TorperfResult: List<Long> getBuildTimes()
      * @param value The value of 'buildtimes'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setBuildtimes(java.util.List<java.lang.Long> value) {
      validate(fields()[28], value);
      this.buildtimes = value;
      fieldSetFlags()[28] = true;
      return this; 
    }

    /**
      * Checks whether the 'buildtimes' field has been set.
      * metrics-lib/TorperfResult: List<Long> getBuildTimes()
      * @return True if the 'buildtimes' field has been set, false otherwise.
      */
    public boolean hasBuildtimes() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'buildtimes' field.
      * metrics-lib/TorperfResult: List<Long> getBuildTimes()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearBuildtimes() {
      buildtimes = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeout' field.
      * metrics-lib/TorperfResult: long getTimeout()
      * @return The value.
      */
    public java.lang.Long getTimeout() {
      return timeout;
    }

    /**
      * Sets the value of the 'timeout' field.
      * metrics-lib/TorperfResult: long getTimeout()
      * @param value The value of 'timeout'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setTimeout(java.lang.Long value) {
      validate(fields()[29], value);
      this.timeout = value;
      fieldSetFlags()[29] = true;
      return this; 
    }

    /**
      * Checks whether the 'timeout' field has been set.
      * metrics-lib/TorperfResult: long getTimeout()
      * @return True if the 'timeout' field has been set, false otherwise.
      */
    public boolean hasTimeout() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'timeout' field.
      * metrics-lib/TorperfResult: long getTimeout()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearTimeout() {
      timeout = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantile' field.
      * metrics-lib/TorperfResult: double getQuantile()
      * @return The value.
      */
    public java.lang.Double getQuantile() {
      return quantile;
    }

    /**
      * Sets the value of the 'quantile' field.
      * metrics-lib/TorperfResult: double getQuantile()
      * @param value The value of 'quantile'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setQuantile(java.lang.Double value) {
      validate(fields()[30], value);
      this.quantile = value;
      fieldSetFlags()[30] = true;
      return this; 
    }

    /**
      * Checks whether the 'quantile' field has been set.
      * metrics-lib/TorperfResult: double getQuantile()
      * @return True if the 'quantile' field has been set, false otherwise.
      */
    public boolean hasQuantile() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'quantile' field.
      * metrics-lib/TorperfResult: double getQuantile()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearQuantile() {
      quantile = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'circ_id' field.
      * metrics-lib/TorperfResult: int getCircId()
      * @return The value.
      */
    public java.lang.Integer getCircId() {
      return circ_id;
    }

    /**
      * Sets the value of the 'circ_id' field.
      * metrics-lib/TorperfResult: int getCircId()
      * @param value The value of 'circ_id'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setCircId(java.lang.Integer value) {
      validate(fields()[31], value);
      this.circ_id = value;
      fieldSetFlags()[31] = true;
      return this; 
    }

    /**
      * Checks whether the 'circ_id' field has been set.
      * metrics-lib/TorperfResult: int getCircId()
      * @return True if the 'circ_id' field has been set, false otherwise.
      */
    public boolean hasCircId() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'circ_id' field.
      * metrics-lib/TorperfResult: int getCircId()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearCircId() {
      circ_id = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'used_by' field.
      * metrics-lib/TorperfResult: int getUsedBy()
      * @return The value.
      */
    public java.lang.Integer getUsedBy() {
      return used_by;
    }

    /**
      * Sets the value of the 'used_by' field.
      * metrics-lib/TorperfResult: int getUsedBy()
      * @param value The value of 'used_by'.
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder setUsedBy(java.lang.Integer value) {
      validate(fields()[32], value);
      this.used_by = value;
      fieldSetFlags()[32] = true;
      return this; 
    }

    /**
      * Checks whether the 'used_by' field has been set.
      * metrics-lib/TorperfResult: int getUsedBy()
      * @return True if the 'used_by' field has been set, false otherwise.
      */
    public boolean hasUsedBy() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'used_by' field.
      * metrics-lib/TorperfResult: int getUsedBy()
      * @return This builder.
      */
    public convertor.encoders.torperf.Torperf.Builder clearUsedBy() {
      used_by = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    @Override
    public Torperf build() {
      try {
        Torperf record = new Torperf();
        record.descriptor_type = fieldSetFlags()[0] ? this.descriptor_type : (java.lang.String) defaultValue(fields()[0]);
        record.src_date = fieldSetFlags()[1] ? this.src_date : (java.lang.Long) defaultValue(fields()[1]);
        record.source = fieldSetFlags()[2] ? this.source : (java.lang.String) defaultValue(fields()[2]);
        record.filesize = fieldSetFlags()[3] ? this.filesize : (java.lang.Integer) defaultValue(fields()[3]);
        record.start = fieldSetFlags()[4] ? this.start : (java.lang.Long) defaultValue(fields()[4]);
        record.socket = fieldSetFlags()[5] ? this.socket : (java.lang.Long) defaultValue(fields()[5]);
        record.connect = fieldSetFlags()[6] ? this.connect : (java.lang.Long) defaultValue(fields()[6]);
        record.negotiate = fieldSetFlags()[7] ? this.negotiate : (java.lang.Long) defaultValue(fields()[7]);
        record.request = fieldSetFlags()[8] ? this.request : (java.lang.Long) defaultValue(fields()[8]);
        record.response = fieldSetFlags()[9] ? this.response : (java.lang.Long) defaultValue(fields()[9]);
        record.datarequest = fieldSetFlags()[10] ? this.datarequest : (java.lang.Long) defaultValue(fields()[10]);
        record.dataresponse = fieldSetFlags()[11] ? this.dataresponse : (java.lang.Long) defaultValue(fields()[11]);
        record.datacomplete = fieldSetFlags()[12] ? this.datacomplete : (java.lang.Long) defaultValue(fields()[12]);
        record.writebytes = fieldSetFlags()[13] ? this.writebytes : (java.lang.Integer) defaultValue(fields()[13]);
        record.readbytes = fieldSetFlags()[14] ? this.readbytes : (java.lang.Integer) defaultValue(fields()[14]);
        record.didtimeout = fieldSetFlags()[15] ? this.didtimeout : (java.lang.Boolean) defaultValue(fields()[15]);
        record.dataperc10 = fieldSetFlags()[16] ? this.dataperc10 : (java.lang.Long) defaultValue(fields()[16]);
        record.dataperc20 = fieldSetFlags()[17] ? this.dataperc20 : (java.lang.Long) defaultValue(fields()[17]);
        record.dataperc30 = fieldSetFlags()[18] ? this.dataperc30 : (java.lang.Long) defaultValue(fields()[18]);
        record.dataperc40 = fieldSetFlags()[19] ? this.dataperc40 : (java.lang.Long) defaultValue(fields()[19]);
        record.dataperc50 = fieldSetFlags()[20] ? this.dataperc50 : (java.lang.Long) defaultValue(fields()[20]);
        record.dataperc60 = fieldSetFlags()[21] ? this.dataperc60 : (java.lang.Long) defaultValue(fields()[21]);
        record.dataperc70 = fieldSetFlags()[22] ? this.dataperc70 : (java.lang.Long) defaultValue(fields()[22]);
        record.dataperc80 = fieldSetFlags()[23] ? this.dataperc80 : (java.lang.Long) defaultValue(fields()[23]);
        record.dataperc90 = fieldSetFlags()[24] ? this.dataperc90 : (java.lang.Long) defaultValue(fields()[24]);
        record.launch = fieldSetFlags()[25] ? this.launch : (java.lang.Long) defaultValue(fields()[25]);
        record.used_at = fieldSetFlags()[26] ? this.used_at : (java.lang.Long) defaultValue(fields()[26]);
        record.path = fieldSetFlags()[27] ? this.path : (java.util.List<java.lang.String>) defaultValue(fields()[27]);
        record.buildtimes = fieldSetFlags()[28] ? this.buildtimes : (java.util.List<java.lang.Long>) defaultValue(fields()[28]);
        record.timeout = fieldSetFlags()[29] ? this.timeout : (java.lang.Long) defaultValue(fields()[29]);
        record.quantile = fieldSetFlags()[30] ? this.quantile : (java.lang.Double) defaultValue(fields()[30]);
        record.circ_id = fieldSetFlags()[31] ? this.circ_id : (java.lang.Integer) defaultValue(fields()[31]);
        record.used_by = fieldSetFlags()[32] ? this.used_by : (java.lang.Integer) defaultValue(fields()[32]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
